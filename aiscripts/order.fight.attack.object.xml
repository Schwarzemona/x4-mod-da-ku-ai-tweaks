<?xml version="1.0" encoding="utf-8" ?>
<diff>
<!-- add. purpose: kaait data
	<params>
		<param name="allowothertargets" default="if this.ship.isplayerowned then false else true" />
-->
	<replace sel="//params/param[@name=&quot;allowothertargets&quot;]/@default">if (not this.assignedcontrolled.isplayerowned) then true else (if global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAllowOtherTargets_user? then global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAllowOtherTargets_user else false)</replace>
<!-- add. purpose: kaait data
	<params>
-->
	<add sel="//params">
		<param name="kAAITParam_iskAAITOrder" required="false" default="false" type="internal" />
		<param name="kAAITParam_isFromTactical" required="false" default="false" type="internal" />
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					(
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					(
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk_allFactions
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vShip and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vStation and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vShip_allFactions
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vStation_allFactions
				)
			) then true else false
		" />
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="bool" text="{1111920, 109}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					(
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					(
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk_allFactions
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vShip or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vShip) and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vStation or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vStation) and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vShip_allFactions or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vShip_allFactions)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vStation_allFactions or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vStation_allFactions)
				)
			) then true else false
		" />
	</add>
<!-- add before. purpose: show movement.
	<location condition="$primarytarget.canbeattacked" object="$primarytarget" additionalobjects="$secondarytargets"/>
-->
	<add pos="before" sel="//location[@condition=&quot;$primarytarget.canbeattacked&quot;][@object=&quot;$primarytarget&quot;][@additionalobjects=&quot;$secondarytargets&quot;]">
		<location object="@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_space" position="@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_pos" condition="@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_space and @global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_pos" />
		<location object="@$target" condition="@$target.canbeattacked" />
	</add>
<!-- replace. purpose: do not cancel attack due to kAAIT_MoveEngagePosition order.
	<check_all>
		<event_object_order_ready object="this.assignedcontrolled.commander" check="false"/>
		<check_value value="event.object.isoperational"/>
		<check_value value="event.param == event.object.order"/>
		<check_any>
			<check_value value="event.param.id != 'Attack'"/>
			<check_value value="event.param.$primarytarget != $primarytarget"/>
-->
	<replace sel="//check_value[@value=&quot;event.param.id != 'Attack'&quot;]">
		<check_all>
			<check_value value="event.param.id != 'Attack'" />
			<check_value value="not @event.param.$kAAITParam_iskAAITOrder" />
		</check_all>
	</replace>
	<replace sel="//check_value[@value=&quot;event.param.$primarytarget != $primarytarget&quot;]">
		<check_all>
			<check_value value="event.param.$primarytarget?" />
			<check_value value="@event.param.$primarytarget != $primarytarget" />
		</check_all>
	</replace>
<!-- add. purpose: debug
	<init>
-->
	<add pos="prepend" sel="//init">
		<!-- <set_value name="$debugchance" exact="100" /> -->
		<set_value name="$kAAIT_detail_debugChance" exact="100" />
		<debug_text text="@this.assignedcontrolled.idcode + ' EVENT init'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' then @global.$kAAIT_Data.$debugChance else 0" />
	</add>
<!-- add after.
	purpose: send attack command to subordinates immediately.
	purpose: check start avoid. i.e. gravidar events not soon enough if already near a big enemy
	<label name="start" />
-->
	<add pos="after" sel="//label[@name=&quot;start&quot;]">
		<do_if value="@$kAAITParam_isAvoidHighRisk and (not @global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$isIgnoreKAAIT)">
			<!-- send attack orders to subordinates immediately -->
			<do_if value="this.assignedcontrolled.subordinates.count">
				<set_value name="$kAAIT_target" exact="$primarytarget" />
				<do_if value="$kAAIT_target.defensible">
					<set_value name="$kAAIT_target" exact="$kAAIT_target.defensible"/>
				</do_if>
				<debug_text text="@this.assignedcontrolled.idcode + ' @$kAAIT_target: ' + @$kAAIT_target.knownname + ', ' + @$kAAIT_target.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' and $kAAIT_detail_debugChance then @global.$kAAIT_Data.$debugChance else 0" />
				<do_for_each name="$subordinate_inList" in="this.assignedcontrolled.subordinates">
					<do_if value="$subordinate_inList.assignment == assignment.attack">
						<set_value name="$kAAIT_target_attack" exact="$kAAIT_target" />
						<!-- <include_interrupt_actions ref="kAAIT_Order_AttackOther" /> -->
						<do_if value="not @global.$kAAITByShipId.{'$' + @$subordinate_inList.idcode}.$attackData.$defensibleTarget.isoperational">
							<set_value name="$kAAIT_isAttacking" exact="false" />
							<do_for_each name="$kAAIT_order" in="$subordinate_inList.orders">
								<do_if value="$kAAIT_order.id == 'Attack'">
									<set_value name="$kAAIT_isAttacking" exact="true" />
									<break />
								</do_if>
							</do_for_each>
							<do_if value="not $kAAIT_isAttacking">
								<create_order object="$subordinate_inList" id="'Attack'" immediate="true">
									<param name="primarytarget" value="$kAAIT_target_attack" />
									<param name="secondarytargets" value="$secondarytargets" />
									<param name="pursuedistance" value="$subordinate_inList.maxradarrange" />
									<param name="pursuetargets" value="$pursuetargets" />
									<!-- <param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
									<param name="kAAITParam_isStepForwardWithdraw" value="@$kAAITParam_isStepForwardWithdraw" /> -->
									<param name="debugchance" value="@$debugchance"/>
								</create_order>
							</do_if>
						</do_if>
					</do_if>
				</do_for_each>
			</do_if>
			<!-- init and test avoidance -->
			<include_interrupt_actions ref="kAAIT_Init" />
			<do_if value="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m]">
				<set_value name="$kAAIT_test_target_isAvoid" exact="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$defensibleTarget" />
			</do_if>
			<do_else>
				<set_value name="$kAAIT_test_target_isAvoid" exact="null" comment="defaults to find big enemies nearby" />
			</do_else>
			<include_interrupt_actions ref="kAAIT_AvoidOrNot" />
			<do_if value="@$kAAIT_result_avoidEnemy.isoperational">
				<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$kAAIT_result_avoidEnemy" />
				<include_interrupt_actions ref="kAAIT_Order_Avoid" />
			</do_if>
		</do_if>
	</add>
<!-- add. purpose: debug
	<do_if value="not $target">
-->
	<add pos="before" sel="//do_if[@value=&quot;not $target&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' $target: ' + @$target.knownname + ' ' + @$target.idcode + ' canbeattacked: ' + @$target.canbeattacked" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' and $kAAIT_detail_debugChance then @global.$kAAIT_Data.$debugChance else 0" />
	</add>
<!-- add before. purpose: update primarytarget
	<do_else>
		<set_command command="command.attackobject" param="if (not $target.isclass.defensible and $target.container) then $target.container else $target"/>
-->
	<add pos="before" sel="//do_else//set_command[@command=&quot;command.attackobject&quot;]">
		<do_if value="$target != $primarytarget and $target.defensible != $primarytarget">
			<edit_order_param order="this.assignedcontrolled.order" param="'primarytarget'" value="$target" />
		</do_if>
	</add>
<!-- add after.
	<label name="fight"/>
-->
	<add pos="after" sel="//label[@name=&quot;fight&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' LABEL fight'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' then @global.$kAAIT_Data.$debugChance else 0" />
		<do_if value="(@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw) and (not @global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$isIgnoreKAAIT)">
			<do_if value="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}?">
				<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_space" />
				<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_pos" />
			</do_if>
		</do_if>
	</add>
<!-- add before. purpose: debug.
	<run_script name="'move.generic'" result="$movesuccess">
-->
	<add pos="before" sel="//run_script[@name=&quot;'move.generic'&quot;][@result=&quot;$movesuccess&quot;]">
		<do_if value="(@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw) and (not @global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$isIgnoreKAAIT)">
			<debug_text text="@this.assignedcontrolled.idcode + ' target out of range. move to engage if station. otherwise use move generic.'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' then @global.$kAAIT_Data.$debugChance else 0" />
			<do_if value="
				$primarytarget.isclass.station and
				this.assignedcontrolled.bboxdistanceto.{$target} gt global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$combatRange_max and
				this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
				(
					this.assignedcontrolled.type != shiptype.carrier or
					(
						(
							this.isplayerowned and
							global.$kAAIT_Data.$isCarriersAttackLikeDestroyers
						) or
						(
							(not this.isplayerowned) and
							global.$kAAIT_Data.$isCarriersAttackLikeDestroyers_allFactions
						)
					)
				)
			">
				<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$target" />
				<include_interrupt_actions ref="kAAIT_Order_MoveToEngagePosition" />
			</do_if>
		</do_if>
	</add>
<!-- add. purpose: pass data to first move to target.
	<run_script name="'move.generic'" result="$movesuccess">
-->
	<add sel="//run_script[@name=&quot;'move.generic'&quot;]">
		<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
	</add>
<!-- replace. purpose: if ship has commander, find ships from the commander.
<do_if value="$allowothertargets">
	<find_ship name="$bigtargets" space="$target.sector" class="[class.ship_xl, class.ship_l]" owner="$target.owner" multiple="true">
		<match_distance object="this.assignedcontrolled" max="this.assignedcontrolled.currentradarrange"/>
	</find_ship>
	<find_ship name="$smalltargets" space="$target.sector" class="[class.ship_m, class.ship_s]" owner="$target.owner" multiple="true">
		<match_distance object="this.assignedcontrolled" max="this.assignedcontrolled.currentradarrange"/>
	</find_ship>
-->
	<replace sel="//do_if[@value=&quot;$allowothertargets&quot;]/find_ship[@name=&quot;$bigtargets&quot;]/match_distance[@object=&quot;this.assignedcontrolled&quot;]">
		<match_distance object="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander else this.assignedcontrolled" max="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander.currentradarrange else  this.assignedcontrolled.currentradarrange"/>
	</replace>
	<replace sel="//do_if[@value=&quot;$allowothertargets&quot;]/find_ship[@name=&quot;$smalltargets&quot;]/match_distance[@object=&quot;this.assignedcontrolled&quot;]">
		<match_distance object="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander else this.assignedcontrolled" max="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander.currentradarrange else  this.assignedcontrolled.currentradarrange"/>
	</replace>
<!-- add. purpose: pass data to DefensibleScript.
	<run_script name="$DefensibleScript">
-->
	<add pos="before" sel="//run_script[@name=&quot;$DefensibleScript&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' run_script ' + $DefensibleScript" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' then @global.$kAAIT_Data.$debugChance else 0" />
	</add>
	<add sel="//run_script[@name=&quot;$DefensibleScript&quot;]">
		<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
		<param name="kAAITParam_isStepForwardWithdraw" value="@$kAAITParam_isStepForwardWithdraw" />
	</add>
<!-- add after. purpose: cleanup.
	<label name="finish" />
-->
	<add pos="after" sel="//label[@name=&quot;finish&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' LABEL finish'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' then @global.$kAAIT_Data.$debugChance else 0" />
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<include_interrupt_actions ref="kAAIT_Deinit" />
		</do_if>
	</add>
<!-- add. purpose: cleanup.
	<on_abort>
-->
	<add sel="//on_abort">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<debug_text text="@this.assignedcontrolled.idcode + ' EVENT on_abort'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or @global.$kAAIT.$debugChance_idCode == 'all' then @global.$kAAIT_Data.$debugChance else 0" />
			<include_interrupt_actions ref="kAAIT_Deinit" />
		</do_if>
	</add>
	<!-- DeadAir Diffs -->
	<replace sel="/aiscript/attention[@min='unknown']/actions/wait[@exact='[((100 - this.assignedcontrolled.combinedskill) / 400)s, 1ms].max']/@exact">[1ms, 2ms].random</replace>
</diff>
