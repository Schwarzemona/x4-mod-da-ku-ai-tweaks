<?xml version="1.0" encoding="utf-8" ?>
<diff>
<!-- purpose: set allowothertargets from ship settings
	<param name="allowothertargets" default="if this.ship.isplayerowned then false else true" type="bool" text="{1041, 10010}" comment="Attack all enemies. Whether the script shall keep running when all primary targets have been destroyed. Default: true for non-player-owned ships" />
-->
	<replace sel="//params/param[@name=&quot;allowothertargets&quot;]">
	<param name="allowothertargets" default="
		if this.ship.isplayerowned
		then (
			if global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAllowOtherTargets_user?
			then global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAllowOtherTargets_user
			else false
		) else true" type="bool" text="{1041, 10010}" />
	</replace>
<!-- add. purpose: kaait data
	<params>
-->
	<add sel="//params">
		<param name="kAAITParam_iskAAITOrder" required="false" default="false" type="internal" />
		<param name="kAAITParam_isFromTactical" required="false" default="false" type="internal" />
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					(
						(not @this.assignedcontrolled.iscapitalship) or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					(
						(not @this.assignedcontrolled.iscapitalship) or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk_allFactions
				) or
				(
					this.assignedcontrolled.isplayerowned and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vShip and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vStation and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isAvoidHighRisk_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vShip_allFactions
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					@global.$kAAIT_Data.$lxl_isAvoidHighRisk_vStation_allFactions
				)
			) then true else false
		" />
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="bool" text="{1111920, 109}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					(
						(not @this.assignedcontrolled.iscapitalship) or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					(
						(not @this.assignedcontrolled.iscapitalship) or
						this.assignedcontrolled.primarypurpose != purpose.fight
					) and
					@global.$kAAIT_Data.$xssm_isAvoidHighRisk_allFactions
				) or
				(
					this.assignedcontrolled.isplayerowned and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vShip or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vShip) and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vStation or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vStation) and
					(
						(not global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user?) or
						@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$kAAIT_isStepForwardWithdraw_user
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vShip_allFactions or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vShip_allFactions)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					@this.assignedcontrolled.iscapitalship and
					($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
					(@global.$kAAIT_Data.$lxl_isStepForward_vStation_allFactions or @global.$kAAIT_Data.$lxl_isMoveOutOfRange_vStation_allFactions)
				)
			) then true else false
		" />
	</add>
<!-- add before. purpose: show movement.
	<location condition="$primarytarget.canbeattacked" object="$primarytarget" additionalobjects="$secondarytargets"/>
-->
	<add pos="before" sel="//location[@condition=&quot;$primarytarget.canbeattacked&quot;][@object=&quot;$primarytarget&quot;][@additionalobjects=&quot;$secondarytargets&quot;]">
		<location object="@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target"
			condition="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target? and
			global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target.defensible? and
			global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target.defensible == $primarytarget" />
		<location condition="$target?" object="$target" />
	</add>
<!-- replace. purpose: do not cancel attack due to kAAIT_MoveEngagePosition order.
	<check_all>
		<event_object_order_ready object="this.assignedcontrolled.commander" check="false"/>
		<check_value value="event.object.isoperational"/>
		<check_value value="event.param == event.object.order"/>
		<check_any>
			<check_value value="event.param.script != 'order.fight.attack.object'"/>
			<check_value value="event.param.$primarytarget != $primarytarget"/>
-->
	<replace sel="//check_value[@value=&quot;event.param.id != 'Attack' and event.param.id != 'Attack_Player'&quot;]">
		<check_all>
			<check_value value="event.param.script != 'order.fight.attack.object' and event.param.id != 'Attack_Player'" />
			<check_value value="not @event.param.$kAAITParam_iskAAITOrder" />
		</check_all>
	</replace>
	<replace sel="//check_value[@value=&quot;event.param.$primarytarget != $primarytarget&quot;]">
		<check_all>
			<check_value value="event.param.$primarytarget?" />
			<check_value value="@event.param.$primarytarget != $primarytarget" />
		</check_all>
	</replace>
<!-- add. purpose: add handlers.
	<interrupts>
-->
	<add pos="prepend" sel="//interrupts">
		<handler ref="kAAIT_CheckVersion" />
		<handler ref="kAAIT_Handler_OrderNewSubordinateToAttack" />
	</add>
<!-- add. purpose: debug
	<init>
-->
	<add pos="prepend" sel="//init">
		<debug_text text="@this.assignedcontrolled.idcode + ' EVENT init $primarytarget %s %s'.[$primarytarget.knownname, $primarytarget.idcode]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
		<debug_text text="@this.assignedcontrolled.idcode + ' EVENT init $target %s %s'.[@$target.knownname, @$target.idcode]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
<!-- add. purpose: kaait_start when updating kaait 
-->
	<add pos="before" sel="//label[@name=&quot;start&quot;]">
		<label name="kAAIT_label_start" />
		<set_value name="$kAAIT_isScriptHasAvoidLabel" exact="true" />
		<set_value name="$kAAIT_isScriptHasWithdrawLabel" exact="true" />
		<do_if value="(not this.assignedcontrolled.knownname) or this.assignedcontrolled.knownname == ''" comment="fix bug that removed names">
			<set_object_name object="this.assignedcontrolled" name="this.assignedcontrolled.macro.name" />
		</do_if>

		<resume label="start" />

		<label name="kAAIT_label_avoid" />
		<debug_text text="@this.assignedcontrolled.idcode + ' LABEL kAAIT_label_avoid'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
		<include_interrupt_actions ref="kAAIT_Order_Avoid" />
		<wait min="1s" max="3s" comment="stop this order from continuing as the new order is created" />
		<resume label="start" comment="in case the new order fails, do this" />

		<label name="kAAIT_label_withdraw" />
		<debug_text text="@this.assignedcontrolled.idcode + ' LABEL kAAIT_label_withdraw'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
		<include_interrupt_actions ref="kAAIT_Order_Withdraw" />
		<wait min="1s" max="3s" comment="stop this order from continuing as the new order is created" />
		<resume label="start" comment="in case the new order fails, do this" />

		<label name="kAAIT_label_move_to_engage_position" />
		<debug_text text="@this.assignedcontrolled.idcode + ' LABEL kAAIT_label_move_to_engage_position'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
		<include_interrupt_actions ref="kAAIT_Order_MoveToEngagePosition" />
		<wait min="1s" max="3s" comment="stop this order from continuing as the new order is created" />
		<resume label="start" comment="in case the new order fails, do this" />
	</add>
<!-- add. purpose: debug
	<set_value name="$skiptargetselection"/> x 3
	<do_if value="not $skiptargetselection?">
	<run_script name="'lib.target.selection'">
		<param name="debugchance" value="$debugchance"/>
	<do_if value="not $target">
-->
	<add pos="before" sel="(//set_value[@name=&quot;$skiptargetselection&quot;])[1]">
		<debug_text text="@this.assignedcontrolled.idcode + ' $skiptargetselection ($behaviorindex lt 5): ' + @$skiptargetselection + ' $target: ' + @$target.knownname + ' ' + @$target.idcode" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
	<add pos="before" sel="(//set_value[@name=&quot;$skiptargetselection&quot;])[2]">
		<debug_text text="@this.assignedcontrolled.idcode + ' $skiptargetselection ($disable): ' + @$skiptargetselection + ' $target: ' + @$target.knownname + ' ' + @$target.idcode" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
	<add pos="before" sel="(//set_value[@name=&quot;$skiptargetselection&quot;])[3]">
		<debug_text text="@this.assignedcontrolled.idcode + ' $skiptargetselection ($forceprimarytarget): ' + @$skiptargetselection + ' $target: ' + @$target.knownname + ' ' + @$target.idcode" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
	<add pos="before" sel="//do_if[@value=&quot;not $skiptargetselection?&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' $skiptargetselection?: ' + $skiptargetselection?" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
	<replace sel="//run_script[@name=&quot;'lib.target.selection'&quot;]/param[@name=&quot;debugchance&quot;][@value=&quot;$debugchance&quot;]/@value">if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)</replace>
	<add pos="after" sel="//run_script[@name=&quot;'lib.target.selection'&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' $target (from lib.target.selection): ' + @$target.knownname + ' ' + @$target.idcode + ' canbeattacked: ' + @$target.canbeattacked" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
	<add pos="before" sel="//do_if[@value=&quot;not $target&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' $target: ' + @$target.knownname + ' ' + @$target.idcode + ' canbeattacked: ' + @$target.canbeattacked" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
<!--
	==========================================================================
	do not change module target if previous module target is still operational
	==========================================================================
	skip target selection if previous target is still operational.
	this is required because kuda moves the ship, and target selection is always the nearest module
	<do_if value="not $skiptargetselection?">
-->
	<add pos="before" sel="//do_if[@value=&quot;not $skiptargetselection?&quot;]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<do_if value="
				(not $skiptargetselection?) and
				global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target? and
				global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target.isoperational and
				global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target.isclass.module">
				<do_if value="
					global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target? and
					global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target.isoperational">
					<debug_text text="@this.assignedcontrolled.idcode + ' $target (current) %s'.[@$target, @$target.knownname, @$target.idcode]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
					<set_value name="$skiptargetselection" />
					<debug_text text="@this.assignedcontrolled.idcode + ' $skiptargetselection (overriden by kuda) %s'.[$skiptargetselection]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
					<set_value name="$target" exact="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target" />
					<debug_text text="@this.assignedcontrolled.idcode + ' $target (overriden by kuda) %s'.[$target, $target.knownname, @$target.idcode]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				</do_if>
			</do_if>
		</do_if>
	</add>
<!--
	init, check avoidance.
	but do not actually avoid until just before the actual attack (<run_script name="$DefensibleScript">)
	so that other operations (e.g. order subordinates) can occur.
	<label name="fight"/>
-->
	<add pos="after" sel="//label[@name=&quot;fight&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' LABEL fight'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<include_interrupt_actions ref="kAAIT_InitAttackScript" />
			<do_if value="not @this.assignedcontrolled.iscapitalship">
				<set_value name="$kAAIT_test_target_isAvoid" exact="$target" />
			</do_if>
			<do_else>
				<set_value name="$kAAIT_test_target_isAvoid" exact="null" comment="defaults to find big enemies nearby" />
			</do_else>
			<include_interrupt_actions ref="kAAIT_GetAvoidOrNot" />
			<do_if value="@$kAAIT_result_avoidEnemy.isoperational or @$kAAIT_result_withdrawFromEnemy.isoperational">
				<do_if value="@$kAAIT_result_avoidEnemy.isoperational and @$kAAITParam_isAvoidHighRisk">
					<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$kAAIT_result_avoidEnemy" />
					<resume label="kAAIT_label_avoid" />
				</do_if>
				<do_elseif value="@$kAAIT_result_withdrawFromEnemy.isoperational and @$kAAITParam_isStepForwardWithdraw">
					<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$kAAIT_result_withdrawFromEnemy" />
					<resume label="kAAIT_label_withdraw" />
				</do_elseif>
			</do_if>
		</do_if>
		<do_if value="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_space?">
			<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_space" />
			<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_pos" />
		</do_if>
	</add>
<!--
	purpose: swap "move to target" then "order subordinates" to "order subordinates" then "move to target" (for kuda-enabled ships only).
	how? by setting a chance var that disables the use of the "move to target"
	then adding a copy of the "move to target" to after the "order subordinates" that IS enabled (with the chance var).
	why? because more often than not, the commander will be attacking (note the subordinates do not have their attack orders without the functions swapped)
	into the target without his subordinates.
	result: the subordinates WILL get the attack order before the commander moves into attack.
	note: the functions are only swapped on two conditions: (1) the ship is kuda-enabled, (2) the target is within 2 x maxradar range.
	reasoning: if the ship has acquired the attack order against the target, then the ship already "knows" of the target.
	there's no point in holding back subordinates' attack orders simply because the "cansee.{$target}" (i.e. in the ship's gravidar) property is false.
	the base-game implementation assumes the subordinates will stick to formation, but that is more often not the case.
	move to target node:
		<do_if value="this.assignedcontrolled.bboxdistanceto.{$target} gt $pursuedistance">
	order subordinates node:
		<do_if value="this.assignedcontrolled.subordinates.count and this.$escortgroup?">
-->
	<add pos="before" sel="//do_if[@value=&quot;this.assignedcontrolled.bboxdistanceto.{$target} gt $pursuedistance&quot;]">
		<set_value name="$kAAIT_isOrderThenMove" exact="false" />
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<set_value name="$kAAIT_isOrderThenMove" exact="this.assignedcontrolled.bboxdistanceto.{$target} le this.assignedcontrolled.maxradarrange * 2" />
		</do_if>
	</add>
	<add sel="//do_if[@value=&quot;this.assignedcontrolled.bboxdistanceto.{$target} gt $pursuedistance&quot;]" type="@chance">if $kAAIT_isOrderThenMove then 0 else 100</add>
	<add pos="after" sel="//do_if[@value=&quot;this.assignedcontrolled.subordinates.count and this.$escortgroup?&quot;]">
		<!--
			NOTE: copy the whole <do_if value="this.assignedcontrolled.bboxdistanceto.{$target} gt $pursuedistance"> block from base order.fight.attack.object.xml
			and then add chance="if $kAAIT_isOrderThenMove then 100 else 0"> to it as it is done below.
		-->
		<do_if value="this.assignedcontrolled.bboxdistanceto.{$target} gt $pursuedistance" chance="if $kAAIT_isOrderThenMove then 100 else 0">
			<!-- ... and i am allowed to pursue, -->
			<do_if value="$pursuetargets or (($escort or not $radius) and $refobject.bboxdistanceto.{$target} le $pursuedistance) or ($radius and $target.distanceto.[$radiusanchorspace, $radiusanchorpos] le $radius)">
				<debug_text text="'target out of range and we are allowed to pursue. distance to target: %skm pursuing.'.[$refobject.bboxdistanceto.{$target} / 1000]" chance="$debugchance"/>
				<!-- pursue. -->
				<!-- switched move.generic condition to seeing the target rather than being in the same zone. if target is in sight, rely on combat movement. -->
				<do_if value="not this.assignedcontrolled.cansee.{$target}">
					<run_script name="'move.generic'" result="$movesuccess">
						<param name="destination" value="$target"/>
						<param name="activepatrol" value="$allowothertargets and not $boardingbehavior"/>
						<param name="targetclasses" value="$targetclasses"/>
						<param name="recallsubordinates" value="false"/>
						<param name="radius" value="$radius"/>
						<param name="radiusanchorpos" value="$radiusanchorpos"/>
						<param name="radiusanchorspace" value="$radiusanchorspace"/>
						<param name="strictblacklist" value="$internalorder"/>
						<param name="pursuetargets" value="$pursuetargets"/>
						<param name="escort" value="$escort"/>
						<param name="pursuedistance" value="$pursuedistance"/>
						<param name="stopondetect" value="$target"/>
						<param name="enforceradius" value="$enforceradius"/>
						<param name="debugchance" value="$debugchance"/>
					</run_script>
					<!-- Target can be destroyed while flying to it -->
					<do_if value="not $target.exists or $target.iswreck">
						<debug_text text="'target was destroyed while we were in pursuit. breaking off attack.'" chance="$debugchance"/>
						<resume label="acquirenewtarget"/>
					</do_if>
					<do_elseif value="not $movesuccess">
						<do_if value="@this.assignedcontrolled.order.isrunning and not $internalorder">
							<set_order_failed order="this.assignedcontrolled.order" text="{1045, 101}" comment="Unable to reach destination."/>
						</do_if>
						<debug_text text="'Unable to move to target possibly due to blacklist. breaking off attack.'" chance="$debugchance"/>
						<resume label="acquirenewtarget"/>
					</do_elseif>
					<resume label="fight"/>
				</do_if>
			</do_if>
			<!-- ... if i am not allowed to pursue, -->
			<do_else>
				<!-- break off attack. -->
				<debug_text text="'target is either not in the same sector or not within my operational range and i am not authorized to pursue. breaking off attack.\n  my sector: %s\n target sector: %s\n distance to target: %s\n max distance in 10 minutes: %s\n pursue distance: %s'.[this.sector, $target.sector, $refobject.distanceto.{$target}, this.ship.maxspeed*600, $pursuedistance]" chance="$debugchance"/>
				<set_value name="$target" exact="null"/>
				<resume label="acquirenewtarget"/>
			</do_else>
		</do_if>
	</add>
<!-- add before. purpose: move to engage pos if required.
	note: because we're adding another "move to target", 2 of this diff is required.
	<run_script name="'move.generic'" result="$movesuccess">
-->
	<!-- <add pos="before" sel="(//run_script[@name=&quot;'move.generic'&quot;][@result=&quot;$movesuccess&quot;])[1]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<do_if value="this.assignedcontrolled.iscapitalship">
				<debug_text text="@this.assignedcontrolled.idcode + ' (1) target out of range. move to engage if station. otherwise use move generic.'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<set_value name="$kAAIT_test_moveToEngageTarget" exact="$target" />
				<include_interrupt_actions ref="kAAIT_GetIsMoveToEngage" />
				<do_if value="$kAAIT_result_isMovetoEngage">
					<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$target" />
					<resume label="kAAIT_label_move_to_engage_position" />
				</do_if>
			</do_if>
		</do_if>
	</add>
	<add pos="before" sel="(//run_script[@name=&quot;'move.generic'&quot;][@result=&quot;$movesuccess&quot;])[2]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<do_if value="this.assignedcontrolled.iscapitalship">
				<debug_text text="@this.assignedcontrolled.idcode + ' (2) target out of range. move to engage if station. otherwise use move generic.'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<set_value name="$kAAIT_test_moveToEngageTarget" exact="$target" />
				<include_interrupt_actions ref="kAAIT_GetIsMoveToEngage" />
				<do_if value="$kAAIT_result_isMovetoEngage">
					<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$target" />
					<resume label="kAAIT_label_move_to_engage_position" />
				</do_if>
			</do_if>
		</do_if>
	</add> -->
<!-- add. purpose: pass data to first move to target.
	note: because we're adding another "move to target", 2 of this diff is required.
	<run_script name="'move.generic'" result="$movesuccess">
-->
	<add sel="(//run_script[@name=&quot;'move.generic'&quot;][@result=&quot;$movesuccess&quot;])[1]">
		<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
	</add>
	<add sel="(//run_script[@name=&quot;'move.generic'&quot;][@result=&quot;$movesuccess&quot;])[2]">
		<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
	</add>
<!-- replace. purpose: if ship has commander, find ships from the commander.
<do_if value="$allowothertargets">
	<find_ship name="$bigtargets" space="$target.sector" class="[class.ship_xl, class.ship_l]" owner="$target.owner" multiple="true">
		<match_distance object="this.assignedcontrolled" max="this.assignedcontrolled.currentradarrange"/>
	</find_ship>
	<find_ship name="$smalltargets" space="$target.sector" class="[class.ship_m, class.ship_s]" owner="$target.owner" multiple="true">
		<match_distance object="this.assignedcontrolled" max="this.assignedcontrolled.currentradarrange"/>
	</find_ship>
-->
	<replace sel="//do_if[@value=&quot;$allowothertargets&quot;]/find_ship[@name=&quot;$bigtargets&quot;]/match_distance[@object=&quot;this.assignedcontrolled&quot;]">
		<match_distance object="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander else this.assignedcontrolled" max="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander.currentradarrange else  this.assignedcontrolled.currentradarrange"/>
	</replace>
	<replace sel="//do_if[@value=&quot;$allowothertargets&quot;]/find_ship[@name=&quot;$smalltargets&quot;]/match_distance[@object=&quot;this.assignedcontrolled&quot;]">
		<match_distance object="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander else this.assignedcontrolled" max="if @this.assignedcontrolled.commander.isoperational then this.assignedcontrolled.commander.currentradarrange else  this.assignedcontrolled.currentradarrange"/>
	</replace>
<!-- add. purpose: pass data to DefensibleScript.
	<run_script name="$DefensibleScript">
-->
	<add pos="before" sel="//run_script[@name=&quot;$DefensibleScript&quot;]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<debug_text text="@this.assignedcontrolled.idcode + ' $primarytarget %s %s %s'.[$primarytarget, $primarytarget.knownname, @$primarytarget.idcode]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $target %s %s %s'.[$target, $target.knownname, @$target.idcode]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $kAAIT_result_avoidEnemy: ' + @$kAAIT_result_avoidEnemy.knownname + ', ' + @$kAAIT_result_avoidEnemy.idcode" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<do_if value="@$kAAIT_result_avoidEnemy.isoperational and @$kAAITParam_isAvoidHighRisk">
				<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$kAAIT_result_avoidEnemy" />
				<include_interrupt_actions ref="kAAIT_Order_Avoid" />
			</do_if>
			<do_elseif value="@$kAAIT_result_withdrawFromEnemy.isoperational and @$kAAITParam_isStepForwardWithdraw">
				<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$kAAIT_result_withdrawFromEnemy" />
				<include_interrupt_actions ref="kAAIT_Order_Withdraw" />
			</do_elseif>
		</do_if>
		<debug_text text="@this.assignedcontrolled.idcode + ' run_script %s'.[$DefensibleScript]" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
	</add>
	<add sel="//run_script[@name=&quot;$DefensibleScript&quot;]">
		<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
		<param name="kAAITParam_isStepForwardWithdraw" value="@$kAAITParam_isStepForwardWithdraw" />
	</add>
<!-- add after. purpose: cleanup.
	<label name="finish" />
-->
	<add pos="after" sel="//label[@name=&quot;finish&quot;]">
		<debug_text text="@this.assignedcontrolled.idcode + ' LABEL finish'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<include_interrupt_actions ref="kAAIT_Deinit" />
		</do_if>
	</add>
<!-- add. purpose: cleanup.
	<on_abort>
-->
	<add sel="//on_abort">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<debug_text text="@this.assignedcontrolled.idcode + ' EVENT on_abort'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<include_interrupt_actions ref="kAAIT_Deinit" />
		</do_if>
	</add>
	
	<!-- DeadAir Diffs -->
</diff>
