<?xml version='1.0' encoding='utf-8'?>
<diff>
  <add sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/conditions/check_any[@comment='fight or flight']/check_all[@comment='flee']/check_any/check_all/check_any[1]">
    <check_value value="event.object.primarypurpose == purpose.trade or event.object.primarypurpose == purpose.mine"/>
  </add>
  <replace sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/conditions/check_any[@comment='fight or flight']/check_all[@comment='flee']/check_any/check_all/check_any[2]/check_value[@value='((this.skill.morale * 6) + ((event.object.primarypurpose == purpose.fight) * 20) + (event.object.shieldpercentage * 2)) lt 120']/@value">(event.object.primarypurpose == purpose.fight) and (event.object.shieldpercentage lt (10 + 10 * event.object.isclass.[class.ship_l] + 20 * event.object.isclass.[class.ship_m] + 30 * event.object.isclass.[class.ship_s]))</replace>
  <replace sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/conditions/check_any[@comment='fight or flight']/check_all[@comment='flee']/check_any/check_all/check_any[2]/check_value[@value='((event.object.combinedskill)hp - ((event.object.shield + event.object.hull) / [event.param.dps.all, 1hp].max)) gt 70']/@value">(event.object.primarypurpose == purpose.trade or event.object.primarypurpose == purpose.mine) and (event.object.shieldpercentage lt 80)</replace>
  <add sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/conditions/check_any[@comment='fight or flight']/check_all[@comment='flee']/check_any/check_all/check_any[2]">
    <check_value value="(event.object.primarypurpose != purpose.fight and event.object.primarypurpose != purpose.trade and event.object.primarypurpose != purpose.mine) and (event.object.shieldpercentage lt 60)"/>
  </add>
  <replace sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/conditions/check_any[@comment='fight or flight']/check_all[@comment='fight']/check_any/check_all/check_any/check_value[1]/@value">(@event.object.order.id != 'Attack') and (((this.trueowner == faction.xenon) or (this.trueowner == faction.khaak)) and (not (event.object.primarypurpose == purpose.trade or event.object.primarypurpose == purpose.mine)))</replace>
  <replace sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/conditions/check_any[@comment='fight or flight']/check_all[@comment='fight']/check_any/check_all/check_any/check_value[@value='((event.param.hull + event.param.shield) / [event.object.dps.all, 1hp].max) lt ((event.object.hull + event.object.shield) / [event.param.dps.all, 1hp].max)']/@value">((event.param.hull + event.param.shield) / [event.object.dps.all, 1hp].max) lt ((event.object.hull + event.object.shield) / [event.param.dps.all, 1hp].max) and (not (event.object.primarypurpose == purpose.trade or event.object.primarypurpose == purpose.mine))</replace>
  <replace sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/conditions/check_any[@comment='fight or flight']/check_all[@comment='call for help']/check_value[@value='event.object.zone.policefaction and (event.object.relationto.{event.object.zone.policefaction} ge 0)']/@value">event.object.zone.policefaction and (event.object.relationto.{event.object.zone.policefaction} ge [0,event.param.relationto.{event.object.zone.policefaction}].max)</replace>
  <replace sel="/aiscript/interrupts/library/handler[@name='AttackHandler']/actions/do_if[@value='event.object.hull']/do_elseif[@value='@$fleerespond']/do_else/do_any">
    <do_if value="true">
      <do_if value="event.object.primarypurpose == purpose.trade or event.object.primarypurpose == purpose.mine">
        <set_value name="$stations" exact="[]"/>
        <find_station name="$stations" functional="true" space="event.object.sector" sortbydistanceto="event.object">
          <match_relation_to object="event.object" relation="dock" comparison="ge"/>
          <match_relation_to object="event.param" relation="enemy" comparison="le"/>
        </find_station>
        <do_if value="@$stations.count">
          <do_all exact="$stations.count" counter="$a">
            <do_if value="(event.object.distanceto.{$stations.{$a}} le event.param.distanceto.{$stations.{$a}}) or (event.object.distanceto.{$stations.{$a}} lt event.object.maxradarrange)">
              <break/>
            </do_if>
            <do_elseif value="$a == $stations.count">
              <clear_list list="$stations"/>
            </do_elseif>
          </do_all>
          <remove_value name="$a"/>
        </do_if>
        <do_if value="not @$stations.count">
          <find_station name="$stations" functional="true" space="event.object.sector" sortbydistanceto="event.object">
            <match_relation_to object="event.object" relation="dock" comparison="ge"/>
          </find_station>
          <do_if value="@$stations.count">
            <do_all exact="$stations.count" counter="$a">
              <do_if value="(event.object.distanceto.{$stations.{$a}} le event.param.distanceto.{$stations.{$a}}) or (event.object.distanceto.{$stations.{$a}} lt event.object.maxradarrange)">
                <break/>
              </do_if>
              <do_elseif value="$a == $stations.count">
                <clear_list list="$stations"/>
              </do_elseif>
            </do_all>
            <remove_value name="$a"/>
          </do_if>
        </do_if>
        <do_if value="@$stations.count">
          <set_value name="$flee" exact="'dock'"/>
        </do_if>
        <do_else>
          <set_value name="$flee" exact="'boost'"/>
        </do_else>
        <remove_value name="$stations"/>
      </do_if>
      <do_else>
        <set_value name="$flee" exact="'boost'" weight="20"/>
        <set_value name="$flee" exact="'maneuver'" weight="20"/>
        <set_value name="$flee" exact="'highway'" weight="30"/>
        <set_value name="$flee" exact="'dock'" weight="30"/>
      </do_else>
    </do_if>
  </replace>
</diff>
