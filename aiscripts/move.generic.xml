<?xml version="1.0" encoding="utf-8" ?>
<diff>
	<!-- add. purpose: data store
	<params>
-->
	<add sel="//params">
		<param name="kAAIT_isActive" required="false" default="false" type="internal"/>
		<param name="kAAITParam_isAutoAdded" required="false" default="false" type="internal"/>
		<param name="kAAITParam_data" required="false" default="null" type="internal"/>
		<param name="kAAITParam_enemyAvoid" required="false" default="null" type="internal"/>
		<param name="kAAITParam_aroundDir" required="false" default="0" type="internal"/>
		<param name="kAAITParam_isSkipAvoidance" required="false" default="null" type="internal"/>
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="
			if (not this.assignedcontrolled.isunit) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					@global.$kAAIT_Config.$xssm_isAvoidHighRisk
				) or
				(
					this.assignedcontrolled.isplayerowned and
					@global.$kAAIT_Config.$lxl_isAvoidHighRisk
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					@global.$kAAIT_Config.$xssm_isAvoidHighRisk_allFactions
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					@global.$kAAIT_Config.$lxl_isAvoidHighRisk_allFactions
				)
			) then true else false
		"/>
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="bool" text="{1111920, 109}" default="
			if (not this.assignedcontrolled.isunit) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
					)
				)
			) then true else false
		"/>
	</add>
	<!-- add before at 5 instances. purpose: debug.
	<move_to>
-->
	<add pos="before" sel="(//move_to)[1]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (1) $kAAITParam_isSkipAvoidance: ' + @$kAAITParam_isSkipAvoidance" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0"/>
		</do_if>
	</add>
	<add pos="before" sel="(//move_to)[2]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (2) $kAAITParam_isSkipAvoidance: ' + @$kAAITParam_isSkipAvoidance" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0"/>
		</do_if>
	</add>
	<add pos="before" sel="(//move_to)[3]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (3) $kAAITParam_isSkipAvoidance: ' + @$kAAITParam_isSkipAvoidance" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0"/>
		</do_if>
	</add>
	<add pos="before" sel="(//move_to)[4]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (4) $kAAITParam_isSkipAvoidance: ' + @$kAAITParam_isSkipAvoidance" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0"/>
		</do_if>
	</add>
	<add pos="before" sel="(//move_to)[5]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (5) $kAAITParam_isSkipAvoidance: ' + @$kAAITParam_isSkipAvoidance" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0"/>
		</do_if>
	</add>
	<!-- add before. purpose: if enemy stations on the way, move elsewhere first.
	<do_if value="not $waitforsubordinates? and not $waitforatgate.isoperational and not this.zone.isclass.highway">
	<do_if value="$position"> (2nd instance)
	<do_if value="not @$rotation">
-->
	<add pos="before" sel="//do_if[@value=&quot;not $waitforsubordinates? and not $waitforatgate.isoperational and not this.zone.isclass.highway&quot;]">
		<do_if value="this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode and @global.$kAAIT_Config.$debugChance">
			<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_isSkipAvoidance (1): ' + @$kAAITParam_isSkipAvoidance"/>
		</do_if>
		<do_if value="
			(not @$kAAITParam_isSkipAvoidance) and
			@$kAAITParam_isAvoidHighRisk
		">
			<include_interrupt_actions ref="kAAIT_MoveAroundOrNot"/>
		</do_if>
	</add>
	<add pos="before" sel="(//do_if[@value=&quot;$position&quot;])[2]">
		<do_if value="this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode and @global.$kAAIT_Config.$debugChance">
			<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_isSkipAvoidance (2): ' + @$kAAITParam_isSkipAvoidance"/>
		</do_if>
		<do_if value="
			(not @$kAAITParam_isSkipAvoidance) and
			@$kAAITParam_isAvoidHighRisk
		">
			<include_interrupt_actions ref="kAAIT_MoveAroundOrNot"/>
		</do_if>
	</add>
	<add pos="before" sel="//do_if[@value=&quot;not @$rotation&quot;]">
		<do_if value="this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode and @global.$kAAIT_Config.$debugChance">
			<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_isSkipAvoidance (3): ' + @$kAAITParam_isSkipAvoidance"/>
		</do_if>
		<do_if value="
			(not @$kAAITParam_isSkipAvoidance) and
			@$kAAITParam_isAvoidHighRisk
		">
			<include_interrupt_actions ref="kAAIT_MoveAroundOrNot"/>
		</do_if>
	</add>
	<!-- add after. purpose: clean-up.
	<label name="finish"/>
-->
	<add pos="after" sel="//label[@name=&quot;finish&quot;]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<do_if value="this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode and @global.$kAAIT_Config.$debugChance">
				<debug_text text="this.assignedcontrolled.idcode + ' finish'"/>
			</do_if>
			<do_if value="@$kAAITParam_data">
				<do_if value="@$kAAITParam_data.$beacon_from.exists">
					<destroy_object object="$kAAITParam_data.$beacon_from"/>
				</do_if>
				<do_if value="@$kAAITParam_data.$beacon_to.exists">
					<destroy_object object="$kAAITParam_data.$beacon_to"/>
				</do_if>
				<do_if value="@$kAAITParam_data.$beacon_avoid1.exists">
					<destroy_object object="$kAAITParam_data.$beacon_avoid1"/>
				</do_if>
				<do_if value="@$kAAITParam_data.$beacon_avoid2.exists">
					<destroy_object object="$kAAITParam_data.$beacon_avoid2"/>
				</do_if>
				<remove_value name="$kAAITParam_data.$beacon_from"/>
				<remove_value name="$kAAITParam_data.$beacon_to"/>
				<remove_value name="$kAAITParam_data.$beacon_avoid1"/>
				<remove_value name="$kAAITParam_data.$beacon_avoid2"/>
				<!--
					set to remember.
					if this order was cancelled, then this will never be set,
					and any attack order that made this move will initialise when it runs again.
					this is ok, because this move order was cancelled.
				-->
				<set_value name="this.$kAAITParam_dataRemember" exact="$kAAITParam_data"/>
			</do_if>
		</do_if>
	</add>
	<!-- DeadAir Diffs -->
	<replace sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='this.sector != $targetsector or (this.zone != $targetzone and (not @$endzone or this.zone != $endzone) and ($endintargetzone or @$targetzone.isclass.highway or this.ship.bboxdistanceto.[$positionspace, $position, $destination] gt 10km))']/do_if[@value='$recallsubordinates and this.assignedcontrolled.subordinates.count and (@this.assignedcontrolled.order.state != orderstate.critical) and not this.$recalling_subordinates?']/do_for_each[@name='$locsub']/do_if[@value='$locsub.isoperational and this.assignedcontrolled.dockingallowed.{$locsub} and (not $locsub.dock or not $locsub.hascontext.{this.assignedcontrolled})']/@value">$locsub.isoperational and this.assignedcontrolled.dockingallowed.{$locsub} and (not $locsub.dock or not $locsub.hascontext.{this.assignedcontrolled}) and ($locsub.defaultorder? and (not (($locsub.assignment == assignment.assist) or ($locsub.defaultorder.id == 'Assist'))))</replace>
	<replace sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='this.sector != $targetsector or (this.zone != $targetzone and (not @$endzone or this.zone != $endzone) and ($endintargetzone or @$targetzone.isclass.highway or this.ship.bboxdistanceto.[$positionspace, $position, $destination] gt 10km))']/do_for_each[@name='$locship']/do_if[@value='$locship.isoperational and (not $locship.dock or not $locship.hascontext.{this.assignedcontrolled})']/@value">$locship.isoperational and (not $locship.dock or not $locship.hascontext.{this.assignedcontrolled}) and (not (($locship.assignment == assignment.assist) or ($locship.defaultorder.id == 'Assist')))</replace>
	<remove sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='this.sector != $targetsector or (this.zone != $targetzone and (not @$endzone or this.zone != $endzone) and ($endintargetzone or @$targetzone.isclass.highway or this.ship.bboxdistanceto.[$positionspace, $position, $destination] gt 10km))']/do_if[@value='$intersector? and not @this.zone.isclass.highway and (@$waitforsubordinates or $waitforatgate or this.assignedcontrolled.iscapitalship)']/do_if[@value='not $waitforsubordinates? and not $waitforatgate.isoperational and not this.zone.isclass.highway']"/>
	<remove sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='this.sector != $targetsector or (this.zone != $targetzone and (not @$endzone or this.zone != $endzone) and ($endintargetzone or @$targetzone.isclass.highway or this.ship.bboxdistanceto.[$positionspace, $position, $destination] gt 10km))']/do_else/wait[@max='(not $bigship) * (5.1 - (this.ship.pilot.skill.piloting / 3))s']/@max"/>
	<add sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='this.sector != $targetsector or (this.zone != $targetzone and (not @$endzone or this.zone != $endzone) and ($endintargetzone or @$targetzone.isclass.highway or this.ship.bboxdistanceto.[$positionspace, $position, $destination] gt 10km))']/do_else/wait" type="@exact">0.5s</add>
	<add sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='this.sector != $targetsector or (this.zone != $targetzone and (not @$endzone or this.zone != $endzone) and ($endintargetzone or @$targetzone.isclass.highway or this.ship.bboxdistanceto.[$positionspace, $position, $destination] gt 10km))']/do_else/do_if[@value='$position']/move_to" pos="before">
		<do_if value="this.assignedcontrolled.dock and this.assignedcontrolled.pilot">
			<do_if value="@this.assignedcontrolled.order.id != 'Undock' or @this.assignedcontrolled.order.id != 'DockAt' or @this.assignedcontrolled.order.id != 'DockAndWait'">
				<run_script name="'move.undock'">
					<param name="uselaunchtubes" value="true"/>
				</run_script>
				<debug_text text="'MOD: DeadAirAITweaks -- %1 -- Undocking ship with move order: %2'.[player.age,this.assignedcontrolled.idcode]" context="false" filter="scripts" chance="100"/>
			</do_if>
		</do_if>
	</add>
	<add sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='this.sector != $targetsector or (this.zone != $targetzone and (not @$endzone or this.zone != $endzone) and ($endintargetzone or @$targetzone.isclass.highway or this.ship.bboxdistanceto.[$positionspace, $position, $destination] gt 10km))']/do_else/do_else/move_to" pos="before">
		<do_if value="this.assignedcontrolled.dock and this.assignedcontrolled.pilot">
			<do_if value="@this.assignedcontrolled.order.id != 'Undock' or @this.assignedcontrolled.order.id != 'DockAt' or @this.assignedcontrolled.order.id != 'DockAndWait'">
				<run_script name="'move.undock'">
					<param name="uselaunchtubes" value="true"/>
				</run_script>
				<debug_text text="'MOD: DeadAirAITweaks -- %1 -- Undocking ship with move order: %2'.[player.age,this.assignedcontrolled.idcode]" context="false" filter="scripts" chance="100"/>
			</do_if>
		</do_if>
	</add>
	<add sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='not @$rotation']" pos="before">
		<do_if value="this.assignedcontrolled.dock and this.assignedcontrolled.pilot">
			<do_if value="@this.assignedcontrolled.order.id != 'Undock' or @this.assignedcontrolled.order.id != 'DockAt' or @this.assignedcontrolled.order.id != 'DockAndWait'">
				<run_script name="'move.undock'">
					<param name="uselaunchtubes" value="true"/>
				</run_script>
				<debug_text text="'MOD: DeadAirAITweaks -- %1 -- Undocking ship with move order: %2'.[player.age,this.assignedcontrolled.idcode]" context="false" filter="scripts" chance="100"/>
			</do_if>
		</do_if>
	</add>
	<add sel="/aiscript/attention[@min='unknown']/actions/do_if[@value='not @$rotation']/do_if[@value='this.ship.distanceto.[$positionspace, $safepos] gt this.ship.size']/move_to" type="@travel">(not $noboost) and (this.assignedcontrolled.distanceto.[$positionspace, $safepos] gt 15km)</add>
	<add sel="/aiscript/attention[@min='unknown']/actions/do_else[4]/move_to" type="@travel">(not $noboost) and (this.assignedcontrolled.distanceto.[$positionspace, $safepos] gt 15km)</add>
</diff>
