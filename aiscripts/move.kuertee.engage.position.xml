<?xml version="1.0" encoding="utf-8" ?>
<aiscript name="move.kuertee.engage.position" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd" version="18">
	<order id="kAAIT_MoveEngagePosition" name="{1111920, 106}" description="{1111920, 126}" category="internal">
		<params>
			<param name="target" required="true" type="object" text="{1041, 10126}" comment="target" />
			<param name="kAAITParam_iskAAITOrder" required="false" default="true" type="internal" />
			<param name="debugchance" type="bool" default="0" advanced="true" text="{1041, 10086}" comment="Print debug output">
				<input_param name="truevalue" value="100"/>
			</param>
		</params>
		<requires>
			<match shiptype="shiptype.lasertower" negate="true"/>
		</requires>
		<location
			object="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestination"
			position="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestinationPosition"
			condition="@global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestination
				and @global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestinationPosition"/>
		<location object="$map_space" position="$map_pos" condition="$map_space? and $map_pos?" comment="$map_space/pos MAY BE DIFFERENT FROM $moveTo_space/pos" />
		<location object="$target" condition="$target" />
	</order>
	<interrupts>
		<library>
			<actions name="GetMoveToEngagePosition">
				<set_value name="$yaw_jitter" exact="0" />
				<do_if value="@$isJitter">
					<remove_value name="$isJitter" />
					<set_value name="$shipIndex" exact="@this.assignedcontrolled.commander.allsubordinates.indexof.{this.assignedcontrolled}" />
					<do_if value="$shipIndex">
						<do_if value="$shipIndex / 2 == $shipIndex / 2.0">
							<set_value name="$yaw_jitter" exact="$shipIndex * 1.5" />
						</do_if>
						<do_else>
							<set_value name="$yaw_jitter" exact="$shipIndex * -1.5" />
						</do_else>
					</do_if>
				</do_if>
				<debug_text text="@this.assignedcontrolled.idcode + ' GetMoveToEngagePosition $yaw_jitter: ' + $yaw_jitter" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<set_value name="$yaw_deg" exact="$yaw_engage + $yaw_jitter" />
				<debug_text text="@this.assignedcontrolled.idcode + ' GetMoveToEngagePosition $yaw_deg: ' + $yaw_deg" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<set_value name="$pitch_deg" min="-15" max="15" />
				<set_value name="$yaw" exact="$yaw_deg * pi / 180" />
				<set_value name="$pitch" exact="$pitch_deg * pi / 180" />
				<create_position name="$kAAIT_result_moveToEngagePosition"
					x="$posTarget.x + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * sin ($yaw) * cos ($pitch)"
					y="$posTarget.y + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * sin ($pitch) + [-5m, -2.5m, 0, 2.5m, 5m].random"
					z="$posTarget.z + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * cos ($yaw) * cos ($pitch)"
				/>
				<create_position name="$kAAIT_test_position_getIsNearBigEnemy" space="this.assignedcontrolled" object="this.sector" value="$kAAIT_result_moveToEngagePosition" />
				<set_value name="$kAAIT_ignore_objects_getIsNearBigEnemies" exact="[$target, @$target.defensible]" />
				<include_interrupt_actions ref="kAAIT_GetIsNearBigEnemies" />
				<do_if value="@$kAAIT_result_isShipNearBigEnemy" comment="yaw movement will result in ship being near a big enemy, add a pitch component">
					<debug_text text="@this.assignedcontrolled.idcode + ' GetMoveToEngagePosition yaw movement will result in near big enemy, trying with pitch'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
					<create_position name="$posShip" space="this.sector" object="this.assignedcontrolled" />
					<create_position name="$posTarget" space="this.sector" object="$target" />
					<create_position name="$posBigEnemy" space="this.sector" object="$kAAIT_result_bigEnemy" />
					<create_orientation name="$rotTargetToBigEnemy" orientation="look_at" refposition="$posBigEnemy">
						<position value="$posTarget" />
					</create_orientation>
					<set_value name="$pitch_toBigEnemy" exact="$rotTargetToBigEnemy.pitch * 180 / pi" />
					<debug_text text="@this.assignedcontrolled.idcode + ' GetMoveToEngagePosition $pitch_toBigEnemy: ' + $pitch_toBigEnemy" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
					<do_if value="$pitch_toBigEnemy le 0" comment="pitch up">
						<set_value name="$pitch" exact="60 * pi / 180" />
					</do_if>
					<do_else comment="pitch down">
						<set_value name="$pitch" exact="-60 * pi / 180" />
					</do_else>
					<debug_text text="@this.assignedcontrolled.idcode + ' GetMoveToEngagePosition $pitch: ' + ($pitch * 180 / pi)" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
					<create_position name="$kAAIT_result_moveToEngagePosition"
						x="$posTarget.x + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * sin ($yaw) * cos ($pitch)"
						y="$posTarget.y + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * sin ($pitch)"
						z="$posTarget.z + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * cos ($yaw) * cos ($pitch)"
					/>
					<!-- <create_position name="$kAAIT_test_position_getIsNearBigEnemy" space="this.assignedcontrolled" object="this.sector" value="$kAAIT_result_moveToEngagePosition" />
					<set_value name="$kAAIT_ignore_objects_getIsNearBigEnemies" exact="[$target, @$target.defensible]" />
					<include_interrupt_actions ref="kAAIT_GetIsNearBigEnemies" />
					<do_if value="@$kAAIT_result_isShipNearBigEnemy" comment="yaw and pitch movement will result in ship being near a big enemy, engage pos is this current heading">
						<debug_text text="@this.assignedcontrolled.idcode + ' GetMoveToEngagePosition yaw and pitch movement will result in near big enemy, keep this heading'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
						<create_orientation name="$rotTargetToShip" orientation="look_at" refposition="$posShip">
							<position value="$posTarget" />
						</create_orientation>
						<create_position name="$kAAIT_result_moveToEngagePosition"
							x="$posTarget.x + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * sin ($rotTargetToShip.yaw) * cos ($rotTargetToShip.pitch)"
							y="$posTarget.y + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * sin ($rotTargetToShip.pitch)"
							z="$posTarget.z + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom * cos ($rotTargetToShip.yaw) * cos ($rotTargetToShip.pitch)"
						/>
					</do_if> -->
				</do_if>
			</actions>
		</library>
		<handler ref="DisengageHandler"/>
		<handler ref="kAAIT_Handler_NewBigTarget" />
		<handler comment="target destroyed">
			<conditions>
				<check_any>
					<event_object_destroyed object="$target" check="false" />
					<event_object_destroyed object="$defensibleTarget" check="false" />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="@this.assignedcontrolled.idcode + ' event.name: ' + event.name" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<abort_called_scripts resume="finish" />
			</actions>
		</handler>
	</interrupts>
	<init>
		<debug_text text="@this.assignedcontrolled.idcode + ' init'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
		<!-- required for disengage handler -->
		<set_value name="$pursuetargets" exact="false" />
		<set_value name="$pursuedistance" exact="this.assignedcontrolled.maxradarrange" />
		<set_value name="$debugchance" exact="0" />
		<!-- required for custom handlers -->
		<set_value name="$defensibleTarget" exact="null" />
	</init>
	<attention min="unknown">
		<actions>
			<resume label="start" />

			<label name="kAAIT_label_avoid" />
			<debug_text text="@this.assignedcontrolled.idcode + ' LABEL kAAIT_label_avoid'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<include_interrupt_actions ref="kAAIT_Order_Avoid" />
			<wait min="1s" max="3s" comment="stop this order from continuing as the new order is created" />
			<resume label="start" comment="in case the new order fails, do this" />

			<label name="start" />
			<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestination" />
			<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestinationPosition"/>
			<debug_text text="@this.assignedcontrolled.idcode + ' LABEL start'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<do_if value="not $kAAIT_original_name?">
				<set_value name="$kAAIT_original_name" exact="this.assignedcontrolled.knownname" />
			</do_if>
			<do_if value="$target.defensible">
				<set_value name="$defensibleTarget" exact="$target.defensible" />
			</do_if>
			<do_else>
				<set_value name="$defensibleTarget" exact="$target" />
			</do_else>
			<debug_text text="@this.assignedcontrolled.idcode + ' $target: ' + @$target.knownname + ' ' + @$target.idcode + ', ' + @$target.isoperational" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $defensibleTarget: ' + @$defensibleTarget.knownname + ' ' + @$defensibleTarget.idcode + ', ' + @$defensibleTarget.isoperational" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<!-- <do_if value="(not @$target.isoperational) or (not @$defensibleTarget.isoperational)"> -->
			<do_if value="not @$defensibleTarget.isoperational">
				<resume label="finish" />
			</do_if>

			<do_if value="@this.assignedcontrolled.isoperational and @global.$kAAIT_Data.$debugChance and @this.assignedcontrolled.order.script == 'move.kuertee.engage.position'">
				<debug_text text="@this.assignedcontrolled.idcode + ' set_object_name kAAIT'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<set_object_name object="this.assignedcontrolled" name="$kAAIT_original_name + ' - kAAIT move to engage position'" />
			</do_if>
			<include_interrupt_actions ref="kAAIT_Init" />
			<!-- <set_flight_behaviour object="this.assignedcontrolled" flightbehaviour="flightbehaviour.gaindistance" /> -->

			<label name="fight" comment="required for DisengageHandler. $disengage_pursue resumes at fight label. in this case, just restart." />
			<debug_text text="@this.assignedcontrolled.idcode + ' LABEL fight'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />

			<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$defensibleTarget_stoppedKamikaze" exact="$defensibleTarget" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $defensibleTarget_stoppedKamikaze: ' + global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$defensibleTarget_stoppedKamikaze" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />

			<label name="move_to_target" />
			<do_if value="this.sector != $defensibleTarget.sector">
				<debug_text text="@this.assignedcontrolled.idcode + ' LABEL move_to_target sector'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<run_script name="'move.generic'" result="$movesuccess">
					<param name="destination" value="$defensibleTarget.sector" />
					<param name="stopondetect" value="$defensibleTarget.sector"/>
					<param name="kAAITParam_iskAAITOrder" value="true" />
				</run_script>
				<wait min="(0.5s)" max="1s" comment="stop this order from continuing as the new order is created" />
				<do_if value="not $movesuccess">
					<resume label="start" />
				</do_if>
			</do_if>

			<do_if value="this.assignedcontrolled.bboxdistanceto.{$target} gt this.assignedcontrolled.maxradarrange">
				<debug_text text="@this.assignedcontrolled.idcode + ' LABEL move_to_target position'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<create_position name="$posShip" space="this.sector" object="this.assignedcontrolled" />
				<create_position name="$posTarget" space="this.sector" object="$defensibleTarget" />
				<create_orientation name="$rotFromTargettoShip" orientation="look_at" refposition="$posShip">
					<position value="$posTarget" />
				</create_orientation>
				<set_value name="$kAAIT_targetCentreToEdgeDist" exact="abs($target.distanceto.{this.assignedcontrolled} - $target.bboxdistanceto.{this.assignedcontrolled})" />
				<debug_text text="@this.assignedcontrolled.idcode + ' KAAIT_GetEngagePosDistance $kAAIT_targetCentreToEdgeDist: ' + $kAAIT_targetCentreToEdgeDist" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<create_position name="$posMoveTo"
					x="$posTarget.x + ($kAAIT_targetCentreToEdgeDist + this.assignedcontrolled.maxradarrange * 0.5) * sin ($rotFromTargettoShip.yaw) * cos ($rotFromTargettoShip.pitch)"
					y="$posTarget.y + ($kAAIT_targetCentreToEdgeDist + this.assignedcontrolled.maxradarrange * 0.5) * sin ($rotFromTargettoShip.pitch)"
					z="$posTarget.z + ($kAAIT_targetCentreToEdgeDist + this.assignedcontrolled.maxradarrange * 0.5) * cos ($rotFromTargettoShip.yaw) * cos ($rotFromTargettoShip.pitch)"
				/>
				<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestination" exact="this.sector" />
				<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestinationPosition" exact="$posMoveTo" />
				<run_script name="'move.generic'" result="$movesuccess">
					<param name="destination" value="this.sector" />
					<param name="position" value="$posMoveTo" />
					<param name="stopondetect" value="$defensibleTarget"/>
				</run_script>
				<wait min="(0.5s)" max="1s" comment="stop this order from continuing as the new order is created" />
				<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestination" />
				<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$forced_avoidDestinationPosition" />
				<do_if value="not $movesuccess">
					<resume label="start" />
				</do_if>
			</do_if>

			<label name="move_to_engage_position" />
			<debug_text text="@this.assignedcontrolled.idcode + ' LABEL move_to_engage_position'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />

			<set_value name="$moveTo_space" exact="this.sector" />
			<create_position name="$posShip" space="$moveTo_space" object="this.assignedcontrolled" />
			<create_position name="$posTarget" space="$moveTo_space" object="$target" />

			<!-- start: get distance from target -->
			<include_interrupt_actions ref="KAAIT_GetEngagePosDistance" />
			<set_value name="$kAAIT_engagePosDist" exact="$kAAIT_result_engagePosDist" />
			<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom" exact="$kAAIT_result_engagePosDist" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $attackData.$distance_attackFrom: ' + @global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$distance_attackFrom" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<!-- end: get distance from target -->

			<!-- start: see if there's a big enemy in the way first -->
			<include_interrupt_actions ref="kAAIT_SaveBigEnemiesToData" />
			<include_interrupt_actions ref="kAAIT_GetIsNearBigEnemies" />
			<debug_text text="@this.assignedcontrolled.idcode + ' kAAIT_GetAvoidOrNot $kAAIT_result_bigEnemy: ' + @$kAAIT_result_bigEnemy.knownname + ' ' + @$kAAIT_result_bigEnemy.idcode" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<do_if value="@$kAAIT_result_bigEnemy.isoperational">
				<do_if value="$kAAIT_result_bigEnemy != @$target and $kAAIT_result_bigEnemy != @$target.defensible">
					<set_value name="$kAAIT_test_target_isInTheWay" exact="$kAAIT_result_bigEnemy" />
					<set_value name="$kAAIT_test_target_isInTheWayOf" exact="$target" />
					<include_interrupt_actions ref="kAAIT_GetIsInTheWay" />
					<do_if value="$kAAIT_result_isTargetInTheWay">
						<set_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$target_avoid" exact="$kAAIT_result_bigEnemy" />
						<resume label="kAAIT_label_avoid" />
					</do_if>
				</do_if>
			</do_if>
			<!-- end: see if there's a big enemy in the way first -->

			<set_value name="$yaw_engage" exact="null" />
			<do_if value="$target.isclass.module">
				<set_value name="$kAAIT_result_isTargetInTheWay" exact="false" />
				<!-- GET NEAREST MODULE AND SET TO $kAAIT_nearestModule -->
				<set_value name="$kAAIT_nearestModule" exact="null" />
				<do_if value="$defensibleTarget.isclass.station">
					<!-- <find_module name="$kAAIT_nearestModule" object="$defensibleTarget" checkoperational="false" indestructible="true" invulnerable="false" sortbydistanceto="this.assignedcontrolled" multiple="false" /> -->
					<find_module name="$kAAIT_nearestModule" checkoperational="false" object="$target.defensible" />
					<debug_text text="@this.assignedcontrolled.idcode + ' $kAAIT_nearestModule ' + @$kAAIT_nearestModule.knownname + ' ' + @$kAAIT_nearestModule.idcode" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
					<do_if value="$kAAIT_nearestModule and $kAAIT_nearestModule != $target">
						<set_value name="$kAAIT_test_target_isInTheWay" exact="$kAAIT_nearestModule" />
						<set_value name="$kAAIT_test_target_isInTheWayOf" exact="$target" />
						<set_value name="$kAAIT_test_target_isInTheWay_radarMult" exact="1.5" comment="a toggle. resets to 1 after first use. used in determining obstacle distance in kAAIT_GetIsInTheWay. set in move.kuertee.engage.position." />
						<include_interrupt_actions ref="kAAIT_GetIsInTheWay" />
					</do_if>
				</do_if>
				<do_if value="$kAAIT_result_isTargetInTheWay">
					<!-- ANGLE 1 = FIND ANGLE FROM $defensibleTarget to $posShip
					ANGLE 2 = FIND ANGLE FROM $defensibleTarget to $target
					ANGLE 1 IS SHIP'S DESTINATION
					IF ANGLE DIFF IS > 45, then TAKE 45 DEG FROM ANGLE 2 TOWARDS ANGLE 1 -->
					<create_position name="$posDefensibleTarget" space="this.sector" object="$defensibleTarget" />
					<create_orientation name="$rotDefensibleTargetToShip" orientation="look_at" refposition="$posShip">
						<position value="$posDefensibleTarget" />
					</create_orientation>
					<create_orientation name="$rotDefensibleTargetToTarget" orientation="look_at" refposition="$posTarget">
						<position value="$posDefensibleTarget" />
					</create_orientation>
					<set_value name="$yaw_1" exact="$rotDefensibleTargetToShip.yaw * 180 / pi" />
					<set_value name="$yaw_2" exact="$rotDefensibleTargetToTarget.yaw * 180 / pi" />
					<set_value name="$kAAIT_angle_from" exact="$yaw_1" />
					<set_value name="$kAAIT_angle_to" exact="$yaw_2" />
					<include_interrupt_actions ref="kAAIT_GetAngleDiffAndMid" />
					<do_if value="abs($kAAIT_angle_diff) gt 45">
						<set_value name="$kAAIT_angle_to" exact="$kAAIT_angle_mid" />
						<set_value name="$kAAIT_midAngleFactorMult" exact="1" />
						<set_value name="$kAAIT_midAngleDiffMax" exact="45" />
						<include_interrupt_actions ref="kAAIT_GetAngleDiffAndMid" />
					</do_if>
					<set_value name="$yaw_engage" exact="$kAAIT_angle_mid" />
					<debug_text text="@this.assignedcontrolled.idcode + ' $yaw_engage (other module in the way of target module): ' + $yaw_engage" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
					<set_value name="$isJitter" exact="true" />
				</do_if>
			</do_if>
			<do_if value="not $yaw_engage">
				<create_orientation name="$rotFromTarget" orientation="look_at" refposition="$posShip">
					<position value="$posTarget" />
				</create_orientation>
				<set_value name="$yaw_engage" exact="$rotFromTarget.yaw * 180 / pi" />
				<debug_text text="@this.assignedcontrolled.idcode + ' $yaw_engage (target is not a module or no other module obstacle to target module): ' + $yaw_engage" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			</do_if>

			<include_interrupt_actions ref="GetMoveToEngagePosition" />
			<set_value name="$moveTo_space" exact="$target.sector" />
			<set_value name="$moveTo_pos" exact="$kAAIT_result_moveToEngagePosition" />
			<create_orientation name="$moveTo_rot" orientation="look_at" refposition="$posTarget">
				<position value="$moveTo_pos" />
			</create_orientation>

			<set_value name="$dist" exact="this.assignedcontrolled.bboxdistanceto.[$moveTo_space, $moveTo_pos]" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $dist: ' + $dist" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<debug_text text="@this.assignedcontrolled.idcode + ' move_to start'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<set_value name="$map_space" exact="$moveTo_space" />
			<set_value name="$map_pos" exact="$moveTo_pos" />
			<set_value name="global.$kAAITByShipId.{'$' + this.assignedcontrolled.idcode}.$attackData.$orderLocation_space" exact="$moveTo_space" />
			<set_value name="global.$kAAITByShipId.{'$' + this.assignedcontrolled.idcode}.$attackData.$orderLocation_pos" exact="$moveTo_pos" />
			<move_to object="this.assignedcontrolled"
				destination="$moveTo_space"
				uselocalhighways="false"
				useknownpath="this.isplayerowned"
				forcesteering="(not @this.assignedcontrolled.iscapitalship)"
				commandaction="false"
				travel="true"
				abortpath="false"
				flightbehaviour="flightbehaviour.gaindistance">
				<position value="$moveTo_pos"/>
				<rotation value="$moveTo_rot" />
				<interrupt_after_time time="1s" />
			</move_to>
			<label name="move_locked_destination" />
			<debug_text text="@this.assignedcontrolled.idcode + ' LABEL move_locked_destination'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<set_value name="$isTargetMoved" exact="false" />
			<set_value name="$kAAIT_attacker_interruptedMove" exact="null" />
			<debug_text text="@this.assignedcontrolled.idcode + ' wait start'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<do_if value="not $enemiesWithdrawnFrom?">
				<create_group groupname="$enemiesWithdrawnFrom" />
			</do_if>
			<wait exact="5s">
				<interrupt>
					<conditions>
						<check_any>
							<check_all>
								<event_object_attacked object="this.assignedcontrolled" />
								<check_any>
									<check_value value="@event.param.threatscore gt this.assignedcontrolled.threatscore * 1.5" />
									<check_value value="@event.param.iscapitalship" />
								</check_any>
								<check_value value="event.param.hasrelation.enemy.{this.assignedcontrolled}" />
								<debug_text text="@this.assignedcontrolled.idcode + ' event.name: ' + event.name + ' event.param: ' + event.param + ' ' + event.param.knownname" debugchance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
								<check_value value="not $enemiesWithdrawnFrom.indexof.{event.param}" />
								<check_value value="not $enemiesWithdrawnFrom.indexof.{event.param.defensible}" />
								<set_value name="$kAAIT_attacker_interruptedMove" exact="if event.param.defensible then event.param.defensible else event.param" />
							</check_all>
							<check_all>
								<check_any>
									<event_object_changed_zone object="this.assignedcontrolled" />
									<event_object_changed_zone object="$target" />
								</check_any>
								<set_value name="$isTargetMoved" exact="true" />
							</check_all>
						</check_any>
					</conditions>
				</interrupt>
			</wait>
			<debug_text text="@this.assignedcontrolled.idcode + ' wait end'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $isTargetMoved: ' + $isTargetMoved" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<set_value name="$dist" exact="this.assignedcontrolled.distanceto.[$moveTo_space, $moveTo_pos]" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $dist: ' + $dist" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />

			<set_value name="$kAAIT_result_isTargetInTheWayAttacked" exact="false" />
			<set_value name="$kAAIT_result_isTargetInTheWayIgnored" exact="false" />
			<debug_text text="@this.assignedcontrolled.idcode + ' $kAAIT_attacker_interruptedMove: ' + $kAAIT_attacker_interruptedMove" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<do_if value="@$kAAIT_attacker_interruptedMove">
				<set_value name="$kAAIT_test_attackTargetInTheWayOrNot" exact="$kAAIT_attacker_interruptedMove" />
				<include_interrupt_actions ref="kAAIT_GetAttackOrIgnoreTargetInTheWay" />
				<debug_text text="@this.assignedcontrolled.idcode + ' $kAAIT_result_isTargetInTheWayAttacked: ' + $kAAIT_result_isTargetInTheWayAttacked" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
				<debug_text text="@this.assignedcontrolled.idcode + ' $kAAIT_result_isTargetInTheWayIgnored: ' + $kAAIT_result_isTargetInTheWayIgnored" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			</do_if>
			<!-- <do_if value="(not $kAAIT_result_isTargetInTheWayAttacked) and (not $kAAIT_result_isTargetInTheWayIgnored)"> -->
			<do_if value="(not @$kAAIT_attacker_interruptedMove) or $kAAIT_result_isTargetInTheWayIgnored">
				<do_if value="$dist gt 3km">
					<do_if value="$isTargetMoved">
						<resume label="move_to_engage_position" />
					</do_if>
					<do_else>
						<resume label="move_locked_destination" />
					</do_else>
				</do_if>
			</do_if>

			<label name="finish" />
			<debug_text text="@this.assignedcontrolled.idcode + ' LABEL finish'" chance="if @$debugchance then $debugchance else (if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode or (@global.$kAAIT.$debugChance_idCode == 'all' and (@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw or @$kAAITParam_iskAAITOrder)) then @global.$kAAIT_Data.$debugChance else 0)" />
			<stop_moving object="this.assignedcontrolled" />
			<!-- <reset_flight_behaviour object="this.assignedcontrolled" /> -->
			<do_if value="@this.assignedcontrolled.isoperational">
				<do_if value="$kAAIT_original_name? and @$kAAIT_original_name and (this.assignedcontrolled.knownname != @$kAAIT_original_name) and (not @this.assignedcontrolled.coverowner)">
					<!-- Check exists, check not null, check if knownname != original. Removed chance from debug message so any ships that unintentionally got a name change can be tracked -->
					<debug_text text="'MOD: KUDA -- %s(%s) -- set_object_name reset to %s.'.[@this.assignedcontrolled.knownname,@this.assignedcontrolled.idcode,$kAAIT_original_name]" />
					<set_object_name object="this.assignedcontrolled" name="$kAAIT_original_name" />
				</do_if>
			</do_if>
			<do_if value="@$beacon_obstacle.exists">
				<destroy_object object="$beacon_obstacle" />
			</do_if>
			<do_if value="@$beacon_destination.exists">
				<destroy_object object="$beacon_destination" />
			</do_if>
			<do_if value="global.$kAAITByShipId.{'$' + this.assignedcontrolled.idcode}.$attackData?">
				<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_space" />
				<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_pos" />
			</do_if>
			<include_interrupt_actions ref="kAAIT_Deinit" />
		</actions>
	</attention>
	<on_abort>
		<do_if value="@this.assignedcontrolled.isoperational">
			<do_if value="$kAAIT_original_name? and @$kAAIT_original_name and (this.assignedcontrolled.knownname != @$kAAIT_original_name) and (not @this.assignedcontrolled.coverowner)">
				<!-- Check exists, check not null, check if knownname != original. Removed chance from debug message so any ships that unintentionally got a name change can be tracked -->
				<debug_text text="'MOD: KUDA -- %s(%s) -- set_object_name reset to %s.'.[@this.assignedcontrolled.knownname,@this.assignedcontrolled.idcode,$kAAIT_original_name]" />
				<set_object_name object="this.assignedcontrolled" name="$kAAIT_original_name" />
			</do_if>
		</do_if>
		<do_if value="@$beacon_obstacle.exists">
			<destroy_object object="$beacon_obstacle" />
		</do_if>
		<do_if value="@$beacon_destination.exists">
			<destroy_object object="$beacon_destination" />
		</do_if>
		<do_if value="@this.assignedcontrolled.isoperational">
			<stop_moving object="this.assignedcontrolled" />
			<!-- <reset_flight_behaviour object="this.assignedcontrolled" /> -->
		</do_if>
		<do_if value="global.$kAAITByShipId.{'$' + this.assignedcontrolled.idcode}.$attackData?">
			<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_space" />
			<remove_value name="global.$kAAITByShipId.{'$' + @this.assignedcontrolled.idcode}.$attackData.$orderLocation_pos" />
		</do_if>
		<include_interrupt_actions ref="kAAIT_Deinit" />
	</on_abort>
</aiscript>
