<?xml version="1.0" encoding="utf-8" ?>
<diff>
<!-- add. purpose: kaait data
	<params>
-->
	<add sel="//params">
		<param name="kAAITParam_iskAAITOrder" required="false" default="false" type="internal" />
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="
			if this.$kAAIT_isAvoidHighRisk_user? then 
				this.$kAAIT_isAvoidHighRisk_user
			else (
				if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
				(
					this.assignedcontrolled.primarypurpose != purpose.fight or
					this.assignedcontrolled.type == shiptype.carrier or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk_allFactions
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
						)
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
						)
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
					)
				) then true else false
			)
		" />
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="bool" text="{1111920, 109}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip
							)
						) or
						(
							($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
							)
						)
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions
							)
						) or
						(
							($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
							)
						)
					)
				)
			) then true else false
		" />
	</add>
<!-- replace. purpose: set default attack weaker enemies first to false
	<param name="weakfirst" type="bool" default="true" />
-->
	<replace sel="//param[@name=&quot;weakfirst&quot;][@type=&quot;bool&quot;][@default=&quot;true&quot;]/@default">false</replace>
<!-- add before. purpose: show movement.
	<location object="$selectedtarget.toplevelcommander" condition="$selectedtarget.isoperational" />
-->
	<add pos="before" sel="//location[@object=&quot;$selectedtarget.toplevelcommander&quot;][@condition=&quot;$selectedtarget.isoperational&quot;]">
		<location object="@this.$kAAIT_data.$orderLocation_space" position="@this.$kAAIT_data.$orderLocation_pos" condition="@this.$kAAIT_data.$orderLocation_space and @this.$kAAIT_data.$orderLocation_pos" />
	</add>
<!-- add. purpose: debug
	<actions name="clear_previous_orders">
	<actions name="clear_all_orders">
-->
	<add pos="prepend" sel="//actions[@name=&quot;clear_previous_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' clear_previous_orders'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="prepend" sel="//actions[@name=&quot;clear_all_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' clear_all_orders'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: tag movewait as coordinated attack.
	<create_order object="$subordinate" id="'MoveWait'"  immediate="true" name="$moveorder">
-->
	<add sel="//create_order[@object=&quot;$subordinate&quot;][@id=&quot;'MoveWait'&quot;]">
		<param name="kAAITParam_tacticalOrderTarget" value="$primarytarget" />
	</add>
<!-- add. purpose: debug
	<handler comment="Order cancelled">
		<actions>
			<abort_called_scripts resume="finish" />
-->
	<add pos="prepend" sel="//handler[@comment=&quot;Order cancelled&quot;]/actions">
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + @event.name + ' event.param: ' + @event.param + ' order.id: ' + @this.assignedcontrolled.order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="true" />
	</add>
<!-- add. purpose: debug
	<handler comment="Target destroyed">
		...
		<abort_called_scripts resume="finish" />
-->
	<add pos="before" sel="//handler[@comment=&quot;Order cancelled&quot;]//abort_called_scripts[@resume=&quot;finish&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + @event.name + ' event.param: ' + @event.param + ' order.id: ' + @this.assignedcontrolled.order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="true" />
	</add>
<!-- add. purpose: interrupts.
	<interrupts>
		<library>
-->
	<add sel="//interrupts/library">
		<actions name="kAAIT_AdjustRallyPoint" comment="move rally point further from target and with a random yaw">
			<create_orientation name="$kAAIT_rotFromTarget" orientation="look_at" refposition="$initialpos">
				<position value="$enemypos" />
			</create_orientation>
			<set_value name="$kAAIT_yaw_deg" exact="$kAAIT_rotFromTarget.yaw * 180 / pi + [-15, -11.25, -7.5, -3.25, 0, 3.25, 7.5, 11.25, 15].random" />
			<set_value name="$kAAIT_yaw" exact="$kAAIT_yaw_deg * pi / 180" />
			<do_if value="$primarytarget.isclass.ship">
				<do_if value="$primarytarget.travel.active">
					<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange * 0.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange * 1.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
				</do_else>
			</do_if>
			<do_else>
				<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
			</do_else>
			<create_position name="$initialpos"
				x="$enemypos.x + $kAAIT_tacticalDistance * sin ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
				y="$enemypos.y + $kAAIT_tacticalDistance * sin ($kAAIT_rotFromTarget.pitch)"
				z="$enemypos.z + $kAAIT_tacticalDistance * cos ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
			/>
		</actions>
	</add>
	<add sel="//interrupts">
		<handler ref="kAAIT_Handler_WithdrawOrJustFight" />
		<handler ref="kAAIT_Handler_NewBigTarget" />
		<handler ref="kAAIT_Handler_MoveCheckAhead" />
		<handler ref="kAAIT_Handler_TacticalJustAttack" />
		<handler comment="receive attacked signals">
			<conditions>
				<event_object_signalled object="this.assignedcontrolled" param="'kAAIT_tactical_just_attack'" />
			</conditions>
			<actions>
				<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + @event.name + ' event.param: ' + @event.param + ' order.id: ' + @this.assignedcontrolled.order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.keys.list: ' + @$ORDERS.keys.list" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_for_each name="$ordergroup" in="$ORDERS">
					<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.{$ordergroup}.$MoveWait.count: ' + @$ORDERS.{$ordergroup}.$MoveWait.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<do_if value="@$ORDERS.{$ordergroup}.$MoveWait">
						<do_for_each name="$order" in="$ORDERS.{$ordergroup}.$MoveWait">
							<debug_text text="this.assignedcontrolled.idcode + ' $order.id: ' + @$order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<cancel_order order="$order" />
						</do_for_each>
					</do_if>
				</do_for_each>
			</actions>
		</handler>
	</add>
<!-- add. purpose: debug.
	<init>
-->
	<add pos="prepend" sel="//init">
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT init'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="false" />
	</add>
<!-- add before. purpose: ensure target is in the same sector.
	<label name="targetselection" />
-->
	<add pos="before" sel="//label[@name=&quot;targetselection&quot;]">
		<do_if value="this.sector == $primarytarget.sector">
			<resume label="kAAT_finish_move_to_sector" />
		</do_if>
		<label name="kAAT_move_to_sector" />
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL kAAT_move_to_sector'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_if value="(@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw) and (not @this.$kAAIT_data.$isIgnoreKAAIT)">
			<set_value name="$kAAIT_test_target_isAvoid" exact="$primarytarget" />
			<include_interrupt_actions ref="kAAIT_AvoidOrNot" />
		</do_if>
		<move_to destination="$primarytarget.sector" object="this.ship" travel="true" />
		<label name="kAAT_finish_move_to_sector" />
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL kAAT_finish_move_to_sector'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: do not give orders to subordinates with orders.
	<include_interrupt_actions ref="create_orders" />
-->
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[3]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not @$subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (initial subordinate order): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[2]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not $subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (target destroyed): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[1]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not @$subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (subordinate added): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
<!-- add. purpose: move rally point 40km from target. move to engage position that is applied AFTER this will be closer to the target.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="after" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[2]">
		<include_interrupt_actions ref="kAAIT_AdjustRallyPoint" />
		<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.keys.list: ' + @$ORDERS.keys.list" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_for_each name="$ordergroup" in="$ORDERS">
			<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.{$ordergroup}.$MoveWait.count: ' + @$ORDERS.{$ordergroup}.$MoveWait.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_if value="@$ORDERS.{$ordergroup}.$MoveWait">
				<do_for_each name="$order" in="$ORDERS.{$ordergroup}.$MoveWait">
					<debug_text text="this.assignedcontrolled.idcode + ' $order.id: ' + @$order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				</do_for_each>
			</do_if>
		</do_for_each>
	</add>
<!-- add. purpose: debug.
	<move_to destination="$primarytarget.sector" object="this.ship" forcerotation="true" forceposition="false" travel="true">
-->
	<add pos="before" sel="(//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;])[2]">
		<do_if value="(@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw) and (not @this.$kAAIT_data.$isIgnoreKAAIT)">
			<set_value name="$kAAIT_test_target_isAvoid" exact="$primarytarget" />
			<include_interrupt_actions ref="kAAIT_AvoidOrNot" />
		</do_if>
		<debug_text text="this.assignedcontrolled.idcode + ' move_to (pre)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="after" sel="(//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;])[2]">
		<debug_text text="this.assignedcontrolled.idcode + ' move_to (post) distanceto: ' + this.assignedcontrolled.distanceto.[$primarytarget.sector, $initialpos]" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: debug.
	<wait exact="$timeout">
-->
	<add pos="before" sel="//wait[@exact=&quot;$timeout&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' wait (pre)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="after" sel="//wait[@exact=&quot;$timeout&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' wait (post)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- replace. purpose: create_order instead of run_script attack ai.
	run_script attack prevents from kaait signal_objects from getting received for some reason. investigate in future.
	<run_script name="'order.fight.attack.object'">
-->
	<replace sel="//run_script[@name=&quot;'order.fight.attack.object'&quot;]">
		<label name="kAAITLabel_just_fight" />
		<create_order object="this.assignedcontrolled" id="'Attack'">
	        <param name="primarytarget" value="$primarytarget"/>
	        <param name="secondarytargets" value="$targets"/>
	        <param name="allowothertargets" value="false"/>
	        <param name="allowboost" value="true" />
	        <param name="squad_attack" value="false"/>
			<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
			<param name="kAAITParam_isStepForwardWithdraw" value="@$kAAITParam_isStepForwardWithdraw" />
		</create_order>
	</replace>
<!-- add chance. purspose: do not cancel subordinate orders unless order is actually cancelled.
	<label name="finish" />
	<include_interrupt_actions ref="clear_all_orders" />
-->
	<add sel="//label[@name=&quot;finish&quot;]/following-sibling::include_interrupt_actions[@ref=&quot;clear_all_orders&quot;]" type="@chance">if @$kAAIT_isCancelled then 100 else 0</add>
<!-- add. purspose: debug.
	<on_abort>
		<include_interrupt_actions ref="clear_all_orders" />
-->
	<add sel="//on_abort">
		<debug_text text="this.assignedcontrolled.idcode + ' on_abort'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
</diff>
