<?xml version="1.0" encoding="utf-8" ?>
<diff>
<!-- add. purpose: kaait data
	<params>
-->
	<add sel="//params">
		<param name="kAAITParam_iskAAITOrder" required="false" default="false" type="internal" />
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="
			if this.$kAAIT_isAvoidHighRisk_user? then 
				this.$kAAIT_isAvoidHighRisk_user
			else (
				if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
				(
					(
						this.assignedcontrolled.isplayerowned and
						(
							this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
							this.assignedcontrolled.primarypurpose != purpose.fight or
							this.assignedcontrolled.type == shiptype.carrier
						) and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						(
							this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
							this.assignedcontrolled.primarypurpose != purpose.fight or
							this.assignedcontrolled.type == shiptype.carrier
						) and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk_allFactions
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
						)
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
						)
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
					)
				) then true else false
			)
		" />
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="bool" text="{1111920, 109}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip
							)
						) or
						(
							($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
							)
						)
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions
							)
						) or
						(
							($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
							)
						)
					)
				)
			) then true else false
		" />
	</add>
<!-- replace. purpose: set default attack weaker enemies first to false
	<param name="weakfirst" type="bool" default="true" />
-->
	<replace sel="//param[@name=&quot;weakfirst&quot;][@type=&quot;bool&quot;][@default=&quot;true&quot;]/@default">false</replace>
<!-- add before. purpose: show movement.
	<location object="$selectedtarget.toplevelcommander" condition="$selectedtarget.isoperational" />
-->
	<add pos="before" sel="//location[@object=&quot;$selectedtarget.toplevelcommander&quot;][@condition=&quot;$selectedtarget.isoperational&quot;]">
		<location object="@$kAAIT_orderLocation_space" position="@$kAAIT_orderLocation_pos" condition="@$kAAIT_orderLocation_space and @$kAAIT_orderLocation_pos" />
	</add>
<!-- add. purpose: debug
	<actions name="clear_previous_orders">
	<actions name="clear_all_orders">
	<actions name="create_orders">
-->
	<add pos="prepend" sel="//actions[@name=&quot;clear_previous_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' clear_previous_orders'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="prepend" sel="//actions[@name=&quot;clear_all_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' clear_all_orders'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="prepend" sel="//actions[@name=&quot;create_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' create_orders ' + $subordinate.knownname + ' ' + $subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: move rally point 40km from target. move to engage position that is applied AFTER this will be closer to the target.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="after" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[1]">
		<set_value name="$kAAIT_rallyPointOwner" exact="$subordinate" />
		<include_interrupt_actions ref="kAAIT_AdjustRallyPoint" />
	</add>
<!-- add. purpose: tag movewait as coordinated attack.
	<create_order object="$subordinate" id="'MoveWait'"  immediate="true" name="$moveorder">
-->
	<add sel="//create_order[@object=&quot;$subordinate&quot;][@id=&quot;'MoveWait'&quot;]">
		<param name="kAAITParam_tacticalOrderTarget" value="$primarytarget" />
	</add>
<!-- add. purpose: debug
	<handler comment="Order cancelled">
		<actions>
			<abort_called_scripts resume="finish" />
-->
	<add pos="prepend" sel="//handler[@comment=&quot;Order cancelled&quot;]/actions">
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + @event.name + ' event.param: ' + @event.param + ' order.id: ' + @this.assignedcontrolled.order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="true" />
	</add>
<!-- add. purpose: debug
	<handler comment="Target destroyed">
		...
		<abort_called_scripts resume="finish" />
-->
	<add pos="before" sel="//handler[@comment=&quot;Order cancelled&quot;]//abort_called_scripts[@resume=&quot;finish&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + @event.name + ' event.param: ' + @event.param + ' order.id: ' + @this.assignedcontrolled.order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="true" />
	</add>
<!-- add. purpose: actions and interrupts.
	<interrupts>
		<library>
-->
	<add sel="//interrupts/library">
		<actions name="kAAIT_AdjustRallyPoint" comment="move rally point further from target and with a random yaw">
			<do_if value="$kAAIT_rallyPointOwner == this.assignedcontrolled"
				comment="the leader is set last, so set these vars to 0 will put the pos in the middle">
				<set_value name="$kAAIT_yaw_deg_attack" exact="0" />
				<set_value name="$kAAIT_sign_attack" exact="0" />
				<set_value name="$kAAIT_shipNo_attack" exact="0" />
				<remove_value name="$kAAIT_shipNo_defence" comment="remove this var, so that defence distribution starts at 0 deg" />
			</do_if>
			<do_elseif value="$forcedassignment != assignment.defence"
				comment="setting ship no and sign so that distribution alternates between either side of the vector. i.e. -1 and 1">
				<set_value name="$kAAIT_shipNo_attack" exact="1" operation="add" />
				<do_if value="not @$kAAIT_sign_attack">
					<set_value name="$kAAIT_sign_attack" exact="1" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_sign_attack" exact="$kAAIT_sign_attack * -1" />
				</do_else>
			</do_elseif>
			<do_else>
				<do_if value="not $kAAIT_shipNo_defence?" comment="defence's leader is same as attack. set vars to 0 to so that distribution starts in the middle. otherwise, the middle will be empty.">
					<set_value name="$kAAIT_yaw_deg_defence" exact="0" />
					<set_value name="$kAAIT_sign_defence" exact="0" />
					<set_value name="$kAAIT_shipNo_defence" exact="0" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_shipNo_defence" exact="1" operation="add" />
					<do_if value="not @$kAAIT_sign_defence">
						<set_value name="$kAAIT_sign_defence" exact="1" />
					</do_if>
					<do_else>
						<set_value name="$kAAIT_sign_defence" exact="$kAAIT_sign_defence * -1" />
					</do_else>
				</do_else>
			</do_else>
			<create_position name="$kAAIT_pos" object="this.assignedcontrolled" space="this.assignedcontrolled.sector" />
			<create_orientation name="$kAAIT_rotFromTarget" orientation="look_at" refposition="$kAAIT_pos">
				<position value="$enemypos" />
			</create_orientation>
			<do_if value="$forcedassignment != assignment.defence or $kAAIT_rallyPointOwner == this.assignedcontrolled">
				<set_value name="$kAAIT_yaw_deg_attack" exact="@$kAAIT_yaw_deg_attack + $kAAIT_shipNo_attack * $kAAIT_sign_attack * 10" />
				<set_value name="$kAAIT_yaw_deg" exact="$kAAIT_yaw_deg_attack" />
			</do_if>
			<do_else>
				<set_value name="$kAAIT_yaw_deg_defence" exact="@$kAAIT_yaw_deg_defence + $kAAIT_shipNo_defence * $kAAIT_sign_defence * 5" />
				<set_value name="$kAAIT_yaw_deg" exact="$kAAIT_yaw_deg_defence" />
			</do_else>
			<set_value name="$kAAIT_yaw" exact="$kAAIT_rotFromTarget.yaw + $kAAIT_yaw_deg * pi / 180" />
			<do_if value="$primarytarget.isclass.ship">
				<do_if value="$primarytarget.isoperational and $primarytarget.travel.active">
					<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange * 0.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange * 1.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
				</do_else>
			</do_if>
			<do_else>
				<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange * 0.75, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
			</do_else>
			<do_if value="$forcedassignment == assignment.defence and $kAAIT_rallyPointOwner != this.assignedcontrolled">
				<set_value name="$kAAIT_tacticalDistance" operation="add" exact="10km" />
			</do_if>
			<create_position name="$initialpos"
				x="$enemypos.x + $kAAIT_tacticalDistance * sin ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
				y="$enemypos.y + $kAAIT_tacticalDistance * sin ($kAAIT_rotFromTarget.pitch)"
				z="$enemypos.z + $kAAIT_tacticalDistance * cos ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
			/>
		</actions>
		<actions name="kAAIT_RemoveWaitsAndJustFight" comment="cancel all wait point and just fight">
			<set_value name="$releasemove" exact="true" />
			<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.keys.list: ' + @$ORDERS.keys.list" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_for_each name="$ordergroup" in="$ORDERS">
				<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.{$ordergroup}.$MoveWait.count: ' + @$ORDERS.{$ordergroup}.$MoveWait.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="@$ORDERS.{$ordergroup}.$MoveWait">
					<do_for_each name="$order" in="$ORDERS.{$ordergroup}.$MoveWait">
						<debug_text text="this.assignedcontrolled.idcode + ' $order.id: ' + @$order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<cancel_order order="$order" />
					</do_for_each>
				</do_if>
			</do_for_each>
		</actions>
	</add>
	<add sel="//interrupts">
		<handler ref="kAAIT_Handler_WithdrawOrJustFight" />
		<handler comment="receive attacked signals">
			<conditions>
				<event_object_signalled object="this.assignedcontrolled" param="'kAAIT_tactical_just_attack'" />
			</conditions>
			<actions>
				<debug_text text="this.assignedcontrolled.idcode + ' EVENT event_object_signalled event.param: ' + @event.param + ' order.id: ' + @this.assignedcontrolled.order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $eventObject: ' + @event.param2.$eventObject.knownname + ' ' + @event.param2.$eventObject.idcode + ' $eventName: ' + event.param2.$eventName + ' $eventParam: ' + @event.param2.$eventParam.knownname + ' ' + @event.param2.$eventParam.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<include_interrupt_actions ref="kAAIT_RemoveWaitsAndJustFight" />
				<abort_called_scripts resume="attack" />
			</actions>
		</handler>
		<handler comment="reset rally points or just fight">
			<conditions>
				<check_any>
					<event_object_changed_zone object="this.assignedcontrolled" />
					<check_all>
						<event_object_changed_zone object="$selectedtarget" />
						<set_value name="$kAAIT_isChangedZone" exact="true" />
					</check_all>
					<check_all comment="is gravidar target high-risk. when changed, also change others with the 'is gravidar target high-risk' comment.">
						<event_gravidar_has_scanned object="this.assignedcontrolled" />
						<check_value value="@this.sector.exists" />
						<count_gravidar_contacts result="$kAAIT_gravidarTarget" object="this.assignedcontrolled" class="[class.ship_l, class.ship_xl, class.station]" maybeattackedby="this.assignedcontrolled" checkoperational="false" masstraffic="false" docked="false" min="1" multiple="false">
							<match_context macro="this.sector.macro"/>
							<match_context class="class.highway" negate="true"/>
							<match class="class.buildstorage" negate="true"/>
							<match state="componentstate.wreck" negate="true"/>
						</count_gravidar_contacts>
						<check_all>
							<check_value value="@$kAAIT_gravidarTarget.isoperational" />
							<check_any comment="is $kAAIT_gravidarTarget high-risk">
								<check_all comment="this ship is xssm">
									<check_value value="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m]" />
									<check_all comment="potentail high-risk">
										<check_value value="$kAAIT_gravidarTarget.size gt this.assignedcontrolled.size * 1.5" />
										<check_value value="$kAAIT_gravidarTarget.primarypurpose == purpose.fight" />
										<check_value value="@$kAAIT_gravidarTarget.type != shiptype.carrier" />
									</check_all>
									<check_any comment="is high-risk">
										<check_all comment="target is ship">
											<check_value value="$kAAIT_gravidarTarget.isclass.ship" />
											<check_any>
												<check_all comment="this ship is xss">
													<check_value value="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s]" />
													<check_value value="
														[@$kAAIT_gravidarTarget.assignedaipilot.$kAAIT_attackers.count, @$kAAIT_gravidarTarget.defencenpc.$kAAIT_attackers.count, 1].max * (2 - (this.skill.piloting + this.skill.morale) / 30.0 * 1) le
														@$kAAIT_gravidarTarget.weapons.operational.count * global.$kAAIT_Config.$xss_outnumberVShips / 100.0
													" />
												</check_all>
												<check_all comment="this ship is m">
													<check_value value="this.assignedcontrolled.isclass.ship_m" />
													<check_value value="
														[@$kAAIT_gravidarTarget.assignedaipilot.$kAAIT_attackers.count, @$kAAIT_gravidarTarget.defencenpc.$kAAIT_attackers.count, 1].max * (2 - (this.skill.piloting + this.skill.morale) / 30.0 * 1) le
														@$kAAIT_gravidarTarget.weapons.operational.count * global.$kAAIT_Config.$m_outnumberVShips / 100.0
													" />
												</check_all>
											</check_any>
										</check_all>
										<check_all comment="target is station">
											<check_value value="$kAAIT_gravidarTarget.isclass.station" />
											<check_any>
												<check_all comment="this ship is xss">
													<check_value value="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s]" />
													<check_value value="
														[@$kAAIT_gravidarTarget.assignedaipilot.$kAAIT_attackers.count, @$kAAIT_gravidarTarget.defencenpc.$kAAIT_attackers.count, 1].max * (2 - (this.skill.piloting + this.skill.morale) / 30.0 * 1) le
														@$kAAIT_gravidarTarget.weapons.operational.count * global.$kAAIT_Config.$xss_outnumberVStations / 100.0
													" />
												</check_all>
												<check_all comment="this ship is m">
													<check_value value="this.assignedcontrolled.isclass.ship_m" />
													<check_value value="
														[@$kAAIT_gravidarTarget.assignedaipilot.$kAAIT_attackers.count, @$kAAIT_gravidarTarget.defencenpc.$kAAIT_attackers.count, 1].max * (2 - (this.skill.piloting + this.skill.morale) / 30.0 * 1) le
														@$kAAIT_gravidarTarget.weapons.operational.count * global.$kAAIT_Config.$m_outnumberVStations / 100.0
													" />
												</check_all>
											</check_any>
										</check_all>
									</check_any>
									<check_any comment="not a bomber">
										<check_value value="not this.assignedcontrolled.dps.missiles.all" />
										<check_value value="not this.assignedcontrolled.ammostorage.missile.count" />
									</check_any>
									<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
								</check_all>
								<check_all comment="this ship is lxl">
									<check_value value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]" />
									<check_any>
										<check_value value="$kAAIT_gravidarTarget.isclass.station" />
										<check_all comment="potentail high-risk">
											<check_value value="$kAAIT_gravidarTarget.size gt this.assignedcontrolled.size * 1.5" />
											<check_value value="$kAAIT_gravidarTarget.primarypurpose == purpose.fight" />
											<check_value value="@$kAAIT_gravidarTarget.type != shiptype.carrier" />
										</check_all>
										<check_all comment="is high-risk">
											<check_value value="$kAAIT_gravidarTarget.isclass.[class.ship_l, class.ship_xl]" />
											<check_value value="$kAAIT_gravidarTarget.dps.all gt this.assignedcontrolled.dps.all * 1.25" />
										</check_all>
									</check_any>
									<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
								</check_all>
							</check_any>
						</check_all>
						<check_all comment="is gravidar target not an attack target">
							<check_value value="@$kAAIT_isHighRiskEvent" />
							<check_value value="$kAAIT_gravidarTarget != @this.$kAAIT_data.$defensibleTarget" />
							<check_value value="$kAAIT_gravidarTarget != @this.assignedcontrolled.order.$primarytarget" />
							<check_value value="$kAAIT_gravidarTarget != @this.assignedcontrolled.nextorder.$primarytarget" />
							<check_value value="$kAAIT_gravidarTarget != @this.assignedcontrolled.order.$selectedtarget" />
							<check_value value="$kAAIT_gravidarTarget != @this.assignedcontrolled.commander.assignedaipilot.$kAAIT_data.$defensibleTarget" />
							<check_value value="$kAAIT_gravidarTarget != @this.assignedcontrolled.commander.order.$primarytarget" />
							<check_value value="$kAAIT_gravidarTarget != @this.assignedcontrolled.commander.nextorder.$primarytarget" />
							<check_value value="$kAAIT_gravidarTarget != @this.assignedcontrolled.commander.order.$selectedtarget" />
						</check_all>
					</check_all>
					<check_all>
						<event_object_order_syncpoint_released object="this.assignedcontrolled" order="this.assignedcontrolled.order"/>
						<set_value name="$kAAIT_isSyncPointReleased" exact="true" />
					</check_all>
				</check_any>
				<check_any>
					<check_all>
						<check_value value="this.sector != $selectedtarget.sector" />
						<set_value name="$kAAIT_isDifferentSector" exact="true" />
					</check_all>
					<check_all>
						<check_value value="@$kAAIT_tacticalDistance" />
						<check_value value="@$initialpos" />
						<check_value value="$selectedtarget.distanceto.[$selectedtarget.sector, $initialpos] le $kAAIT_tacticalDistance * 0.9" />
						<check_value value="this.assignedcontrolled.bboxdistanceto.{$selectedtarget} le this.assignedcontrolled.maxradarrange" />
						<set_value name="$kAAIT_isJustFight" exact="true" />
					</check_all>
					<check_value value="@$kAAIT_gravidarTarget != $selectedtarget" />
					<check_value value="@$kAAIT_isSyncPointReleased" />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + event.name" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isChangedZone: ' + @$kAAIT_isChangedZone" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isDifferentSector: ' + @$kAAIT_isDifferentSector" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isJustFight: ' + @$kAAIT_isJustFight" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isSyncPointReleased: ' + @$kAAIT_isSyncPointReleased" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' ' + @$kAAIT_gravidarTarget + ' (' + @$kAAIT_gravidarTarget.knownname + ' ' + @$kAAIT_gravidarTarget.idcode + ') != $selectedtarget (' + $selectedtarget.knownname + ' ' + $selectedtarget.idcode + '): ' + (@$kAAIT_gravidarTarget.isoperational and @$kAAIT_gravidarTarget != $selectedtarget)" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isHighRiskEvent: ' + @$kAAIT_isHighRiskEvent" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="@$kAAIT_isDifferentSector">
					<abort_called_scripts resume="start" />
				</do_if>
				<do_elseif value="@$kAAIT_isJustFight">
					<include_interrupt_actions ref="kAAIT_RemoveWaitsAndJustFight" />
					<abort_called_scripts resume="attack" />
				</do_elseif>
				<do_elseif value="@$kAAIT_isChangedZone">
					<abort_called_scripts resume="start" />
				</do_elseif>
				<do_elseif value="$kAAIT_isSyncPointReleased">
					<include_interrupt_actions ref="kAAIT_RemoveWaitsAndJustFight" />
					<abort_called_scripts resume="attack" />
				</do_elseif>
				<do_elseif value="@$kAAIT_gravidarTarget.isoperational and $kAAIT_isHighRiskEvent">
					<is_in_quadrant result="$kAAIT_isInFront" object="this.assignedcontrolled" target="$kAAIT_gravidarTarget" front="true"/>
					<do_if value="$kAAIT_isInFront">
						<abort_called_scripts label="kAAIT_label_avoid" />
					</do_if>
					<do_else>
						<abort_called_scripts label="start" />
					</do_else>
				</do_elseif>
				<remove_value name="$kAAIT_isChangedZone" />
				<remove_value name="$kAAIT_isDifferentSector" />
				<remove_value name="$kAAIT_isJustFight" />
				<remove_value name="$kAAIT_gravidarTarget" />
				<remove_value name="$kAAIT_isHighRiskEvent" />
				<remove_value name="$kAAIT_isSyncPointReleased" />
			</actions>
		</handler>
	</add>
<!-- add.
	<init>
-->
	<add pos="prepend" sel="//init">
		<!-- <set_value name="$debugchance" exact="100" /> -->
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT init'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="false" />
	</add>
<!-- add. purpose: because there's a sync point, the order cancels, reinits then re-gives orders on the first move_to.
	to prevent a 2nd re-init, create the sync point here and force a quick move to.
	this should cancel the order, re-inii before anything else resulting in the main code to not run twice.
	<label name="start" />
-->
	<add pos="before" sel="//label[@name=&quot;start&quot;]">
		<create_order_syncpoint owner="this.assignedcontrolled.order" />
		<move_to object="this.assignedcontrolled" destination="this.assignedcontrolled.zone">
			<position value="this.assignedcontrolled.position" />
		</move_to>
	</add>
	<!-- remove this: <create_order_syncpoint owner="this.ship.order" /> -->
	<remove sel="//create_order_syncpoint[@owner=&quot;this.ship.order&quot;]" />
<!-- add before. purpose: behaviours.
	<label name="fight" />
-->
	<add pos="before" sel="//label[@name=&quot;start&quot;]">
		<resume label="start" />

		<label name="kAAIT_label_avoid" />
		<set_value name="this.$kAAIT_data.$target_avoid" exact="this.$kAAIT_data.$defensibleTarget" />
		<include_interrupt_actions ref="kAAIT_Order_Avoid" />
		<wait min="5s" max="10s" />
		<resume label="start" />
	</add>
<!-- add after. purpose: reset allow for resetting rally points.
	<label name="start" />
-->
	<add pos="after" sel="//label[@name=&quot;start&quot;]">
		<set_value name="$kAAIT_orderLocation_space" exact="$primarytarget" />
		<create_position name="$kAAIT_orderLocation_pos" x="0" y="0" z="0" />
		<remove_value name="this.$kAAIT_tacticalPosition" />
		<include_interrupt_actions ref="clear_all_orders" />
		<do_if value="not $ORDERS?">
			<set_value name="$ORDERS" exact="table[]" />
		</do_if>
	</add>
<!-- add before. purpose: ensure target is in the same sector.
	<label name="targetselection" />
-->
	<add pos="before" sel="//label[@name=&quot;targetselection&quot;]">
		<do_if value="this.sector == $primarytarget.sector">
			<resume label="kAAT_label_finish_move_to_sector" />
		</do_if>
		<label name="kAAT_label_move_to_sector" />
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL kAAT_label_move_to_sector'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
        <move_to destination="$primarytarget" object="this.assignedcontrolled" forcerotation="true" forceposition="false" travel="true">
			<interrupts>
				<conditions>
					<event_object_changed_zone object="$primarytarget" />
					<check_value value="this.sector == $primarytarget.sector" />
				</conditions>
			</interrupts>
        </move_to>
		<do_if value="this.sector != $primarytarget.sector">
			<resume label="kAAT_label_move_to_sector" />
		</do_if>
		<label name="kAAT_label_finish_move_to_sector" />
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL kAAT_label_finish_move_to_sector'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: do not give orders to subordinates with orders.
	<include_interrupt_actions ref="create_orders" />
-->
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[3]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not @$subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (initial subordinate order): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[2]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not $subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (target destroyed): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[1]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not @$subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (subordinate added): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
<!-- add. purpose: do not get initialpos again unless required.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="before" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[2]">
		<set_value name="$kAAIT_isGetInitialPos" exact="true" />
		<do_if value="this.$kAAIT_tacticalPosition?">
			<set_value name="$kAAIT_isGetInitialPos" exact="false" />
		</do_if>
		<debug_text text="'$kAAIT_isGetInitialPos: ' + $kAAIT_isGetInitialPos" />
	</add>
	<add sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[2]" type="@chance">if $kAAIT_isGetInitialPos? then 100 else 0</add>
<!-- add. purpose: move rally point 40km from target. move to engage position that is applied AFTER this will be closer to the target.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="after" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[2]">
		<do_if value="$kAAIT_isGetInitialPos">
			<set_value name="$kAAIT_rallyPointOwner" exact="this.assignedcontrolled" />
			<include_interrupt_actions ref="kAAIT_AdjustRallyPoint" />
		</do_if>
		<set_value name="this.$kAAIT_tacticalPosition" exact="$initialpos" />
		<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.keys.list: ' + @$ORDERS.keys.list" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_for_each name="$ordergroup" in="$ORDERS">
			<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.{$ordergroup}.$MoveWait.count: ' + @$ORDERS.{$ordergroup}.$MoveWait.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_if value="@$ORDERS.{$ordergroup}.$MoveWait">
				<do_for_each name="$order" in="$ORDERS.{$ordergroup}.$MoveWait">
					<debug_text text="this.assignedcontrolled.idcode + ' $order.id: ' + @$order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				</do_for_each>
			</do_if>
		</do_for_each>
	</add>
<!-- add. purpose: use move.generic for big enemy avoidance.
	<move_to destination="$primarytarget.sector" object="this.ship" forcerotation="true" forceposition="false" travel="true">
-->
	<add pos="before" sel="//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;]">
		<set_value name="$kAAIT_orderLocation_space" exact="$primarytarget.sector" />
		<set_value name="$kAAIT_orderLocation_pos" exact="$initialpos" />
		<debug_text text="this.assignedcontrolled.idcode + ' move (pre) distanceto: ' + this.assignedcontrolled.bboxdistanceto.{$selectedtarget}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<remove sel="//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;]/interrupt_after_time" />
	<add pos="after" sel="//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' move (post) distanceto: ' + this.assignedcontrolled.bboxdistanceto.{$selectedtarget}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: debug.
	<wait exact="$timeout">
-->
	<add pos="before" sel="//wait[@exact=&quot;$timeout&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' wait (pre)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="after" sel="//wait[@exact=&quot;$timeout&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' wait (post)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- replace. purpose: create_order instead of run_script attack ai.
	run_script attack prevents from kaait signal_objects from getting received for some reason. investigate in future.
	<run_script name="'order.fight.attack.object'">
-->
	<replace sel="//run_script[@name=&quot;'order.fight.attack.object'&quot;]">
		<label name="kAAITLabel_just_fight" />
		<create_order object="this.assignedcontrolled" id="'Attack'">
	        <param name="primarytarget" value="$primarytarget"/>
	        <param name="secondarytargets" value="$targets"/>
	        <param name="allowothertargets" value="false"/>
	        <param name="allowboost" value="true" />
	        <param name="squad_attack" value="false"/>
			<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
			<param name="kAAITParam_isStepForwardWithdraw" value="@$kAAITParam_isStepForwardWithdraw" />
		</create_order>
	</replace>
<!-- add. purpose: clear initial pos from blackboard
	<label name="finish" />
-->
	<add pos="after" sel="//label[@name=&quot;finish&quot;]">
		<remove_value name="this.$kAAIT_tacticalPosition" />
	</add>
<!-- add chance. purspose: do not cancel subordinate orders unless order is actually cancelled.
	<label name="finish" />
	<include_interrupt_actions ref="clear_all_orders" />
-->
	<add sel="//label[@name=&quot;finish&quot;]/following-sibling::include_interrupt_actions[@ref=&quot;clear_all_orders&quot;]" type="@chance">if @$kAAIT_isCancelled then 100 else 0</add>
<!-- add. purspose: debug.
	<on_abort>
		<include_interrupt_actions ref="clear_all_orders" />
-->
	<add pos="prepend" sel="//on_abort">
		<remove_value name="this.$kAAIT_tacticalPosition" />
		<debug_text text="this.assignedcontrolled.idcode + ' on_abort'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
</diff>
