<?xml version="1.0" encoding="utf-8" ?>
<diff>
<!-- add. purpose: kaait data
	<params>
-->
	<add sel="//params">
		<param name="kAAITParam_iskAAITOrder" required="false" default="false" type="internal" />
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="
			if this.$kAAIT_isAvoidHighRisk_user? then 
				this.$kAAIT_isAvoidHighRisk_user
			else (
				if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
				(
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk_allFactions
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
						)
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
						)
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
					)
				) then true else false
			)
		" />
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="bool" text="{1111920, 109}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip
							)
						) or
						(
							($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
							)
						)
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($primarytarget.isclass.ship or @$primarytarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions
							)
						) or
						(
							($primarytarget.isclass.station or @$primarytarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
							)
						)
					)
				)
			) then true else false
		" />
	</add>
<!-- add before. purpose: show movement.
	<location object="$selectedtarget.toplevelcommander" condition="$selectedtarget.isoperational" />
-->
	<add pos="before" sel="//location[@object=&quot;$selectedtarget.toplevelcommander&quot;][@condition=&quot;$selectedtarget.isoperational&quot;]">
		<location object="@this.$kAAIT_data.$orderLocation_space" position="@this.$kAAIT_data.$orderLocation_pos" condition="@this.$kAAIT_data.$orderLocation_space and @this.$kAAIT_data.$orderLocation_pos" />
		<location object="@$target" condition="@$target.canbeattacked" />
	</add>
<!-- replace. purpose: set default attack weaker enemies first to false
	<param name="weakfirst" type="bool" default="true" />
-->
	<replace sel="//param[@name=&quot;weakfirst&quot;][@type=&quot;bool&quot;][@default=&quot;true&quot;]/@default">false</replace>
<!-- add. purpose: debug
	<actions name="clear_previous_orders">
		<cancel_order order="$previousorder" />
	<actions name="clear_all_orders">
		<cancel_order order="$ORDERS.{$ordergroup}.{$ordertype}.{$i}" />
-->
	<add pos="before" sel="//actions[@name=&quot;clear_previous_orders&quot;]//cancel_order[@order=&quot;$previousorder&quot;]">
		<debug_text text="$previousorder.object.idcode + ' clear_previous_orders $previousorder.id: ' + $previousorder.id" chance="if @$previousorder.object.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="before" sel="//actions[@name=&quot;clear_all_orders&quot;]//cancel_order[@order=&quot;$ORDERS.{$ordergroup}.{$ordertype}.{$i}&quot;]">
		<debug_text text="$ORDERS.{$ordergroup}.{$ordertype}.{$i}.object.idcode + ' clear_all_orders $ORDERS.{' + $ordergroup + '}.{' + $ordertype + '}.{' + $i + '}.id: ' + $ORDERS.{$ordergroup}.{$ordertype}.{$i}.id" chance="if @$ORDERS.{$ordergroup}.{$ordertype}.{$i}.object.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: lib to get rally point pos.
	<interrupts>
		<library>
-->
	<add sel="//interrupts/library">
		<actions name="kAAIT_AdjustRallyPoint" comment="move rally point further from target and with a random yaw">
			<create_orientation name="$kAAIT_rotFromTarget" orientation="look_at" refposition="$initialpos">
				<position value="$enemypos" />
			</create_orientation>
			<set_value name="$kAAIT_yaw_deg" exact="$kAAIT_rotFromTarget.yaw * 180 / pi + [-15, -11.25, -7.5, -3.25, 0, 3.25, 7.5, 11.25, 15].random" />
			<set_value name="$kAAIT_yaw" exact="$kAAIT_yaw_deg * pi / 180" />
			<do_if value="$primarytarget.isclass.ship">
				<do_if value="$primarytarget.travel.active">
					<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange * 0.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange * 1.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
				</do_else>
			</do_if>
			<do_else>
				<set_value name="$kAAIT_tacticalDistance" exact="[this.assignedcontrolled.maxradarrange, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
			</do_else>
			<create_position name="$initialpos"
				x="$enemypos.x + $kAAIT_tacticalDistance * sin ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
				y="$enemypos.y + $kAAIT_tacticalDistance * sin ($kAAIT_rotFromTarget.pitch)"
				z="$enemypos.z + $kAAIT_tacticalDistance * cos ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
			/>
		</actions>
	</add>
<!-- add. purpose: target moved within radar range.
	<interrupts>
-->
	<add sel="//interrupts">
		<handler>
			<conditions>
				<check_any>
					<event_object_changed_sector object="this.assignedcontrolled" />
					<event_object_changed_sector object="$primarytarget" />
					<event_object_changed_zone object="$primarytarget" />
					<event_object_attacked object="this.assignedcontrolled" param="$primarytarget" />
					<event_object_attacked object="$primarytarget" param="this.assignedcontrolled" />
				</check_any>
			</conditions>
			<actions>
				<debug_text text="this.assignedcontrolled.idcode + ' event.name: ' + @event.name + ' event.param: ' + @event.param.knownname + ', ' + @event.param.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' =========='" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $primarytarget.travel.active: ' + @$primarytarget.travel.active" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="
					event.name == 'event_object_attacked' or
					@$primarytarget.travel.active or
					this.assignedcontrolled.bboxdistanceto.{$primarytarget} lt this.assignedcontrolled.maxradarrange
				">
					<abort_called_scripts resume="kAAITLabel_just_fight" />
				</do_if>
				<do_else>
					<!-- <abort_called_scripts resume="kAAITLabel_regive_orders" /> -->
					<abort_called_scripts resume="start" />
				</do_else>
			</actions>
		</handler>
	</add>
<!-- add. purpose: debug.
	<init>
-->
	<add sel="//init">
		<debug_text text="this.assignedcontrolled.idcode + ' init'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<debug_text text="this.assignedcontrolled.idcode + ' ===='" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add before. purpose: ensure target is in the same sector.
	<label name="targetselection" />
-->
	<add pos="before" sel="//label[@name=&quot;targetselection&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' this.sector: ' + this.sector + ' $primarytarget.sector: ' + $primarytarget.sector" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_if value="this.sector == $primarytarget.sector">
			<resume label="kAAT_finish_move_to_sector" />
		</do_if>
		<label name="kAAT_move_to_sector" />
		<debug_text text="this.assignedcontrolled.idcode + ' kAAT_move_to_sector'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<!-- <run_script name="'move.generic'" result="$movesuccess">
			<param name="destination" value="$primarytarget" />
		</run_script> -->
		<move_to destination="$primarytarget.sector" object="this.ship" travel="true" />
		<label name="kAAT_finish_move_to_sector" />
	</add>
<!-- add before. purpose: ensure target is in the same sector.
	<label name="giveorders" />
-->
	<!-- <add pos="before" sel="//label[@name=&quot;giveorders&quot;]">
		<resume label="giveorders" />
		<label name="kAAITLabel_regive_orders" />
		<include_interrupt_actions ref="clear_all_orders" />
		<set_value name="$ORDERS" exact="table[]" />
	</add> -->
<!-- add. purpose: move rally point 40km from target. move to engage position that is applied AFTER this will be closer to the target.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="after" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[1]">
		<include_interrupt_actions ref="kAAIT_AdjustRallyPoint" />
	</add>
<!-- add. purpose: do not give orders to subordinates with orders.
	<include_interrupt_actions ref="create_orders" />
-->
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[3]">
		<debug_text text="this.assignedcontrolled.idcode + ' $subordinate.orders.count (3): ' + @$subordinate.orders.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not @$subordinate.orders.count) or
				(
					@$subordinate.orders.{1}.id != 'Attack' and
					@$subordinate.orders.{1}.id != 'DockAt' and
					@$subordinate.orders.{1}.id != 'DockAndWait' and
					@$subordinate.orders.{1}.id != 'MoveWait' and
					@$subordinate.orders.{1}.id != 'WaitForSignal' and
					@$subordinate.orders.{1}.id != 'Undock'
				)
			)
		">
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[2]">
		<debug_text text="this.assignedcontrolled.idcode + ' $subordinate.orders.count (2): ' + @$subordinate.orders.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not $subordinate.orders.count) or
				(
					$subordinate.orders.{1}.id != 'Attack' and
					$subordinate.orders.{1}.id != 'DockAt' and
					$subordinate.orders.{1}.id != 'DockAndWait' and
					$subordinate.orders.{1}.id != 'MoveWait' and
					$subordinate.orders.{1}.id != 'WaitForSignal' and
					$subordinate.orders.{1}.id != 'Undock'
				)
			)
		">
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[1]">
		<debug_text text="this.assignedcontrolled.idcode + ' $subordinate.orders.count (1): ' + @$subordinate.orders.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not $subordinate.orders.count) or
				(
					$subordinate.orders.{1}.id != 'Attack' and
					$subordinate.orders.{1}.id != 'DockAt' and
					$subordinate.orders.{1}.id != 'DockAndWait' and
					$subordinate.orders.{1}.id != 'MoveWait' and
					$subordinate.orders.{1}.id != 'WaitForSignal' and
					$subordinate.orders.{1}.id != 'Undock'
				)
			)
		">
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
<!-- add. purpose: move rally point 40km from target. move to engage position that is applied AFTER this will be closer to the target.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="after" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[2]">
		<include_interrupt_actions ref="kAAIT_AdjustRallyPoint" />
	</add>
<!-- replace. purpose: create_order instead of run_script attack ai.
	run_script attack prevents from kaait signal_objects from getting received for some reason. investigate in future.
	<run_script name="'order.fight.attack.object'">
-->
	<replace sel="//run_script[@name=&quot;'order.fight.attack.object'&quot;]">
		<label name="kAAITLabel_just_fight" />
		<create_order object="this.assignedcontrolled" id="'Attack'">
	        <param name="primarytarget" value="$primarytarget"/>
	        <param name="secondarytargets" value="$targets"/>
	        <param name="allowothertargets" value="false"/>
	        <param name="allowboost" value="true" />
	        <param name="squad_attack" value="false"/>
			<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
			<param name="kAAITParam_isStepForwardWithdraw" value="@$kAAITParam_isStepForwardWithdraw" />
		</create_order>
	</replace>
<!-- remove. purspose: do not cancel subordinate orders from this coordinated attack.
	<label name="finish" />
	<include_interrupt_actions ref="clear_all_orders" />
-->
	<remove sel="//label[@name=&quot;finish&quot;]/following-sibling::include_interrupt_actions[@ref=&quot;clear_all_orders&quot;]" />
<!-- remove. purspose: do not cancel subordinate orders from this coordinated attack.
	<on_abort>
		<include_interrupt_actions ref="clear_all_orders" />
-->
	<remove sel="//on_abort/include_interrupt_actions[@ref=&quot;clear_all_orders&quot;]" />
</diff>
