<?xml version="1.0" encoding="utf-8" ?>
<diff>
<!-- add. purpose: kaait data
	<params>
-->
	<add sel="//params">
		<param name="kAAITParam_iskAAITOrder" required="false" default="false" type="internal" />
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="
			if this.$kAAIT_isAvoidHighRisk_user? then 
				this.$kAAIT_isAvoidHighRisk_user
			else (
				if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
				(
					(
						this.assignedcontrolled.isplayerowned and
						(
							this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
							this.assignedcontrolled.primarypurpose != purpose.fight or
							this.assignedcontrolled.type == shiptype.carrier
						) and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						(
							this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] or
							this.assignedcontrolled.primarypurpose != purpose.fight or
							this.assignedcontrolled.type == shiptype.carrier
						) and
						@global.$kAAIT_Config.$xssm_isAvoidHighRisk_allFactions
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
						)
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip
					) or
					(
						this.assignedcontrolled.isplayerowned and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions or
							@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
						)
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vShip_allFactions
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
						@global.$kAAIT_Config.$lxl_isAvoidHighRisk_vStation_allFactions
					)
				) then true else false
			)
		" />
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="bool" text="{1111920, 109}" default="
			if (not this.assignedcontrolled.isunit) and (not this.assignedcontrolled.islasertower) and
			(
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
					)
				) or
				(
					this.assignedcontrolled.isplayerowned and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip
							)
						) or
						(
							($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation
							)
						)
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions or
						@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
						@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
					)
				) or
				(
					(not this.assignedcontrolled.isplayerowned) and
					this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
					(
						(
							($selectedtarget.isclass.ship or @$selectedtarget.defensible.isclass.ship) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions
							)
						) or
						(
							($selectedtarget.isclass.station or @$selectedtarget.defensible.isclass.station) and
							(
								@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions or
								@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions
							)
						)
					)
				)
			) then true else false
		" />
	</add>
<!-- replace. purpose: set default attack weaker enemies first to false
	<param name="weakfirst" type="bool" default="true" />
-->
	<replace sel="//param[@name=&quot;weakfirst&quot;][@type=&quot;bool&quot;][@default=&quot;true&quot;]/@default">false</replace>
<!-- add before. purpose: show movement.
	<location object="$selectedtarget.toplevelcommander" condition="$selectedtarget.isoperational" />
-->
	<add pos="before" sel="//location[@object=&quot;$selectedtarget.toplevelcommander&quot;][@condition=&quot;$selectedtarget.isoperational&quot;]">
		<location object="@$kAAIT_orderLocation_space" position="@$kAAIT_orderLocation_pos" condition="@$kAAIT_orderLocation_space and @$kAAIT_orderLocation_pos" />
	</add>
<!-- add. purpose: debug
	<actions name="clear_previous_orders">
	<actions name="clear_all_orders">
	<actions name="create_orders">
		...
		<create_order object="$subordinate" id="'MoveWait'"  immediate="true" name="$moveorder">
-->
	<add pos="prepend" sel="//actions[@name=&quot;clear_previous_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' clear_previous_orders'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="prepend" sel="//actions[@name=&quot;clear_all_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' clear_all_orders'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="prepend" sel="//actions[@name=&quot;create_orders&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' create_orders ' + $subordinate.knownname + ' ' + $subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="after" sel="//actions[@name=&quot;create_orders&quot;]//create_order[@object=&quot;$subordinate&quot;][@id=&quot;'MoveWait'&quot;][@immediate=&quot;true&quot;][@name=&quot;$moveorder&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' create_order MoveWait: ' + $moveorder" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: unassigned syncpoint from cancelled orders
	<actions name="clear_previous_orders">
		<cancel_order order="$previousorder" />
-->
	<add pos="before" sel="//actions[@name=&quot;clear_previous_orders&quot;]//cancel_order[@order=&quot;$previousorder&quot;]">
		<unassign_order_syncpoint_from_order order="$previousorder" />
	</add>
<!-- add. purpose: unassigned syncpoint from cancelled orders
	<actions name="clear_all_orders">
		<cancel_order order="$ORDERS.{$ordergroup}.{$ordertype}.{$i}" />
-->
	<add pos="before" sel="//actions[@name=&quot;clear_all_orders&quot;]//cancel_order[@order=&quot;$ORDERS.{$ordergroup}.{$ordertype}.{$i}&quot;]">
		<unassign_order_syncpoint_from_order order="$ORDERS.{$ordergroup}.{$ordertype}.{$i}" />
	</add>
<!-- add. purpose: move rally point 40km from target. move to engage position that is applied AFTER this will be closer to the target.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="after" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[1]">
		<set_value name="$kAAIT_rallyPointOwner" exact="$subordinate" />
		<include_interrupt_actions ref="kAAIT_AdjustRallyPoint" />
	</add>
<!-- add. purpose: tag movewait as coordinated attack.
	<create_order object="$subordinate" id="'MoveWait'"  immediate="true" name="$moveorder">
-->
	<add sel="//create_order[@object=&quot;$subordinate&quot;][@id=&quot;'MoveWait'&quot;]">
		<param name="kAAITParam_tacticalOrderTarget" value="$primarytarget" />
	</add>
<!-- add. purpose: set cancelled var.
	<handler comment="Order cancelled">
	      <conditions>
	        <event_object_order_cancelled object="this.ship" immediate="false" />
	      </conditions>
	      <actions>
-->
	<add pos="prepend" sel="//handler[@comment=&quot;Order cancelled&quot;]/actions">
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + @event.name + ' event.param: ' + @event.param + ' order.id: ' + @this.assignedcontrolled.order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="true" />
	</add>
<!-- add. purpose: actions and interrupts.
	<interrupts>
		<library>
-->
	<add sel="//interrupts/library">
		<actions name="kAAIT_AdjustRallyPoint" comment="move rally point further from target and with a random yaw">
			<do_if value="$kAAIT_rallyPointOwner == this.assignedcontrolled"
				comment="the leader is set last, so set these vars to 0 will put the pos in the middle of the arc">
				<set_value name="$kAAIT_yaw_deg_attack" exact="0" />
				<set_value name="$kAAIT_sign_attack" exact="0" />
				<set_value name="$kAAIT_shipNo_attack" exact="0" />
				<remove_value name="$kAAIT_shipNo_defence" comment="remove this var, so that defence distribution starts at 0 deg" />
			</do_if>
			<!-- start: set distribution of positions in an arc -->
			<do_elseif value="$forcedassignment != assignment.defence"
				comment="setting ship no and sign so that distribution alternates between either side of the arc. i.e. -1 and 1">
				<set_value name="$kAAIT_shipNo_attack" exact="1" operation="add" />
				<do_if value="not @$kAAIT_sign_attack">
					<set_value name="$kAAIT_sign_attack" exact="1" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_sign_attack" exact="$kAAIT_sign_attack * -1" />
				</do_else>
			</do_elseif>
			<do_else>
				<do_if value="not $kAAIT_shipNo_defence?" comment="defence's leader is same as attack. set vars to 0 to so that distribution starts in the middle of the arc. otherwise, the middle will be empty.">
					<set_value name="$kAAIT_yaw_deg_defence" exact="0" />
					<set_value name="$kAAIT_sign_defence" exact="0" />
					<set_value name="$kAAIT_shipNo_defence" exact="0" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_shipNo_defence" exact="1" operation="add" />
					<do_if value="not @$kAAIT_sign_defence">
						<set_value name="$kAAIT_sign_defence" exact="1" />
					</do_if>
					<do_else>
						<set_value name="$kAAIT_sign_defence" exact="$kAAIT_sign_defence * -1" />
					</do_else>
				</do_else>
			</do_else>
			<!-- end: set distribution of positions in an arc -->
			<create_position name="$kAAIT_pos" space="this.sector" object="this.assignedcontrolled" />
			<create_orientation name="$kAAIT_rotFromTarget" orientation="look_at" refposition="$kAAIT_pos">
				<position value="$enemypos" />
			</create_orientation>
			<do_if value="$forcedassignment != assignment.defence or $kAAIT_rallyPointOwner == this.assignedcontrolled">
				<!-- <do_if value="$kAAIT_rallyPointOwner.isclass.[class.ship_xs, class.ship_s, class.ship_m]">
					<set_value name="$kAAIT_yaw_deg_attack" exact="@$kAAIT_yaw_deg_attack + $kAAIT_shipNo_attack * $kAAIT_sign_attack * 5" />
				</do_if>
				<do_else> -->
					<set_value name="$kAAIT_yaw_deg_attack" exact="@$kAAIT_yaw_deg_attack + $kAAIT_shipNo_attack * $kAAIT_sign_attack * 10" />
				<!-- </do_else> -->
				<set_value name="$kAAIT_yaw_deg" exact="$kAAIT_yaw_deg_attack" />
			</do_if>
			<do_else>
				<!-- <do_if value="$kAAIT_rallyPointOwner.isclass.[class.ship_xs, class.ship_s, class.ship_m]">
					<set_value name="$kAAIT_yaw_deg_attack" exact="@$kAAIT_yaw_deg_attack + $kAAIT_shipNo_attack * $kAAIT_sign_attack * 2.5" />
				</do_if>
				<do_else> -->
					<set_value name="$kAAIT_yaw_deg_defence" exact="@$kAAIT_yaw_deg_defence + $kAAIT_shipNo_defence * $kAAIT_sign_defence * 5" />
				<!-- </do_else> -->
				<set_value name="$kAAIT_yaw_deg" exact="$kAAIT_yaw_deg_defence" />
			</do_else>
			<set_value name="$kAAIT_yaw" exact="$kAAIT_rotFromTarget.yaw + $kAAIT_yaw_deg * pi / 180" />
			<do_if value="$primarytarget.isclass.ship">
				<debug_text text="this.assignedcontrolled.idcode + ' $primarytarget.travel.active: ' + @$primarytarget.travel.active" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<!-- <do_if value="$primarytarget.isoperational and $primarytarget.travel.active">
					<set_value name="$kAAIT_tacticalDistance_rallyPointOwner" exact="[this.assignedcontrolled.maxradarrange * 0.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
					<set_value name="$kAAIT_tacticalDistance" exact="$kAAIT_tacticalDistance_rallyPointOwner" />
				</do_if>
				<do_else> -->
					<set_value name="$kAAIT_tacticalDistance_rallyPointOwner" exact="[this.assignedcontrolled.maxradarrange * 1.25, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
					<set_value name="$kAAIT_tacticalDistance" exact="$kAAIT_tacticalDistance_rallyPointOwner" />
				<!-- </do_else> -->
			</do_if>
			<do_else>
				<set_value name="$kAAIT_tacticalDistance_rallyPointOwner" exact="[this.assignedcontrolled.maxradarrange * 0.75, this.assignedcontrolled.bboxdistanceto.{$primarytarget}].min" />
				<set_value name="$kAAIT_tacticalDistance" exact="$kAAIT_tacticalDistance_rallyPointOwner" />
			</do_else>
			<do_if value="$forcedassignment == assignment.defence and $kAAIT_rallyPointOwner != this.assignedcontrolled" comment="defense position is at tha back - not in the line of attackers">
				<set_value name="$kAAIT_tacticalDistance_rallyPointOwner" operation="add" exact="10km" />
			</do_if>
			<create_position name="$initialpos"
				x="$enemypos.x + $kAAIT_tacticalDistance_rallyPointOwner * sin ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
				y="$enemypos.y + $kAAIT_tacticalDistance_rallyPointOwner * sin ($kAAIT_rotFromTarget.pitch)"
				z="$enemypos.z + $kAAIT_tacticalDistance_rallyPointOwner * cos ($kAAIT_yaw) * cos ($kAAIT_rotFromTarget.pitch)"
			/>
		</actions>
		<actions name="kAAIT_RemoveWaitsAndJustFight" comment="cancel all wait point and just fight">
			<set_value name="$releasemove" exact="true" />
			<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.keys.list: ' + @$ORDERS.keys.list" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_for_each name="$ordergroup" in="$ORDERS">
				<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.{$ordergroup}.$MoveWait.count: ' + @$ORDERS.{$ordergroup}.$MoveWait.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="@$ORDERS.{$ordergroup}.$MoveWait">
					<do_for_each name="$order" in="$ORDERS.{$ordergroup}.$MoveWait">
						<debug_text text="this.assignedcontrolled.idcode + ' $order.id: ' + @$order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<unassign_order_syncpoint_from_order order="$order" />
						<cancel_order order="$order" />
					</do_for_each>
				</do_if>
			</do_for_each>
		</actions>
	</add>
	<add sel="//interrupts">
		<handler ref="kAAIT_Handler_WithdrawOrJustFight" />
		<handler comment="subordinate removes themself from attack">
			<conditions>
				<event_object_signalled object="this.assignedcontrolled" param="'kAAIT_tactical_remove_subordinate'" />
			</conditions>
			<actions>
				<set_value name="$kAAIT_subordinate" exact="event.param2" />
				<do_for_each name="$ordergroup" in="$ORDERS" reverse="true">
					<do_for_each valuename="$kAAIT_orders" in="$ORDERS.{$ordergroup}" reverse="true">
						<do_for_each name="$kAAIT_order" in="$kAAIT_orders" reverse="true">
							<do_if value="$kAAIT_order.exists and $kAAIT_order.object == $kAAIT_subordinate">
								<unassign_order_syncpoint_from_order order="$kAAIT_order" />
								<cancel_order order="$kAAIT_order" />
							</do_if>
						</do_for_each>
					</do_for_each>
				</do_for_each>
			</actions>
		</handler>
		<handler comment="reset rally points or just fight">
			<conditions>
				<check_any>
					<check_any comment="signal events">
						<check_all comment="just attack">
							<check_any>
								<event_object_signalled object="this.assignedcontrolled" param="'kAAIT_tactical_just_attack'" />
								<event_object_order_syncpoint_released object="this.assignedcontrolled" order="this.assignedcontrolled.order"/>
							</check_any>
							<set_value name="$kAAIT_isJustFight" exact="true" />
						</check_all>
						<check_all comment="reset rally points">
							<check_any>
								<event_object_signalled object="this.assignedcontrolled" param="'kAAIT_tactical_reset_rally_points'" />
								<event_object_order_syncpoint_released object="this.assignedcontrolled" order="this.assignedcontrolled.order"/>
							</check_any>
							<set_value name="$kAAIT_isResetRallyPoints" exact="true" />
						</check_all>
					</check_any>

					<check_all comment="movement events">
						<check_any>
							<event_object_changed_zone object="this.assignedcontrolled" />
							<event_object_changed_zone object="$primarytarget" />
						</check_any>
						<check_any>
							<check_all comment="target is near">
								<check_value value="@this.assignedcontrolled.bboxdistanceto.{$kAAITParam_tacticalOrderTarget} le this.assignedcontrolled.maxradarrange * 0.5" />
								<set_value name="$kAAIT_isJustFight" exact="true" />
							</check_all>
							<check_all comment="not target position recorded">
								<check_value value="not $kAAIT_pos_tacticatTarget?" />
								<set_value name="$kAAIT_pos_tacticatTarget" exact="$kAAITParam_tacticalOrderTarget.position" />
								<set_value name="$kAAIT_isResetRallyPoints" exact="true" />
							</check_all>
							<check_all comment="moved away from recorded target position">
								<check_value value="$kAAITParam_tacticalOrderTarget.bboxdistanceto.[$kAAITParam_tacticalOrderTarget.zone, $kAAIT_pos_tacticatTarget] gt this.assignedcontrolled.maxradarrange * 0.25" />
								<set_value name="$kAAIT_pos_tacticatTarget" exact="$kAAITParam_tacticalOrderTarget.position" />
								<set_value name="$kAAIT_isResetRallyPoints" exact="true" />
							</check_all>
						</check_any>
					</check_all>
					<check_any comment="attack events">
						<check_all>
							<event_object_attacked object="this.assignedcontrolled" />
							<check_any>
								<check_value value="event.param == $primarytarget" />
								<check_all>
									<check_value value="event.param.isclass.[class.ship_l, class.ship_xl]" />
									<check_value value="@$primarytarget.allsubordinates.indexof.{event.param}" />
								</check_all>
							</check_any>
							<set_value name="$kAAIT_isJustFight" exact="true" />
						</check_all>
						<check_all>
							<check_any>
								<event_object_attacked object="$primarytarget" />
								<event_object_attacked_object object="$primarytarget" />
							</check_any>
							<check_any>
								<check_all>
									<check_value value="event.param == this.assignedcontrolled" />
									<check_value value="@this.assignedcontrolled.allsubordinates.indexof.{event.param}" />
								</check_all>
								<check_all>
									<check_value value="event.param.owner == this.assignedcontrolled.owner" />
									<check_value value="event.param.isclass.ship" />
									<check_value value="not event.param.isunit" />
									<check_value value="not event.param.islasertower" />
									<check_value value="event.param != player.occupiedship" />
								</check_all>
							</check_any>
							<set_value name="$kAAIT_isJustFight" exact="true" />
						</check_all>
					</check_any>
					<check_all comment="is gravidar target high-risk. when changed, also change others with the 'is gravidar target high-risk' comment.">
						<event_gravidar_has_scanned object="this.assignedcontrolled" />
						<count_gravidar_contacts result="$kAAIT_gravidarTarget" object="this.assignedcontrolled" class="[class.ship_l, class.ship_xl, class.station]" maybeattackedby="this.assignedcontrolled" checkoperational="false" masstraffic="false" docked="false" min="1" multiple="false">
							<match_context macro="[@this.sector.macro]"/>
							<match_context class="class.highway" negate="true"/>
							<match class="class.buildstorage" negate="true"/>
							<match state="componentstate.wreck" negate="true"/>
						</count_gravidar_contacts>
						<check_all>
							<check_value value="$kAAIT_gravidarTarget != @$kAAIT_gravidarTarget_last" />
							<set_value name="$kAAIT_gravidarTarget_last" exact="$kAAIT_gravidarTarget" />
						</check_all>
						<check_all comment="set vars">
							<set_value name="$kAAIT_skillMult" exact="(@this.skill.piloting + @this.skill.morale) / 30.0" />
							<set_value name="$kAAIT_attacker" exact="if $kAAIT_gravidarTarget.defensible then $kAAIT_gravidarTarget.defensible else $kAAIT_gravidarTarget" />
							<set_value name="$kAAIT_attackerEntity" exact="if $kAAIT_attacker.assignedaipilot.exists then $kAAIT_attacker.assignedaipilot else $kAAIT_attacker.defencenpc" />
							<check_value value="@$kAAIT_attackerEntity.exists" />
						</check_all>
						<check_any comment="is attacker high-risk. when changed, also change others with the 'is attacker high-risk' comment.">
							<check_all comment="is already set">
								<check_value value="$kAAIT_attacker == @this.$kAAIT_data.$defensibleTarget" />
								<check_value value="this.$kAAIT_data.$isTargetHighRisk" />
							</check_all>
							<check_all comment="xss class">
								<check_any>
									<check_value value="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s]" />
									<check_value value="this.assignedcontrolled.primarypurpose != purpose.fight" />
									<check_value value="this.assignedcontrolled.type == shiptype.carrier" />
								</check_any>
								<check_any>
									<check_all comment="xss v station">
										<check_value value="$kAAIT_attacker.isclass.station" />
										<set_value name="$kAAIT_gunCount" exact="@$kAAIT_attacker.weapons.operational.count + [@$kAAIT_attacker.weapons.operational.count, @$kAAIT_attacker.turrets.operational.count].max" />
										<set_value name="$kAAIT_gunCount_mult" exact="global.$kAAIT_Config.$xss_outnumberVStations / 100.0" />
										<check_value value="@$kAAIT_attackerEntity.$kAAIT_attackers.count * (2 - $kAAIT_skillMult * 1) le $kAAIT_gunCount * $kAAIT_gunCount_mult" />
										<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
									</check_all>
									<check_all comment="xss v ship">
										<check_value value="$kAAIT_attacker.isclass.ship" />
										<check_value value="$kAAIT_attacker.size gt this.assignedcontrolled.size * 1.5" />
										<check_value value="$kAAIT_attacker.primarypurpose == purpose.fight" />
										<check_value value="$kAAIT_attacker.type != shiptype.carrier" />
										<set_value name="$kAAIT_gunCount" exact="@$kAAIT_attacker.weapons.operational.count" />
										<set_value name="$kAAIT_gunCount_mult" exact="global.$kAAIT_Config.$xss_outnumberVShips / 100.0" />
										<check_value value="@$kAAIT_attackerEntity.$kAAIT_attackers.count * (2 - $kAAIT_skillMult * 1) le $kAAIT_gunCount * $kAAIT_gunCount_mult" />
										<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
									</check_all>
								</check_any>
							</check_all>
							<check_all comment="m class">
								<check_value value="this.assignedcontrolled.isclass.ship_m" />
								<check_any>
									<check_all comment="m v station">
										<check_value value="$kAAIT_attacker.isclass.station" />
										<set_value name="$kAAIT_gunCount" exact="@$kAAIT_attacker.weapons.operational.count + [@$kAAIT_attacker.weapons.operational.count, @$kAAIT_attacker.turrets.operational.count].max" />
										<set_value name="$kAAIT_gunCount_mult" exact="global.$kAAIT_Config.$m_outnumberVStations / 100.0" />
										<check_value value="@$kAAIT_attackerEntity.$kAAIT_attackers.count * (2 - $kAAIT_skillMult * 1) le $kAAIT_gunCount * $kAAIT_gunCount_mult" />
										<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
									</check_all>
									<check_all comment="m v ship">
										<check_value value="$kAAIT_attacker.isclass.ship" />
										<check_value value="$kAAIT_attacker.size gt this.assignedcontrolled.size * 1.5" />
										<check_value value="$kAAIT_attacker.primarypurpose == purpose.fight" />
										<check_value value="$kAAIT_attacker.type != shiptype.carrier" />
										<set_value name="$kAAIT_gunCount" exact="@$kAAIT_attacker.weapons.operational.count" />
										<set_value name="$kAAIT_gunCount_mult" exact="global.$kAAIT_Config.$m_outnumberVShips / 100.0" />
										<check_value value="@$kAAIT_attackerEntity.$kAAIT_attackers.count * (2 - $kAAIT_skillMult * 1) le $kAAIT_gunCount * $kAAIT_gunCount_mult" />
										<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
									</check_all>
								</check_any>
							</check_all>
							<check_all comment="lxl class">
								<check_value value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]" />
								<check_any>
									<check_all>
										<check_value value="$kAAIT_attacker.isclass.station" />
										<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
									</check_all>
									<check_all>
										<check_value value="$kAAIT_attacker.size gt this.assignedcontrolled.size * 1.5" />
										<check_value value="$kAAIT_attacker.primarypurpose == purpose.fight" />
										<check_value value="$kAAIT_attacker.type != shiptype.carrier" />
										<check_value value="$kAAIT_attacker.dps.all gt this.assignedcontrolled.dps.all * 1.25" />
										<set_value name="$kAAIT_isHighRiskEvent" exact="true" />
									</check_all>
								</check_any>
							</check_all>
						</check_any>
						<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk $kAAIT_isHighRiskEvent: ' + @$kAAIT_isHighRiskEvent" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
						<check_all comment="is gravidar target not an attack target">
							<check_value value="@$kAAIT_isHighRiskEvent" />
							<check_value value="$kAAIT_attacker != @this.$kAAIT_data.$defensibleTarget" />
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk not an attack target'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_value value="$kAAIT_attacker != @this.assignedcontrolled.order.$primarytarget" />
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk not an attack target'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_value value="$kAAIT_attacker != @this.assignedcontrolled.nextorder.$primarytarget" />
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk not an attack target'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_value value="$kAAIT_attacker != @this.assignedcontrolled.order.$selectedtarget" />
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk not an attack target'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_value value="$kAAIT_attacker != @$target" />
						</check_all>
						<check_all comment="is gravidar target obstructing destination">
							<check_any>
								<check_value value="not $destination?" />
								<check_value value="$position?" />
								<check_all>
									<check_value value="$destination?" />
									<check_value value="$kAAIT_attacker != $destination" />
									<check_value value="this.assignedcontrolled.bboxdistanceto.{$kAAIT_attacker} le this.assignedcontrolled.distanceto.{$destination}" />
									<set_value name="$kAAIT_pathComponent_final" exact="$destination" />
								</check_all>
							</check_any>
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk nearer than dest or no dest'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_any>
								<check_value value="not $destination?" />
								<check_value value="not $position?" />
								<check_all>
									<check_value value="$destination?" />
									<check_value value="$kAAIT_attacker != $destination" />
									<check_value value="@$position" />
									<check_value value="this.assignedcontrolled.bboxdistanceto.{$kAAIT_attacker} le this.assignedcontrolled.distanceto.[$destination, $position]" />
									<set_value name="$kAAIT_pathComponent_final" exact="$destination" />
								</check_all>
							</check_any>
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk nearer than dest+pos or (no dest+pos)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_any>
								<check_value value="not $positionspace?" />
								<check_value value="$position?" />
								<check_all>
									<check_value value="$positionspace?" />
									<check_value value="$kAAIT_attacker != $positionspace" />
									<check_value value="this.assignedcontrolled.bboxdistanceto.{$kAAIT_attacker} le this.assignedcontrolled.distanceto.{$positionspace}" />
									<set_value name="$kAAIT_pathComponent_final" exact="$positionspace" />
								</check_all>
							</check_any>
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk nearer than positionspaces or (no positionspace)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_any>
								<check_value value="not $positionspace?" />
								<check_value value="not $position?" />
								<check_all>
									<check_value value="$positionspace?" />
									<check_value value="$kAAIT_attacker != $positionspace" />
									<check_value value="$position?" />
									<check_value value="this.assignedcontrolled.bboxdistanceto.{$kAAIT_attacker} le this.assignedcontrolled.distanceto.[$positionspace, $position]" />
									<set_value name="$kAAIT_pathComponent_final" exact="$positionspace" />
								</check_all>
							</check_any>
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk nearer than positionspace+pos or (no positionspace+pos)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<check_any>
								<check_value value="not $target?" />
								<check_all>
									<check_value value="$target?" />
									<check_value value="$kAAIT_attacker != $target" />
									<check_value value="$target.isclass.[class.ship, class.station]" />
									<check_value value="this.assignedcontrolled.bboxdistanceto.{$kAAIT_attacker} le this.assignedcontrolled.distanceto.{$target}" />
									<set_value name="$kAAIT_pathComponent_final" exact="$target" />
								</check_all>
							</check_any>
							<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk nearer than target'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
							<set_value name="$kAAIT_isGravidarHighRiskAndNearerThanDestination" exact="true" />
						</check_all>
						<!-- <debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Handler_AvoidHighRisk $kAAIT_isGravidarHighRiskAndNearerThanDestination: ' + @$kAAIT_isGravidarHighRiskAndNearerThanDestination" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
					</check_all>
				</check_any>
			</conditions>
			<actions>
				<debug_text text="this.assignedcontrolled.idcode + ' EVENT event.name: ' + event.name + ' event.param: ' + @event.param.knownname + ' ' + @event.param.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isJustFight: ' + @$kAAIT_isJustFight" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isResetRallyPoints: ' + @$kAAIT_isResetRallyPoints" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' ' + @$kAAIT_gravidarTarget + ' (' + @$kAAIT_gravidarTarget.knownname + ' ' + @$kAAIT_gravidarTarget.idcode + ') != $selectedtarget (' + $selectedtarget.knownname + ' ' + $selectedtarget.idcode + '): ' + (@$kAAIT_gravidarTarget.isoperational and @$kAAIT_gravidarTarget != $selectedtarget)" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isHighRiskEvent: ' + @$kAAIT_isHighRiskEvent" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isNearerThanDestination: ' + @$kAAIT_isNearerThanDestination" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isGravidarHighRiskAndNearerThanDestination: ' + @$kAAIT_isGravidarHighRiskAndNearerThanDestination" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="
					@$kAAIT_isJustFight or
					this.assignedcontrolled.bboxdistanceto.{$primarytarget} le this.assignedcontrolled.maxradarrange * 1.25">
					<include_interrupt_actions ref="kAAIT_RemoveWaitsAndJustFight" />
					<abort_called_scripts resume="attack" />
				</do_if>
				<do_elseif value="@$kAAIT_isResetRallyPoints">
					<abort_called_scripts resume="start" />
				</do_elseif>
				<do_elseif value="@$kAAIT_isGravidarHighRiskAndNearerThanDestination">
					<do_if value="$kAAIT_gravidarTarget != $primarytarget">
						<set_value name="$kAAIT_test_target_isInTheWay" exact="$kAAIT_gravidarTarget" />
						<set_value name="$kAAIT_test_target_isInTheWayOf" exact="$primarytarget" />
						<include_interrupt_actions ref="kAAIT_GetIsTargetInTheWay" />
						<remove_value name="$kAAIT_test_target_isInTheWay" />
						<remove_value name="$kAAIT_test_target_isInTheWayOf" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_result_isTargetInTheWay: ' + @$kAAIT_result_isTargetInTheWay" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<do_if value="$kAAIT_result_isTargetInTheWay">
							<set_value name="$kAAIT_avoid" exact="$kAAIT_gravidarTarget" />
							<abort_called_scripts resume="kAAIT_label_avoid" />
						</do_if>
						<do_else>
							<abort_called_scripts resume="start" />
						</do_else>
					</do_if>
					<do_else>
						<abort_called_scripts resume="start" />
					</do_else>
				</do_elseif>
				<remove_value name="$kAAIT_isJustFight" />
				<remove_value name="$kAAIT_isResetRallyPoints" />
				<remove_value name="$kAAIT_gravidarTarget" />
			    <remove_value name="$kAAIT_skillMult" />
			    <remove_value name="$kAAIT_attacker" />
			    <remove_value name="$kAAIT_attackerEntity" />
			    <remove_value name="$kAAIT_gunCount" />
			    <remove_value name="$kAAIT_gunCount_mult" />
				<remove_value name="$kAAIT_isHighRiskEvent" />
				<remove_value name="$kAAIT_isNearerThanDestination" />
				<remove_value name="$kAAIT_isGravidarHighRiskAndNearerThanDestination" />
				<remove_value name="$kAAIT_result_isTargetInTheWay" />
			</actions>
		</handler>
	</add>
<!-- add.
	<init>
-->
	<add pos="prepend" sel="//init">
		<!-- <set_value name="$debugchance" exact="100" /> -->
		<debug_text text="this.assignedcontrolled.idcode + ' EVENT init'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_isCancelled" exact="false" />
	</add>
<!-- add. purpose: because there's a sync point, the order cancels, reinits then re-gives orders on the first move_to.
	to prevent a 2nd re-init, create the sync point here and force a quick move to.
	this should cancel the order, re-inii before anything else resulting in the main code to not run twice.
	<label name="start" />
-->
	<add pos="before" sel="//label[@name=&quot;start&quot;]">
		<set_value name="$kAAIT_sector" exact="$primarytarget.sector" />
		<create_order_syncpoint owner="this.assignedcontrolled.order" />
		<move_to object="this.assignedcontrolled" destination="this.assignedcontrolled.zone">
			<position value="this.assignedcontrolled.position" />
		</move_to>
	</add>
	<!-- also, remove this: <create_order_syncpoint owner="this.ship.order" /> -->
	<remove sel="//create_order_syncpoint[@owner=&quot;this.ship.order&quot;]" />
<!-- add before. purpose: behaviours.
	<label name="fight" />
-->
	<add pos="before" sel="//label[@name=&quot;start&quot;]">
		<resume label="start" />

		<label name="kAAIT_label_avoid" />
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL kAAIT_label_avoid'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="this.$kAAIT_data.$target_avoid" exact="$kAAIT_avoid" />
		<include_interrupt_actions ref="kAAIT_Order_Avoid" />
		<wait min="5s" max="10s" />
		<resume label="start" />
	</add>
<!-- add after. purpose: reset allow for resetting rally points.
	<label name="start" />
-->
	<add pos="after" sel="//label[@name=&quot;start&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL start'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<set_value name="$kAAIT_orderLocation_space" exact="$primarytarget" />
		<set_value name="$kAAIT_sector_start" exact="$primarytarget.sector" />
		<create_position name="$kAAIT_orderLocation_pos" x="0" y="0" z="0" />
		<set_value name="$kAAIT_pos_tacticatTarget" exact="$kAAITParam_tacticalOrderTarget.position" />
		<include_interrupt_actions ref="clear_all_orders" />
		<do_if value="not $ORDERS?">
			<set_value name="$ORDERS" exact="table[]" />
		</do_if>
	</add>
<!-- add before. purpose: ensure target is in the same sector.
	<label name="targetselection" />
-->
	<add pos="before" sel="//label[@name=&quot;targetselection&quot;]">
		<do_if value="this.sector == $primarytarget.sector">
			<resume label="kAAT_label_finish_move_to_sector" />
		</do_if>
		<label name="kAAT_label_move_to_sector" />
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL kAAT_label_move_to_sector'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
        <move_to destination="$primarytarget" object="this.assignedcontrolled" forcerotation="true" forceposition="false" travel="true">
			<interrupts>
				<conditions>
					<event_object_changed_zone object="$primarytarget" />
					<check_value value="this.sector == $primarytarget.sector" />
				</conditions>
			</interrupts>
        </move_to>
		<!-- <run_script name="'move.generic'" result="$movesuccess">
			<param name="destination" value="$primarytarget.sector" />
			<param name="kAAITParam_iskAAITOrder" value="true" />
		</run_script> -->
		<do_if value="this.sector != $primarytarget.sector">
			<resume label="kAAT_label_move_to_sector" />
		</do_if>
		<label name="kAAT_label_finish_move_to_sector" />
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL kAAT_label_finish_move_to_sector'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="after" sel="//label[@name=&quot;targetselection&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL targetselection'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: do not give orders to subordinates with orders.
	<include_interrupt_actions ref="create_orders" />
-->
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[3]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not @$subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (initial subordinate order): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[2]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not $subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (target destroyed): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
	<replace sel="(//include_interrupt_actions[@ref=&quot;create_orders&quot;])[1]">
		<do_if value="
			this.assignedcontrolled.gatedistance.{$subordinate} le 1 and
			(
				(not @$subordinate.orders.count) or
				(
					@$subordinate.orders.count == 1 and
					(
						@$subordinate.order.id == 'DockAndWait' or
						@$subordinate.order.id == 'DockAt' or
						@$subordinate.order.id == 'MoveWait' or
						@$subordinate.order.id == 'Wait' or
						@$subordinate.order.id == 'WaitForSignal'
					)
				)
			)
		">
			<debug_text text="this.assignedcontrolled.idcode + ' $subordinate (subordinate added): ' + @$subordinate.knownname + ' ' + @$subordinate.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="create_orders" />
		</do_if>
	</replace>
<!-- add. purpose: do not get initialpos kAAIT_AdjustRallyPoint will do it.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[2]" type="@chance">0</add>
<!-- add. purpose: move rally point 40km from target. move to engage position that is applied AFTER this will be closer to the target.
	<transform_position refposition="$enemypos" refrotation="$orientation" name="$initialpos">
-->
	<add pos="after" sel="(//transform_position[@refposition=&quot;$enemypos&quot;][@refrotation=&quot;$orientation&quot;][@name=&quot;$initialpos&quot;])[2]">
		<set_value name="$kAAIT_rallyPointOwner" exact="this.assignedcontrolled" />
		<include_interrupt_actions ref="kAAIT_AdjustRallyPoint" />
		<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.keys.list: ' + @$ORDERS.keys.list" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_for_each name="$ordergroup" in="$ORDERS">
			<debug_text text="this.assignedcontrolled.idcode + ' $ORDERS.{$ordergroup}.$MoveWait.count: ' + @$ORDERS.{$ordergroup}.$MoveWait.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_if value="@$ORDERS.{$ordergroup}.$MoveWait">
				<do_for_each name="$order" in="$ORDERS.{$ordergroup}.$MoveWait">
					<debug_text text="this.assignedcontrolled.idcode + ' $order.id: ' + @$order.id" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				</do_for_each>
			</do_if>
		</do_for_each>
	</add>
<!-- add. purpose: remove interrupt_after_time.
	<move_to destination="$primarytarget.sector" object="this.ship" forcerotation="true" forceposition="false" travel="true">
-->
	<add pos="before" sel="//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;]">
		<set_value name="$kAAIT_orderLocation_space" exact="$primarytarget.sector" />
		<set_value name="$kAAIT_orderLocation_pos" exact="$initialpos" />
		<set_value name="$kAAIT_distFromTargetToRallyPoint_last" exact="$primarytarget.bboxdistanceto.[$primarytarget.sector, $initialpos]" />
		<debug_text text="this.assignedcontrolled.idcode + ' move (pre) distanceto: ' + this.assignedcontrolled.bboxdistanceto.{$selectedtarget}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<remove sel="//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;]/interrupt_after_time" />
	<add pos="after" sel="//move_to[@destination=&quot;$primarytarget.sector&quot;][@object=&quot;this.ship&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' move (post) distanceto: ' + this.assignedcontrolled.bboxdistanceto.{$selectedtarget}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add. purpose: debug.
	<wait exact="$timeout">
-->
	<add pos="before" sel="//wait[@exact=&quot;$timeout&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' wait (pre)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
	<add pos="after" sel="//wait[@exact=&quot;$timeout&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' wait (post)'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- replace. purpose: create_order instead of run_script attack ai.
	run_script attack prevents from kaait signal_objects from getting received for some reason. investigate in future.
	<run_script name="'order.fight.attack.object'">
-->
	<replace sel="//run_script[@name=&quot;'order.fight.attack.object'&quot;]">
		<label name="kAAITLabel_just_fight" />
		<set_value name="this.$kAAIT_tacticalOrdersToCancel" exact="[]" />
		<do_for_each name="$ordergroup" in="$ORDERS" reverse="true">
			<do_for_each valuename="$kAAIT_orders" in="$ORDERS.{$ordergroup}" reverse="true">
				<do_for_each name="$kAAIT_order" in="$kAAIT_orders" reverse="true">
					<do_if value="$kAAIT_order.exists">
						<debug_text text="this.assignedcontrolled.idcode + ' cancel this when done ' + $kAAIT_order.id + ' on ' + @$kAAIT_order.object.knownname + ' ' + @$kAAIT_order.object.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<append_to_list name="this.$kAAIT_tacticalOrdersToCancel" exact="$kAAIT_order" />
					</do_if>
				</do_for_each>
			</do_for_each>
		</do_for_each>
		<create_order object="this.assignedcontrolled" id="'Attack'">
	        <param name="primarytarget" value="$primarytarget"/>
			<param name="pursuedistance" value="this.assignedcontrolled.maxradarrange" />
			<param name="pursuetargets" value="true" />
	        <param name="allowothertargets" value="false"/>
	        <param name="allowboost" value="true" />
	        <param name="squad_attack" value="false"/>
			<param name="kAAITParam_isAvoidHighRisk" value="@$kAAITParam_isAvoidHighRisk" />
			<param name="kAAITParam_isStepForwardWithdraw" value="@$kAAITParam_isStepForwardWithdraw" />
		</create_order>
	</replace>
<!-- add. purpose: clear initial pos from blackboard
	<label name="finish" />
-->
	<add pos="after" sel="//label[@name=&quot;finish&quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' LABEL finish'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
<!-- add chance. purspose: do not cancel subordinate orders unless order is actually cancelled.
	<label name="finish" />
	<include_interrupt_actions ref="clear_all_orders" />
-->
	<add sel="//label[@name=&quot;finish&quot;]/following-sibling::include_interrupt_actions[@ref=&quot;clear_all_orders&quot;]" type="@chance">if @$kAAIT_isCancelled then 100 else 0</add>
<!-- add. purspose: debug.
	<on_abort>
		<include_interrupt_actions ref="clear_all_orders" />
-->
	<add pos="prepend" sel="//on_abort">
		<debug_text text="this.assignedcontrolled.idcode + ' on_abort'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
	</add>
</diff>
