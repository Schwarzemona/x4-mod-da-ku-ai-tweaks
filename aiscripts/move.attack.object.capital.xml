<?xml version="1.0" encoding="utf-8" ?>
<diff>
<!-- add. purpose: data store
	<params>
-->
	<add sel="//params">
		<param name="kAAITParam_isAutoAdded" required="false" default="false" type="internal" />
		<param name="kAAITParam_data" required="false" default="null" type="internal" />
		<param name="kAAITParam_isAvoidHighRisk" required="false" type="bool" text="{1111920, 3}" default="false" />
		<param name="kAAITParam_isStepForwardWithdraw" required="false" type="internal" text="{1111920, 109}" default="false" />
	</add>
<!-- add before at 4 instances. purpose: debug and show move in map.
	the order location properties are in order.fight.attack.object as $kAAITParam_data.$orderLocation_space and $kAAITParam_data.$orderLocation_pos.
	setting $kAAITParam_data.$orderLocation_space and $kAAITParam_data.$orderLocation_pos will show the order performing the move instead of as the attack.
	<move_to>
-->
	<add pos="before" sel="(//move_to)[1]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (1) rotate to aim'" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		</do_if>
	</add>
	<add pos="before" sel="(//move_to)[2]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (2) rotate to look away'" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		</do_if>
	</add>
	<add pos="before" sel="//move_strafe">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' move_strafe'" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		</do_if>
	</add>
	<add pos="before" sel="(//move_to)[3]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<debug_text text="this.assignedcontrolled.idcode + ' move_to (3)'" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_if value="@$kAAITParam_data">
				<set_value name="$kAAITParam_data.$orderLocation_space" exact="$target" />
				<set_value name="$kAAITParam_data.$orderLocation_pos" exact="$pos" />
			</do_if>
		</do_if>
	</add>
	<add pos="after" sel="(//move_to)[3]">
		<do_if value="@$kAAITParam_data">
			<remove_value name="$kAAITParam_data.$orderLocation_space" />
			<remove_value name="$kAAITParam_data.$orderLocation_pos" />
		</do_if>
	</add>
<!-- add prepend. purpose: init var.
	<init>
-->
	<add pos="prepend" sel="//init">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<include_interrupt_actions ref="kAAIT_Init" />
			<!-- <debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isTargetPotentialHighRisk (kAAIT_Init): ' + @$kAAIT_isTargetPotentialHighRisk + ' $kAAIT_isTargetHighRisk: ' + @$kAAIT_isTargetHighRisk" chance="100" /> -->
		</do_if>
	</add>
<!-- add prepend in first instance. purpose: init. disallow boosts.
	<actions>
-->
	<add pos="prepend" sel="(//actions)[1]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<do_if value="@$kAAIT_isTargetPotentialHighRisk">
				<set_value name="$allowboost" exact="false" />
			</do_if>
		</do_if>
	</add>
<!-- add after 1st instance. purpose: replace aimdist. more stable combat range.
	<set_value name="$aimdist" min="$maxeffectivecombatrange * (0.4 * (1.0 + (($skill_piloting + $skill_morale)f / 30.0)))" max="$maxeffectivecombatrange * (1.0 - (($skill_piloting + $skill_morale)f / 300.0))"/>
-->
	<add pos="after" sel="(//set_value[@name=&quot;$aimdist&quot;])[1]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<include_interrupt_actions ref="kAAIT_LXL_GetCombatRange" />
			<set_value name="$aimdist" exact="$kAAIT_combatRange" />
		</do_if>
	</add>
<!-- add after. purpose: hijack effective range and move thresholds.
	<set_value name="$movethreshold_max" exact="$maxeffectivecombatrange"/>
-->
	<add pos="after" sel="//set_value[@name=&quot;$movethreshold_max&quot;][@exact=&quot;$maxeffectivecombatrange&quot;]">
		<do_if value="@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw">
			<set_value name="$maxeffectivecombatrange" exact="$kAAIT_maxCombatRange"/>
			<!-- <set_value name="$movethreshold_min" exact="$kAAIT_minCombatRange"/> -->
			<!-- <set_value name="$movethreshold_min" exact="[$movethreshold_min, $kAAIT_combatRange].max"/> -->
			<set_value name="$movethreshold_max" exact="[$movethreshold_max, $kAAIT_maxCombatRange].max"/>
		</do_if>
	</add>
<!-- add before. purpose: debug
	<do_if value="$distance gt $movethreshold_max or $distance lt $movethreshold_min">
-->
	<add pos="before" sel="//do_if[@value=&quot;$distance gt $movethreshold_max or $distance lt $movethreshold_min&quot;]">
		<do_if value="@$kAAITParam_isAvoidHighRisk">
			<debug_text text="this.assignedcontrolled.idcode + ' $distance: ' + $distance + ' $aimdist: ' + $aimdist + ' $maxeffectivecombatrange: ' + $maxeffectivecombatrange + ' $movethreshold_min: ' + $movethreshold_min + ' $movethreshold_max: ' + $movethreshold_max" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		</do_if>
	</add>
<!-- add "not isstation" to value. purpose: prevent going to the other side of target, if target is a station module!
	<do_if value="$target.distanceto.[$target.sector, $pos] gt $movethreshold_max or $target.distanceto.[$target.sector, $pos] lt $movethreshold_min">
-->
	<add pos="before" sel="//do_if[@value=&quot;$target.distanceto.[$target.sector, $pos] gt $movethreshold_max or $target.distanceto.[$target.sector, $pos] lt $movethreshold_min&quot;]">
		<do_if value="
			@$kAAIT_isTargetPotentialHighRisk and
			(@$kAAITParam_isAvoidHighRisk or @$kAAITParam_isStepForwardWithdraw)
		">
			<set_value name="$kAAIT_findPosOnOtherSide" exact="false" />
			<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_findPosOnOtherSide (1): ' + $kAAIT_findPosOnOtherSide" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_if value="$target.distanceto.[$target.sector, $pos] gt $movethreshold_max or $kAAIT_isLXLNewModuleTarget">
				<include_interrupt_actions ref="kAAIT_XSSM_AttackOrNot" />
				<do_if value="@$kAAITParam_isAvoidOrderGiven">
					<do_if value="@$kAAIT_isLXLNewModuleTarget">
						<set_value name="$kAAIT_isLXLNewModuleTarget" exact="false" />
						<!-- this is an embedded move, so a move_to is required here. -->
						<!-- and a getsafepos also, because move order is not used. -->
						<!-- avoidSpace is always either a sector or a zone -->
						<!-- <debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_avoidSpace: ' + $kAAIT_avoidSpace" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
						<!-- <debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_avoidSpace: ' + $kAAIT_avoidSpace" /> -->
						<do_if value="@$kAAIT_avoidSpace and $kAAIT_avoidSpace.isclass.space and $kAAIT_avoidPos?">
							<do_if value="@$kAAITParam_data">
								<set_value name="$kAAITParam_data.$orderLocation_space" exact="$kAAIT_avoidSpace" />
								<set_value name="$kAAITParam_data.$orderLocation_pos" exact="$kAAIT_avoidPos" />
							</do_if>
							<move_to
							object="this.ship"
							destination="$kAAIT_avoidSpace"
							uselocalhighways="false"
							useknownpath="this.isplayerowned"
							forcesteering="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m]"
							commandaction="false">
								<position value="$kAAIT_avoidPos"/>
							</move_to>
							<do_if value="@$kAAITParam_data">
								<remove_value name="$kAAITParam_data.$orderLocation_space" />
								<remove_value name="$kAAITParam_data.$orderLocation_pos" />
							</do_if>
						</do_if>
						<resume label="fight"/>
					</do_if>
					<do_else>
						<!-- empty. -->
						<!-- if not kAAIT_isLXLNewModuleTarget, a new order (rather than an embedded move_to) is created, and this attack order automatically resumes as if it has started anew. -->
					</do_else>
				</do_if>
			</do_if>
		</do_if>
		<do_else>
			<set_value name="$kAAIT_findPosOnOtherSide" exact="$target.distanceto.[$target.sector, $pos] gt $movethreshold_max or $target.distanceto.[$target.sector, $pos] lt $movethreshold_min" />
			<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_findPosOnOtherSide (2): ' + $kAAIT_findPosOnOtherSide" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		</do_else>
	</add>
	<replace sel="//do_if[@value=&quot;$target.distanceto.[$target.sector, $pos] gt $movethreshold_max or $target.distanceto.[$target.sector, $pos] lt $movethreshold_min&quot;]/@value">$kAAIT_findPosOnOtherSide</replace>
<!-- replace check value. purpose: consider shield for reaction.
	<wait exact="$updatetime">
		<interrupt>
			<conditions>
				...
				<check_value value="player.age ge $time_waitend"/>
-->
	<replace sel="//wait[@exact=&quot;$updatetime&quot;]//conditions//check_value[@value=&quot;player.age ge $time_waitend&quot;]">
		<check_value value="
			player.age ge $time_waitend or
			(
				this.assignedcontrolled.shieldpercentage le 90 and
				@$kAAITParam_isStepForwardWithdraw
			)
		" />
	</replace>
<!-- add before. purspoe: inch forward or backwards.
	<wait exact="$updatetime">
-->
	<add pos="before" sel="//wait[@exact=&quot;$updatetime&quot;]">
		<do_if value="@$kAAITParam_isStepForwardWithdraw">
			<debug_text text="this.assignedcontrolled.idcode + ' player.age (before wait): ' + player.age + ' $time_waitend: ' + $time_waitend" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		</do_if>
	</add>
	<add pos="prepend" sel="//wait[@exact=&quot;$updatetime&quot;]/interrupt/actions">
		<!-- <debug_text text="this.assignedcontrolled.idcode + ' event.name: ' + event.name + ' event.param: ' + event.param + ' ' + @event.param.knownname" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
		<do_if value="@$kAAITParam_isStepForwardWithdraw">
			<do_if value="event.param == @$kAAIT_defensibleTarget or @event.param.defensible == @$kAAIT_defensibleTarget">
				<set_value name="$kAAITParam_data.$lastAttack_enemy" exact="event.param" />
				<set_value name="$kAAITParam_data.$lastAttack_time" exact="player.age" />
			</do_if>
		</do_if>
	</add>
	<add pos="after" sel="//wait[@exact=&quot;$updatetime&quot;]">
		<do_if value="@$kAAITParam_isStepForwardWithdraw">
			<debug_text text="this.assignedcontrolled.idcode + ' player.age (after wait): ' + player.age + ' $time_waitend: ' + $time_waitend" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<include_interrupt_actions ref="kAAIT_LXL_StepForwardOrMoveOutOfRange" />
			<!-- when there's already a step forward/withdraw order, $kAAIT_pos will be empty -->
			<do_if value="@$kAAIT_isInching and $kAAIT_pos">
				<!-- these are precise movements, so always assume no get_safe_pos is req. -->
				<do_if value="@$kAAITParam_data">
					<set_value name="$kAAITParam_data.$orderLocation_space" exact="this.assignedcontrolled.zone" />
					<set_value name="$kAAITParam_data.$orderLocation_pos" exact="$kAAIT_pos" />
				</do_if>
				<move_to
				object="this.ship"
				destination="this.assignedcontrolled.zone"
				uselocalhighways="false"
				useknownpath="this.isplayerowned"
				forcesteering="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m]"
				commandaction="false">
					<position value="$kAAIT_pos"/>
				</move_to>
				<do_if value="@$kAAITParam_data">
					<remove_value name="$kAAITParam_data.$orderLocation_space" />
					<remove_value name="$kAAITParam_data.$orderLocation_pos" />
				</do_if>
				<remove_value name="$kAAIT_isInching" />
				<remove_value name="$kAAIT_pos" />
				<resume label="finish" />
			</do_if>
		</do_if>
	</add>
<!-- add before. purpose: debug null vars on update to new version
	<set_value name="$distfactor" exact="($maxeffectivecombatrange - $distance) / $distance " />
-->
	<add pos="before" sel="//set_value[@name=&quot;$distfactor&quot;][@exact=&quot;($maxeffectivecombatrange - $distance) / $distance &quot;]">
		<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isActive: ' + @$kAAIT_isActive + ' $kAAITParam_data: ' + @$kAAITParam_data" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<debug_text text="this.assignedcontrolled.idcode + ' $maxeffectivecombatrange: ' + $maxeffectivecombatrange + ' $distance: ' + $distance" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		<do_if value="(not @$maxeffectivecombatrange) or (not @$distance)">
			<debug_text text="this.assignedcontrolled.idcode + ' resume label fight. mod updated: $maxeffectivecombatrange ' + @$maxeffectivecombatrange + ' $distance: ' + @$distance + ' $kAAIT_isActive: ' + @$kAAIT_isActive + ' $kAAITParam_data: ' + @$kAAITParam_data" />
			<resume label="fight" />
		</do_if>
	</add>
<!-- add after 2nd instance. purpose: if chasing small ships near big enemy, move away.
	<get_safe_pos result="$pos" object="$target" min="$minoperationalrange" max="$maxoperationalrange" sector="$target.sector" direction="$weakquadrant" directionobject="$target" radius="this.ship.size/2.0" ignored="this.ship"/>
-->
	<add pos="after" sel="(//get_safe_pos[@result=&quot;$pos&quot;][@object=&quot;$target&quot;][@min=&quot;$minoperationalrange&quot;][@max=&quot;$maxoperationalrange&quot;][@sector=&quot;$target.sector&quot;][@direction=&quot;$weakquadrant&quot;][@directionobject=&quot;$target&quot;][@radius=&quot;this.ship.size/2.0&quot;][@ignored=&quot;this.ship&quot;])[2]">
		<do_if value="@$kAAITParam_isStepForwardWithdraw">
			<include_interrupt_actions ref="kAAIT_GetIsNearBigEnemies" />
			<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_shipIsNearBigEnemy: ' + $kAAIT_shipIsNearBigEnemy + ' $kAAIT_targetIsNearBigEnemy: ' + $kAAIT_targetIsNearBigEnemy" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			<do_if value="@$kAAIT_shipIsNearBigEnemy or @$kAAIT_targetIsNearBigEnemy">
				<!-- move away -->
				<include_interrupt_actions ref="kAAIT_Order_Avoid" />
				<do_if value="this.assignedcontrolled.attention lt attention.visible">
					<resume label="finish" />
				</do_if>
			</do_if>
		</do_if>
	</add>
<!-- add after. purpose: debugging
	<create_position name="$pos" space="$target" value="$pos" object="$target.sector"/>
-->
	<add pos="after" sel="//create_position[@name=&quot;$pos&quot;][@space=&quot;$target&quot;][@value=&quot;$pos&quot;][@object=&quot;$target.sector&quot;]">
		<do_if value="this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode and @global.$kAAIT_Config.$debugChance">
			<!-- <create_position name="$pos" space="$target" value="$pos" object="$target.sector"/> -->
			<create_position name="$kAAIT_posAttack" space="$target.sector" object="$target" value="$pos" />
			<do_if value="@$kAAITParam_data.$beacon_to2.exists">
				<destroy_object object="$kAAITParam_data.$beacon_to2" />
			</do_if>
			<create_object name="$kAAITParam_data.$beacon_to2" sector="$target.sector" macro="macro.env_deco_nav_beacon_t1_macro" owner="faction.player">
				<position value="$kAAIT_posAttack"/>
			</create_object>
			<set_object_name object="$kAAITParam_data.$beacon_to2" name="this.assignedcontrolled.idcode + ' to (move to attack pos)'" />
			<debug_text text="this.assignedcontrolled.idcode + ' beaconto.distanceto.ship: ' + ($kAAITParam_data.$beacon_to2.distanceto.{this.assignedcontrolled})" chance="if @this.assignedcontrolled.sector == @player.entity.sector or this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
		</do_if>
	</add>
<!-- add. purpose: consider shield for reaction.
	<move_strafe destination="$target" abortpath="not @$abortpath" object="this.assignedcontrolled" finishonapproach="false" forcerotation="true" sinceversion="10">
		<interrupt>
			<conditions>
				<check_any>
-->
	<add sel="//move_strafe[@destination=&quot;$target&quot;]/interrupt/conditions/check_any">
		<check_all>
			<event_object_attacked object="this.assignedcontrolled" />
			<check_value value="this.assignedcontrolled.shieldpercentage le 90" />
			<check_value value="@$kAAITParam_isStepForwardWithdraw" />
		</check_all>
	</add>
<!-- add after. purpose: var for last attack.
	<move_strafe destination="$target" abortpath="not @$abortpath" object="this.assignedcontrolled" finishonapproach="false" forcerotation="true" sinceversion="10">
		<interrupt>
			<conditions>
-->
	<add pos="after" sel="//move_strafe[@destination=&quot;$target&quot;]/interrupt/conditions">
		<actions>
			<do_if value="@$kAAITParam_isStepForwardWithdraw">
				<set_value name="$kAAITParam_data.$lastAttack_enemy" exact="event.param" />
				<set_value name="$kAAITParam_data.$lastAttack_time" exact="player.age" />
			</do_if>
		</actions>
	</add>
<!-- add. purpose: consider shield for reaction.
	<move_to destination="$target" abortpath="not @$noabortpath" object="this.assignedcontrolled" finishonapproach="false" forceposition="false" forcerotation="false" uselocalhighways="false" boost="@$boost" travel="@$travel">
		<interrupt>
			<conditions>
				<check_any>
-->
	<add sel="//move_to[@destination=&quot;$target&quot;]/interrupt/conditions/check_any">
		<check_all>
			<event_object_attacked object="this.assignedcontrolled" />
			<check_value value="this.assignedcontrolled.shieldpercentage le 90" />
			<check_value value="@$kAAITParam_isStepForwardWithdraw" />
		</check_all>
	</add>
<!-- add after. purpose: var for last attack.
	<move_to destination="$target" abortpath="not @$noabortpath" object="this.assignedcontrolled" finishonapproach="false" forceposition="false" forcerotation="false" uselocalhighways="false" boost="@$boost" travel="@$travel">
		<interrupt>
			<conditions>
-->
	<add pos="after" sel="//move_to[@destination=&quot;$target&quot;]/interrupt/conditions">
		<actions>
			<do_if value="@$kAAITParam_isStepForwardWithdraw">
				<set_value name="$kAAITParam_data.$lastAttack_enemy" exact="event.param" />
				<set_value name="$kAAITParam_data.$lastAttack_time" exact="player.age" />
			</do_if>
		</actions>
	</add>
<!-- add after. purpose: inch forward if no recent damage from big target.
	<do_if value="this.ship.sector == $target.sector">
		...
		<do_if value="@$boost">
-->
	<add pos="after" sel="//do_if[@value=&quot;this.ship.sector == $target.sector&quot;]/do_if[@value=&quot;@$boost&quot;]">
		<do_if value="@$kAAITParam_isStepForwardWithdraw">
			<include_interrupt_actions ref="kAAIT_LXL_StepForwardOrMoveOutOfRange" />
			<!-- when there's already a step forward/withdraw order, $kAAIT_pos will be empty -->
			<do_if value="@$kAAIT_isInching and $kAAIT_pos">
				<!-- these are precise movements, so always assume no get_safe_pos is req. -->
				<do_if value="@$kAAITParam_data">
					<set_value name="$kAAITParam_data.$orderLocation_space" exact="this.assignedcontrolled.zone" />
					<set_value name="$kAAITParam_data.$orderLocation_pos" exact="$kAAIT_pos" />
				</do_if>
				<move_to
				object="this.ship"
				destination="this.assignedcontrolled.zone"
				uselocalhighways="false"
				useknownpath="this.isplayerowned"
				forcesteering="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m]"
				commandaction="false">
					<position value="$kAAIT_pos"/>
				</move_to>
				<do_if value="@$kAAITParam_data">
					<remove_value name="$kAAITParam_data.$orderLocation_space" />
					<remove_value name="$kAAITParam_data.$orderLocation_pos" />
				</do_if>
				<remove_value name="$kAAIT_isInching" />
				<remove_value name="$kAAIT_pos" />
				<resume label="finish" />
			</do_if>
		</do_if>
	</add>
<!-- add after finish. purpose: clean-up.
	<label name="finish" />
-->
	<add pos="after" sel="//label[@name=&quot;finish&quot;]">
		<include_interrupt_actions ref="kAAIT_RemoveAttackerFromTarget" />
	</add>
	<!-- DeadAir Diffs -->
	<replace sel="/aiscript/params/param[@name='minrange']/@default">if @$target.iscapitalship or $target.isrealclass.station or $target.container.isrealclass.station then ([this.ship.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.85) else ([this.ship.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.4)</replace>
	<replace sel="/aiscript/params/param[@name='maxrange']/@default">if @$target.iscapitalship or $target.isrealclass.station or $target.container.isrealclass.station then ([this.ship.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.95) else ([this.ship.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.9)</replace>
	<remove sel="/aiscript/init/do_if[@value='this.isplayerowned']"/>
	<remove sel="/aiscript/attention/actions/do_if[@value='not $disable']/do_if[@value='this.ship.dps.missiles.all']"/>
	<remove sel="/aiscript/attention/actions/do_if[@value='not @$frontweapon']"/>
	<replace sel="/aiscript/attention/actions/do_if[@value='$iscarrier and $maintaindistance']/set_value[@name='$minoperationalrange'][@exact='[this.assignedcontrolled.maxradarrange, $pursuedistance].min * 0.6']/@exact">([this.assignedcontrolled.maxradarrange, $pursuedistance].min * 0.7)</replace>
	<replace sel="/aiscript/attention/actions/do_if[@value='$iscarrier and $maintaindistance']/set_value[@name='$maxoperationalrange'][@exact='[this.assignedcontrolled.maxradarrange, $pursuedistance].min * 0.9']/@exact">([this.assignedcontrolled.maxradarrange, $pursuedistance].min * 0.9)</replace>
	<replace sel="/aiscript/attention/actions/do_elseif[@value='@$frontweapon == 1']/set_value[@name='$minoperationalrange'][@exact='[this.assignedcontrolled.maxcombatrange.lasers.all * 0.6, $minrange].min']/@exact">if (this.assignedcontrolled.maxcombatrange.lasers.all ge this.assignedcontrolled.maxcombatrange.all * 0.5) then (if ($isstation or $target.iscapitalship) then ([this.assignedcontrolled.maxcombatrange.lasers.all,this.assignedcontrolled.maxradarrange].min * 0.85) else ([this.assignedcontrolled.maxcombatrange.lasers.all,this.assignedcontrolled.maxradarrange].min * 0.4)) else $minrange</replace>
	<replace sel="/aiscript/attention/actions/do_elseif[@value='@$frontweapon == 1']/set_value[@name='$maxoperationalrange'][@exact='[this.assignedcontrolled.maxcombatrange.lasers.all * 0.9, $maxrange].min']/@exact">if (this.assignedcontrolled.maxcombatrange.lasers.all ge this.assignedcontrolled.maxcombatrange.all * 0.5) then (if ($isstation or $target.iscapitalship) then ([this.assignedcontrolled.maxcombatrange.lasers.all,this.assignedcontrolled.maxradarrange].min * 0.95) else ([this.assignedcontrolled.maxcombatrange.lasers.all,this.assignedcontrolled.maxradarrange].min * 0.9)) else $maxrange</replace>
	<replace sel="/aiscript/attention/actions/do_else[1]/set_value[@name='$minoperationalrange'][@exact='$minrange']/@exact">if ($isstation or $target.iscapitalship) then ([this.assignedcontrolled.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.85) else ([this.assignedcontrolled.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.4)</replace>
	<replace sel="/aiscript/attention/actions/do_else[1]/set_value[@name='$maxoperationalrange'][@exact='$maxrange']/@exact">if ($isstation or $target.iscapitalship) then ([this.assignedcontrolled.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.95) else ([this.assignedcontrolled.maxcombatrange.all,this.assignedcontrolled.maxradarrange].min * 0.9)</replace>
	<replace sel="/aiscript/attention/actions/do_if[@value='$isstation']/set_value[@name='$quadrants'][@exact='[quadrant.left, quadrant.right, quadrant.up, quadrant.down, quadrant.back, quadrant.front]']/@exact">[quadrant.left, quadrant.right, quadrant.back, quadrant.front]</replace>
	<replace sel="/aiscript/attention/actions/do_else[2]/set_value[@name='$quadrants'][@exact='[quadrant.left, quadrant.right, quadrant.back]']/@exact">[quadrant.left, quadrant.right, quadrant.back, quadrant.front]</replace>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='$iscarrier']/do_if[@value='not $iscarrier']/set_value[@name='$minoperationalrange'][@exact='$minrange']/@exact">if ($isstation or $target.iscapitalship) then (this.assignedcontrolled.maxcombatrange.all * 0.85) else (this.assignedcontrolled.maxcombatrange.all * 0.4)</replace>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='$iscarrier']/do_if[@value='not $iscarrier']/set_value[@name='$maxoperationalrange'][@exact='$maxrange']/@exact">if ($isstation or $target.iscapitalship) then (this.assignedcontrolled.maxcombatrange.all * 0.95) else (this.assignedcontrolled.maxcombatrange.all * 0.9)</replace>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/set_value[@name='$maxeffectivecombatrange'][@exact='this.assignedcontrolled.maxcombatrange.all * 0.8']/@exact">$maxoperationalrange</replace>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_if[@value='this.assignedcontrolled.dps.lasers.all']">
		<set_value name="$aimdist" min="$minoperationalrange" max="$maxoperationalrange" profile="bell"/>
	</replace>
	<remove sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/set_value[@name='$aimdist'][@min='$maxeffectivecombatrange * (0.4 * (1.0 + (($skill_piloting + $skill_morale)f / 30.0)))']"/>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/set_value[@name='$movethreshold_min'][@exact='[$maxeffectivecombatrange * 0.5, $aimdist - 1m].min']/@exact">if ((@$target.order.id == 'Flee') or @$target.travel.active) then [$maxeffectivecombatrange * 0.5, $aimdist - 1m].min else $minoperationalrange * 0.75</replace>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_if[@value='$distance ge $movethreshold_min']/move_to" type="@boost">false</add>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_if[@value='$distance ge $movethreshold_min']/move_to" type="@travel">false</add>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_if[@value='$distance gt $movethreshold_max or $distance lt $movethreshold_min']/get_safe_pos">
		<create_position name="$targetposition" space="$target.sector" object="$target"/>
	</replace>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_if[@value='$distance gt $movethreshold_max or $distance lt $movethreshold_min']/debug_text[@chance='$debugchance'][2]" pos="before">
		<get_safe_pos result="$pos" y="$targetposition.y" radius="this.ship.size/2.0" sector="$target.sector" ignored="this.ship" allowyaxis="false" object="$target" directionobject="this.ship" min="$minoperationalrange" max="$maxoperationalrange" profile="bell"/>
	</add>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_if[@value='$distance gt $movethreshold_max or $distance lt $movethreshold_min']/do_if[@value='$distance gt $movethreshold_max']/create_position[@name='$locpos']" pos="before">
		<create_position name="$targetposition" space="$target.sector" object="$target"/>
	</add>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_if[@value='$distance gt $movethreshold_max or $distance lt $movethreshold_min']/do_else[2]/set_value[@name='$boost']/@chance">if (this.assignedcontrolled.shieldpercentage gt 75) then $allowboost * 100 else 0</replace>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_elseif[@value='$distance le $movethreshold_max and $distance ge $movethreshold_min']/do_if[@value='@$holdposition']/set_value[@name='$time_waitend'][@exact='player.age + (($updatetime * 4) / (16 - $skill_morale))']/@exact">player.age + (($updatetime * 4) / (16 - [$skill_morale,9].max))</replace>
	<remove sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_elseif[@value='$distance le $movethreshold_max and $distance ge $movethreshold_min']/do_if[@value='not ($isstation or $frontweapon?)']/@chance"/>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_else[2]/move_to" type="@boost">false</add>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_else[2]/move_to" type="@travel">false</add>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_else[2]/set_value[@name='$distfactor'][@exact='($maxeffectivecombatrange - $distance) / $distance ']" pos="before">
		<set_value name="$distance" exact="this.assignedcontrolled.bboxdistanceto.{$target}"/>
	</add>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_if[@value='$frontweapon?']/do_else[2]/set_value[@name='$boost']/@chance">if (this.assignedcontrolled.shieldpercentage gt 75) then ($allowboost * 100) else 0</replace>
	<remove sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_else/do_else/do_else/get_safe_pos/@direction"/>
	<remove sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_else/do_else/do_else/get_safe_pos/@directionobject"/>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $issmall']/do_else/do_else/do_else/get_safe_pos" type="@profile">bell</add>
	<remove sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_else[2]/get_safe_pos/@direction"/>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_else[2]/get_safe_pos/@directionobject">this.ship</replace>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_else[2]/get_safe_pos" type="@profile">bell</add>
	<remove sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='(@$lastquadranttupdate lt player.age) and not @$frontweapon']/@chance"/>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='(@$lastquadranttupdate lt player.age) and not @$frontweapon']/set_value[@name='$lastquadranttupdate'][@exact='player.age + 30s']/@exact">player.age + 30s + (30s - (30*($combinedskill/100.0)))s</replace>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='(@$lastquadranttupdate lt player.age) and not @$frontweapon']/do_any">
		<do_if value="this.ship.dps.turrets.{quadrant.front} gt this.ship.dps.turrets.{$bestquadrant}">
			<set_value name="$bestquadrant" exact="quadrant.front"/>
		</do_if>
	</replace>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='(@$lastquadranttupdate lt player.age) and not @$frontweapon']">
		<set_value name="$weakquadrant" exact="$weakquadrants.{1}"/>
	</add>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='not $boost? and $allowboost and ($combinedskill ge 80)']/@value">(not $boost? and $allowboost) or ($allowboost and (this.ship.distanceto.[$target.sector, $pos] gt 15km) and (this.ship.bboxdistanceto.{$target} gt $maxoperationalrange))</replace>
	<remove sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='(not $boost? and $allowboost) or ($allowboost and (this.ship.distanceto.[$target.sector, $pos] gt 15km) and (this.ship.bboxdistanceto.{$target} gt $maxoperationalrange))']/@chance"/>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='$boost?']/do_if[@value='(this.assignedcontrolled.shieldpercentage gt 50) and this.assignedcontrolled.boost.maxduration']/@value">(this.assignedcontrolled.shieldpercentage gt 75) and (this.assignedcontrolled.boost.maxduration)</replace>
	<replace sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='$boost?']/do_if[@value='(this.assignedcontrolled.shieldpercentage gt 75) and (this.assignedcontrolled.boost.maxduration)']/set_value[@name='$updatetime'][@exact='(this.assignedcontrolled.boost.maxduration * (this.assignedcontrolled.shieldpercentage / 100.0) * 0.5)s']/@exact">(this.assignedcontrolled.boost.maxduration * (this.assignedcontrolled.shieldpercentage / 100.0) * 0.25)s</replace>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='this.ship.sector == $target.sector']/do_if[@value='$strafe?']/move_strafe" type="@boost">false</add>
	<add sel="/aiscript/attention/actions/do_while[@value='$target.canbeattacked and this.ship.defencenpc.exists']/do_if[@value='this.ship.sector == $target.sector']/do_if[@value='$strafe?']/move_strafe" type="@travel">false</add>
</diff>
