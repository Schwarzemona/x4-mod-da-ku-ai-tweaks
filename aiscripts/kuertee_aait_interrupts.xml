<?xml version="1.0" encoding="utf-8"?>
<aiscript name="kuertee_aait_interrupts" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
	<interrupts>
		<library>
			<actions name="kAAIT_Init">
				<debug_text text="this.assignedcontrolled.idcode + ' (kAAIT_Init) ' + this.assignedcontrolled.knownname + ' ' + this.assignedcontrolled.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' (kAAIT_Init) $this.kAAITParam_dataAfterMoveGeneric: ' + @this.$kAAITParam_dataAfterMoveGeneric" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="@this.$beacon_from or @this.$kAAIT_target or @this.$kAAIT_orders">
					<include_interrupt_actions ref="kAAIT_CleanUpOldVersionData" />
				</do_if>
				<!--
					reminder: how to add withdraw AI as a "one-shot":
					1. include its handler in the aiscript's <interrupts>.
						i.e. <handler ref="kAAIT_WithdrawHandler"/>
					2. add conditions to set $kAAIT_isDeInitAfterMoveGeneric to true, so that after the withdrawal, kAAIT is removed from the order that issued the withdrawal.
						e.g.: <set_value name="$kAAIT_isDeInitAfterMoveGeneric" exact="['SupplyFleet', 'Escort', 'Follow'].indexof.{this.assignedcontrolled.orders.{1}.id}" />
					3. add conditions to set $kAAIT_isIgnoreInchForward in kAAIT_WithdrawHandler so that the ship will never inch forward.
						e.g.: <set_value name="$kAAIT_isIgnoreInchForward" exact="['SupplyFleet', 'Escort', 'Follow'].indexof.{this.assignedcontrolled.orders.{1}.id} gt 0" />
						they shouldn't inch forward if this order is not an attack order. e.g. SupplyFleet.
						but they should be able to withdraw. hence the need for a one-shot withdraw AI.
				-->
				<set_value name="$kAAIT_isDeInitAfterMoveGeneric" exact="
					['SupplyFleet', 'Escort', 'Follow'].indexof.{@this.assignedcontrolled.orders.{1}.id} > 0 or
					['SupplyFleet', 'Escort', 'Follow'].indexof.{@this.assignedcontrolled.defaultorder.id} > 0 
				" />
				<do_if value="(not @$kAAITParam_isAttackOrder) and @this.$kAAITParam_dataAfterMoveGeneric and $kAAIT_isDeInitAfterMoveGeneric">
					<include_interrupt_actions ref="kAAIT_Deinit" />
				</do_if>
				<do_else>
					<set_value name="$kAAITParam_isActive" exact="true" />
					<do_if value="not @$kAAITParam_data">
						<do_if value="@this.$kAAITParam_dataAfterMoveGeneric">
							<debug_text text="this.assignedcontrolled.idcode + ' REMEMBERED ATTACK ORDER'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<set_value name="$kAAITParam_data" exact="this.$kAAITParam_dataAfterMoveGeneric" />
							<remove_value name="this.$kAAITParam_dataAfterMoveGeneric" />
						</do_if>
						<do_else>
							<do_if value="@$kAAIT_isAvoidOrderGiven">
								<debug_text text="this.assignedcontrolled.idcode + ' AVOID ORDER CANCELLED'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
								<set_value name="$kAAITParam_isAvoidHighRisk" exact="false" />
							</do_if>
							<do_if value="@$kAAIT_isStepForwardWithdrawGiven">
								<debug_text text="this.assignedcontrolled.idcode + ' STEP FORWARD/WITHDRAW ORDER CANCELLED'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
								<set_value name="$kAAITParam_isStepForwardWithdraw" exact="false" />
							</do_if>
							<debug_text text="this.assignedcontrolled.idcode + ' NEW ATTACK ORDER'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<set_value name="$kAAITParam_data" exact="table[]" />
						</do_else>
					</do_if>
					<do_else>
						<debug_text text="this.assignedcontrolled.idcode + ' CONTINUED ATTACK ORDER'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					</do_else>
					<set_value name="$kAAIT_isAvoidOrderGiven" exact="false" />
					<set_value name="$kAAIT_isStepForwardWithdrawGiven" exact="false" />
					<do_if value="@$primarytarget.exists and (not $primarytarget.isclass.[class.ship, class.station])">
						<set_value name="$kAAITParam_data.$kAAIT_moduleTarget" exact="@$primarytarget" />
					</do_if>
					<set_value name="$kAAIT_defensibleTarget" exact="@$primarytarget" />
					<do_if value="not @$kAAIT_defensibleTarget.exists">
						<set_value name="$kAAIT_defensibleTarget" exact="@$target" />
					</do_if>
					<do_if value="not @$kAAIT_defensibleTarget.exists and this.assignedcontrolled.commander">
						<set_value name="$kAAIT_defensibleTarget" exact="@this.assignedcontrolled.commander.orders.{1}.$kAAITParam_data.$kAAIT_defensibleTarget" />
					</do_if>
					<do_if value="not @$kAAIT_defensibleTarget.exists and this.assignedcontrolled.toplevelcommander">
						<set_value name="$kAAIT_defensibleTarget" exact="@this.assignedcontrolled.toplevelcommander.orders.{1}.$kAAITParam_data.$kAAIT_defensibleTarget" />
					</do_if>
					<do_if value="@$kAAIT_defensibleTarget.defensible.exists">
						<set_value name="$kAAIT_defensibleTarget" exact="$kAAIT_defensibleTarget.defensible" />
					</do_if>
					<do_if value="@$kAAIT_defensibleTarget.assignedaipilot.isoperational">
						<set_value name="$kAAIT_defensibleTargetEntity" exact="$kAAIT_defensibleTarget.assignedaipilot" />
					</do_if>
					<do_elseif value="@$kAAIT_defensibleTarget.defencenpc.isoperational">
						<set_value name="$kAAIT_defensibleTargetEntity" exact="$kAAIT_defensibleTarget.defencenpc" />
					</do_elseif>
					<include_interrupt_actions ref="kAAIT_GetIsTargetHighRisk" />
					<do_if value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]">
						<set_value name="$kAAIT_isLXLNewModuleTarget" exact="false" />
						<do_if value="
						 	@$kAAITParam_data.$kAAIT_defensibleTarget == $kAAIT_defensibleTarget and
						 	@$kAAITParam_data.$kAAIT_isEngagePositionSet and
						 	@$kAAIT_isTargetHighRisk and
							(
								(@$primarytarget.exists and (not $primarytarget.isclass.[class.ship, class.station]) and @$kAAITParam_data.$kAAIT_moduleTarget != $primarytarget)
								or
								(@$target.exists and (not $target.isclass.[class.ship, class.station]) and @$kAAITParam_data.$kAAIT_moduleTarget != $target)
							)
						 ">
							<debug_text text="this.assignedcontrolled.idcode + ' NEW MODULE TARGET'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<set_value name="$kAAIT_isLXLNewModuleTarget" exact="true" />
							<set_value name="$kAAITParam_data.$kAAIT_moduleTarget" exact="if $primarytarget? then $primarytarget else $target" />
							<set_value name="$kAAITParam_data.$inchForwardCount" exact="0" />
						</do_if>
					</do_if>
					<set_value name="$kAAITParam_data.$kAAIT_defensibleTarget" exact="$kAAIT_defensibleTarget" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_defensibleTarget: ' + $kAAIT_defensibleTarget + ', ' + @$kAAIT_defensibleTarget.knownname + ', ' + @$kAAIT_defensibleTarget.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<do_if value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]">
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_data.$defensibleTarget_stopKamikaze: ' + @$kAAITParam_data.$defensibleTarget_stopKamikaze + ', ' + @$kAAITParam_data.$defensibleTarget_stopKamikaze.knownname + ', ' + @$kAAITParam_data.$defensibleTarget_stopKamikaze.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					</do_if>
				</do_else>
			</actions>

			<actions name="kAAIT_Deinit">
				<debug_text text="this.assignedcontrolled.idcode + ' (kAAIT_Deinit) ' + this.assignedcontrolled.knownname + ' ' + this.assignedcontrolled.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<include_interrupt_actions ref="kAAIT_RemoveAttackerFromTarget" />
				<remove_value name="this.$kAAITParam_dataAfterMoveGeneric" />
				<set_value name="$kAAITParam_isActive" exact="false" />
			</actions>

			<actions name="kAAIT_CleanUpOldVersionData">
				<!-- start: clean-up obsolete data from previous version -->
				<!-- current version: most of these vars in $kAAITParam_data -->
				<do_if value="@this.$beacon_from.exists"><destroy_object object="this.$beacon_from" /></do_if>
				<do_if value="@this.$beacon_to.exists"><destroy_object object="this.$beacon_to" /></do_if>
				<do_if value="@this.$beacon_avoid1.exists"><destroy_object object="this.$beacon_avoid1" /></do_if>
				<do_if value="@this.$beacon_avoid2.exists"><destroy_object object="this.$beacon_avoid2" /></do_if>
				<remove_value name="this.$beacon_from" />
				<remove_value name="this.$beacon_to" />
				<remove_value name="this.$beacon_avoid1" />
				<remove_value name="this.$beacon_avoid2" />
				<remove_value name="this.$kAAIT_defensibleTarget_stopKamikaze" />
				<remove_value name="this.$kAAIT_target" />
				<remove_value name="this.$kAAIT_orders" />
				<remove_value name="this.$kAAIT_aroundDir" />
				<remove_value name="this.$kAAIT_lastAttack_enemy" />
				<remove_value name="this.$kAAIT_lastAttack_time" />
				<remove_value name="this.$kAAIT_lastAttack_timeLastSafe" />
				<remove_value name="this.$kAAIT_inchForwardCount" />
				<remove_value name="this.$kAAIT_movedOutOfRangeCount" />
				<remove_value name="this.$kAAIT_orderLocation_space" />
				<remove_value name="this.$kAAIT_orderLocation_pos" />
				<!-- end: clean-up obsolete data from previous version -->
			</actions>

			<actions name="kAAIT_AddAttackerToTarget">
				<do_if value="@$kAAIT_defensibleTargetEntity.isoperational">
					<do_if value="not $kAAIT_defensibleTargetEntity.$kAAIT_attackers?">
						<create_group groupname="$kAAIT_defensibleTargetEntity.$kAAIT_attackers" />
					</do_if>
					<do_if value="not $kAAIT_defensibleTargetEntity.$kAAIT_attackers_lxl?">
						<create_group groupname="$kAAIT_defensibleTargetEntity.$kAAIT_attackers_lxl" />
					</do_if>
					<do_if value="player.age - @$kAAIT_defensibleTargetEntity.$kAAIT_attackers_timeAdded gt 60min">
						<clear_group group="$kAAIT_defensibleTargetEntity.$kAAIT_attackers" />
						<clear_group group="$kAAIT_defensibleTargetEntity.$kAAIT_attackers_lxl" />
					</do_if>
					<do_if value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]">
						<add_to_group groupname="$kAAIT_defensibleTargetEntity.$kAAIT_attackers_lxl" object="this.assignedcontrolled" />
					</do_if>
					<do_else>
						<add_to_group groupname="$kAAIT_defensibleTargetEntity.$kAAIT_attackers" object="this.assignedcontrolled" />
					</do_else>
					<set_value name="$kAAIT_defensibleTargetEntity.$kAAIT_attackers_timeAdded" exact="player.age" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_attackers (add to ' + $kAAIT_defensibleTarget + ' ' + $kAAIT_defensibleTarget.knownname + '): ' + $kAAIT_defensibleTargetEntity.$kAAIT_attackers.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				</do_if>
			</actions>

			<actions name="kAAIT_RemoveAttackerFromTarget">
				<do_if value="@$kAAIT_defensibleTargetEntity.isoperational">
					<do_if value="not $kAAIT_defensibleTargetEntity.$kAAIT_attackers?">
						<create_group groupname="$kAAIT_defensibleTargetEntity.$kAAIT_attackers" />
					</do_if>
					<do_if value="not $kAAIT_defensibleTargetEntity.$kAAIT_attackers_lxl?">
						<create_group groupname="$kAAIT_defensibleTargetEntity.$kAAIT_attackers_lxl" />
					</do_if>
					<remove_from_group group="$kAAIT_defensibleTargetEntity.$kAAIT_attackers" object="this.assignedcontrolled" />
					<remove_from_group group="$kAAIT_defensibleTargetEntity.$kAAIT_attackers_lxl" object="this.assignedcontrolled" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_attackers (remove from ' + $kAAIT_defensibleTarget + ' ' + $kAAIT_defensibleTarget.knownname + '): ' + $kAAIT_defensibleTargetEntity.$kAAIT_attackers.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<do_if value="not @$kAAIT_defensibleTargetEntity.$kAAIT_attackers.count">
						<remove_value name="$kAAIT_defensibleTargetEntity.$kAAIT_attackers" />
					</do_if>
				</do_if>
			</actions>
			<!--
				
				  ,,                                   ,,    ,,
				`7MM                                 `7MM  `7MM
				  MM                                   MM    MM
				  MMpMMMb.   ,6"Yb.  `7MMpMMMb.   ,M""bMM    MM  .gP"Ya `7Mb,od8 ,pP"Ybd
				  MM    MM  8)   MM    MM    MM ,AP    MM    MM ,M'   Yb  MM' "' 8I   `"
				  MM    MM   ,pm9MM    MM    MM 8MI    MM    MM 8M""""""  MM     `YMMMa.
				  MM    MM  8M   MM    MM    MM `Mb    MM    MM YM.    ,  MM     L.   I8
				.JMML  JMML.`Moo9^Yo..JMML  JMML.`Wbmd"MML..JMML.`Mbmmd'.JMML.   M9mmmP'
				
				
			 -->
			<handler name="kAAIT_WithdrawHandler">
				<!-- this handler ONLY allows the withdraw AI to be added to other orders. -->
				<conditions>
					<check_any>
						<!-- Event for the specified object being attacked (object = attacked object, param = attacker, param2 = kill method, param3 = attacked component) -->
						<event_object_attacked object="this.assignedcontrolled" />
						<event_object_signalled object="this.assignedcontrolled" param="'debug aait withdraw'"/>
					</check_any>
					<check_value value="not this.assignedcontrolled.isunit" />
					<check_value value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]" />
					<check_any>
						<check_all>
							<check_value value="this.assignedcontrolled.isplayerowned" />
							<check_any>
								<check_value value="event.param.isclass.ship" />
								<check_value value="@event.param.defensible.isclass.ship" />
								<check_value value="event.name != 'event_object_attacked'" />
							</check_any>
							<check_any>
								<check_value value="@global.$kAAIT_Config.$lxl_isStepForward_vShip" />
								<check_value value="@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip" />
							</check_any>
						</check_all>
						<check_all>
							<check_value value="this.assignedcontrolled.isplayerowned" />
							<check_any>
								<check_value value="event.param.isclass.station" />
								<check_value value="@event.param.defensible.isclass.station" />
								<check_value value="event.name != 'event_object_attacked'" />
							</check_any>
							<check_any>
								<check_value value="@global.$kAAIT_Config.$lxl_isStepForward_vStation" />
								<check_value value="@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation" />
							</check_any>
						</check_all>
						<check_all>
							<check_value value="not this.assignedcontrolled.isplayerowned" />
							<check_any>
								<check_value value="event.param.isclass.ship" />
								<check_value value="@event.param.defensible.isclass.ship" />
								<check_value value="event.name != 'event_object_attacked'" />
							</check_any>
							<check_any>
								<check_value value="@global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions" />
								<check_value value="@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions" />
							</check_any>
						</check_all>
						<check_all>
							<check_value value="not this.assignedcontrolled.isplayerowned" />
							<check_any>
								<check_value value="event.param.isclass.station" />
								<check_value value="@event.param.defensible.isclass.station" />
								<check_value value="event.name != 'event_object_attacked'" />
							</check_any>
							<check_any>
								<check_value value="@global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions" />
								<check_value value="@global.$kAAIT_Config.$lxl_isMoveOutOfRange_vStation_allFactions" />
							</check_any>
						</check_all>
					</check_any>
				</conditions>
				<actions>
					<debug_text text="this.assignedcontrolled.idcode + ' player.age (kAAIT_WithdrawHandler): ' + player.age" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<include_interrupt_actions ref="kAAIT_Init" />
					<do_if value="$kAAITParam_data">
						<set_value name="$kAAITParam_data.$lastAttack_enemy" exact="event.param" />
						<set_value name="$kAAITParam_data.$lastAttack_time" exact="player.age" />
						<set_value name="$target" exact="@$kAAIT_defensibleTarget" />
						<!-- never inch forward for these orders. only apply withdraw AI when apprpriate. -->
						<set_value name="$kAAIT_isIgnoreInchForward" exact="
							event.name == 'event_object_signalled' or
							['SupplyFleet', 'Escort', 'Follow'].indexof.{@this.assignedcontrolled.orders.{1}.id} > 0 or
							['SupplyFleet', 'Escort', 'Follow'].indexof.{@this.assignedcontrolled.defaultorder.id} > 0
						" />
						<include_interrupt_actions ref="kAAIT_LXL_StepForwardOrMoveOutOfRange" />
					</do_if>
				</actions>
			</handler>

			<!-- <handler name="kAAIT_AttackOrder_EnteredSectorWithTarget">
				<conditions>
					<event_object_changed_sector object="this.assignedcontrolled" />
					<check_value value="event.param.exists" />
					<check_value value="event.param == @$kAAIT_defensibleTarget.sector" />
					<check_value value="@$kAAITParam_isAvoidHighRisk" />
				</conditions>
				<actions>
					<debug_text text="this.assignedcontrolled.idcode + ' event_object_changed_sector event.object: ' + @event.object.knownname + ', ' + @event.object.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<abort_called_scripts resume="fight"/>
				</actions>
			</handler> -->

			<!-- only ships that are allowed to avoid high-risk enemies/move to engage position will ever have this handler. -->
			<!-- there's no need to assess whether they should. -->
			<handler name="kAAIT_MoveToEngagePosition_ShipOrTargetChangedZone">
				<conditions>
					<check_any>
						<event_object_changed_zone object="this.assignedcontrolled" />
						<event_object_changed_zone object="$kAAITParam_enemyAvoid" />
						<event_object_attacked object="$kAAITParam_enemyAvoid" attacker="this.assignedcontrolled" />
						<event_object_attacked_object object="$kAAITParam_enemyAvoid" attacked="this.assignedcontrolled" />
					</check_any>
					<check_value value="@$kAAITParam_isAvoidHighRisk" />
					<check_value value="$kAAITParam_enemyAvoid.isclass.ship" />
				</conditions>
				<actions>
					<debug_text text="this.assignedcontrolled.idcode + ' event.name: ' + event.name + ', event.object: ' + @event.object.knownname + ', ' + @event.object.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<do_if value="
						this.assignedcontrolled.sector != $kAAITParam_enemyAvoid.sector or
						['event_object_attacked', 'event_object_attacked_object'].indexof.{event.name}
					">
						<abort_called_scripts resume="finish"/>
					</do_if>
					<do_else>
						<set_value name="$kAAIT_distToTarget" exact="this.assignedcontrolled.distanceto.{$kAAITParam_enemyAvoid}" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_distToTarget: ' + $kAAIT_distToTarget + ', $kAAITParam_data.$kAAIT_isEngagePositionSet: ' + @$kAAITParam_data.$kAAIT_isEngagePositionSet" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<do_if value="$kAAIT_distToTarget gt 100km">
							<do_if value="@$kAAITParam_data.$kAAIT_isEngagePositionSet">
								<!-- move to target -->
								<remove_value name="$kAAITParam_data.$kAAIT_isEngagePositionSet" />
								<remove_value name="$kAAIT_moveToSpace" />
								<remove_value name="$kAAIT_moveToPos" />
								<include_interrupt_actions ref="kAAIT_UpdateOrderLocation" />
								<set_value name="$destination" exact="$kAAITParam_enemyAvoid" />
								<set_value name="$position" exact="null" />
								<abort_called_scripts resume="start"/>
							</do_if>
						</do_if>
						<do_else>
							<do_if value="(not @$kAAITParam_data.$kAAIT_isEngagePositionSet)">
								<!-- move to engage position -->
								<set_value name="$kAAITParam_data.$kAAIT_isEngagePositionSet" exact="true" />
								<do_if value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]">
									<set_value name="$kAAIT_isStopKamikaze" exact="true" />
								</do_if>
								<include_interrupt_actions ref="kAAIT_GetAvoidPos" />
								<remove_value name="$kAAIT_isStopKamikaze" />
								<include_interrupt_actions ref="kAAIT_UpdateOrderLocation" />
								<set_value name="$destination" exact="$kAAIT_moveToSpace" />
								<set_value name="$position" exact="$kAAIT_moveToPos" />
								<abort_called_scripts resume="start"/>
							</do_if>
						</do_else>
					</do_else>
				</actions>
			</handler>

			<handler name="kAAIT_TargetDestroyed">
				<conditions>
					<check_any>
						<event_object_destroyed object="$kAAITParam_enemyAvoid" />
						<check_all>
							<event_object_changed_sector object="$kAAITParam_enemyAvoid" />
							<check_value value="event.param != @this.assignedcontrolled.sector" />
						</check_all>
					</check_any>
					<check_value value="@$kAAITParam_isAvoidHighRisk" />
				</conditions>
				<actions>
					<debug_text text="this.assignedcontrolled.idcode + ' event_object_destroyed event.object: ' + @event.object.knownname + ', ' + @event.object.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<abort_called_scripts resume="finish"/>
				</actions>
			</handler>
			<!--
				
				                       ,,
				                     `7MM
				                       MM
				 ,pW"Wq.`7Mb,od8  ,M""bMM  .gP"Ya `7Mb,od8 ,pP"Ybd
				6W'   `Wb MM' "',AP    MM ,M'   Yb  MM' "' 8I   `"
				8M     M8 MM    8MI    MM 8M""""""  MM     `YMMMa.
				YA.   ,A9 MM    `Mb    MM YM.    ,  MM     L.   I8
				 `Ybmd9'.JMML.   `Wbmd"MML.`Mbmmd'.JMML.   M9mmmP'
				
				
			 -->
			<actions name="kAAIT_InitOrders">
				<do_if value="@$kAAITParam_data and (not @$kAAITParam_data.$orders)">
					<set_value name="$kAAITParam_data.$orders" exact="table[]" /> 
				</do_if>
			</actions>

			<actions name="kAAIT_CleanOrders">
				<do_for_each name="$order_inList" in="this.assignedcontrolled.orders" reverse="true">
					<do_if value="$order_inList.$primarytarget? and (not $order_inList.$primarytarget.isoperational)">
						<cancel_order order="$order_inList" />
					</do_if>
				</do_for_each>
			</actions>

			<actions name="kAAIT_Order_AttackOther">
				<include_interrupt_actions ref="kAAIT_InitOrders" />
				<debug_text text="'$attackOther.exists (kAAIT_Order_AttackOther): ' + @$kAAITParam_data.$orders.$attackOther.exists + ' $pimrarytarget: ' + @$kAAITParam_data.$orders.$attackOther.$primarytarget" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="not @$kAAITParam_data.$orders.$attackOther.exists">
					<include_interrupt_actions ref="kAAIT_FindSmallerTargetFarFromBigTarget" />
					<do_if value="@$kAAIT_smallerTarget.isoperational">
						<debug_text text="this.assignedcontrolled.idcode + ' create_order Attack'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<set_value name="$kAAITParam_isActive" exact="true" />
						<create_order name="$kAAITParam_data.$orders.$attackOther" object="this.assignedcontrolled" id="'Attack'">
							<param name="primarytarget" value="$kAAIT_smallerTarget" />
							<param name="pursuedistance" value="this.assignedcontrolled.sector.size" />
							<param name="pursuetargets" value="true" />
							<param name="kAAITParam_isAutoAdded" value="true" />
							<param name="kAAITParam_data" value="$kAAITParam_data" />
							<param name="kAAITParam_isAvoidHighRisk" value="if this.assignedcontrolled.$kAAIT_isAvoidHighRisk_user? then this.assignedcontrolled.$kAAIT_isAvoidHighRisk_user else @$kAAITParam_isAvoidHighRisk" />
							<param name="debugchance" value="$debugchance"/>
						</create_order>
						<debug_text text="this.assignedcontrolled.idcode + ' post create_order Attack'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					</do_if>
				</do_if>
				<do_else>
					<do_if value="this.assignedcontrolled.orders.indexof.{$kAAITParam_data.$orders.$attackOther} gt 1">
						<move_order order="$kAAITParam_data.$orders.$attackOther" newindex="1" />
					</do_if>
				</do_else>
				<include_interrupt_actions ref="kAAIT_CleanOrders" />
			</actions>

			<actions name="kAAIT_GetAvoidPos">
				<set_value name="$direction" exact="@$kAAITParam_data.$aroundDir" />
				<do_if value="not $direction">
					<set_value name="$direction" exact="[-1, 1].random" />
				</do_if>
				<!-- chance of reversal -->
				<set_value name="$direction" exact="$direction * [-1, 1, 1, 1].random" />
				<set_value name="$kAAITParam_data.$aroundDir" exact="$direction" />
				<do_if value="@$kAAIT_isStopKamikaze">
					<set_value name="$kAAIT_distToTarget" exact="this.assignedcontrolled.distanceto.{$kAAIT_defensibleTarget}" />
					<do_if value="$kAAIT_defensibleTarget.isclass.ship">
						<set_value name="$kAAIT_avoidDist" exact="[$kAAIT_distToTarget, this.assignedcontrolled.maxradarrange * 0.25].min" />
					</do_if>
					<do_else>
						<set_value name="$kAAIT_avoidDist" exact="[$kAAIT_distToTarget, this.assignedcontrolled.maxradarrange * 0.5].min" />
					</do_else>
				</do_if>
				<do_else>
					<set_value name="$kAAIT_avoidDist" exact="this.assignedcontrolled.maxradarrange * 0.5" />
				</do_else>
				<set_value name="$kAAIT_moveToSpace" exact="$kAAIT_defensibleTarget" />
				<create_position name="$kAAIT_moveToPos" x="0" y="0" z="0" />
				<!-- if in different sectors, kAAIT_MoveToEngagePosition_ShipOrTargetChangedZone will update engage position -->
				<do_if value="
					(
						$kAAIT_defensibleTarget.isclass.station and
						this.assignedcontrolled.sector == @$kAAIT_defensibleTarget.sector
					) or
					(
						$kAAIT_defensibleTarget.isclass.ship and
						$kAAIT_distToTarget lt 100km
					)
				">
					<set_value name="$kAAIT_moveToSpace" exact="this.assignedcontrolled.zone" />
					<create_position name="$kAAIT_posTarget" space="$kAAIT_moveToSpace" object="$kAAIT_defensibleTarget" />
					<create_orientation name="$rotation_targetToShip" orientation="look_at" refposition="this.assignedcontrolled.position">
						<position value="$kAAIT_posTarget" space="$kAAIT_moveToSpace" />
					</create_orientation>
					<set_value name="$yaw_targetToShip_deg" exact="$rotation_targetToShip.yaw * 180 / pi" />
					<set_value name="$yaw_adj" min="30" max="45" />
					<set_value name="$yaw_targetToShip_next_deg" exact="$yaw_targetToShip_deg + $yaw_adj * $direction" />
					<set_value name="$yaw_targetToShip_next_rad" exact="$yaw_targetToShip_next_deg * pi / 180" />
					<set_value name="$pitch_targetToShip_deg" exact="$rotation_targetToShip.pitch * 180 / pi" />
					<set_value name="$pitch_adj" min="0" max="15" />
					<set_value name="$pitch_targetToShip_next_deg" exact="(30 + $pitch_adj) * $direction" />
					<set_value name="$pitch_targetToShip_next_rad" exact="$pitch_targetToShip_next_deg * pi / 180" />
					<create_position name="$kAAIT_moveToPos" space="$kAAIT_moveToSpace"
						x="$kAAIT_posTarget.x + $kAAIT_avoidDist * sin ($yaw_targetToShip_next_rad) * cos ($pitch_targetToShip_next_rad)"
						y="$kAAIT_posTarget.y + $kAAIT_avoidDist * sin ($pitch_targetToShip_next_rad)"
						z="$kAAIT_posTarget.z + $kAAIT_avoidDist * cos ($yaw_targetToShip_next_rad) * cos ($pitch_targetToShip_next_rad)"
					/>
				</do_if>
				<do_else>
					<set_value name="$kAAIT_moveToSpace" exact="$kAAIT_defensibleTarget" />
					<set_value name="$kAAIT_moveToPos" exact="null" />
				</do_else>
			</actions>

			<actions name="kAAIT_Order_Avoid">
				<include_interrupt_actions ref="kAAIT_InitOrders" />
				<do_if value="@$kAAITParam_data and (not @$kAAITParam_data.$orders.$avoid.exists)">
					<set_value name="$kAAITParam_isActive" exact="true" />
					<set_value name="$kAAIT_isAvoidOrderGiven" exact="true" />
					<do_if value="@$kAAIT_isLXLNewModuleTarget">
						<set_value name="$kAAIT_inchDistance" exact="-10" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isLXLNewModuleTarget!'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<debug_text text="this.assignedcontrolled.idcode + ' ============================'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<include_interrupt_actions ref="kAAIT_LXL_Order_AttackMove" />
						<!-- $kAAIT_moveToSpace and $kAAIT_moveToPos may have been removed if kAAIT_LXL_Order_AttackMove created an order  -->
					</do_if>
					<do_else>
						<debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Order_Avoid!'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<debug_text text="this.assignedcontrolled.idcode + ' =================='" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<include_interrupt_actions ref="kAAIT_GetAvoidPos" />
					</do_else>
					<do_if value="@$kAAIT_moveToSpace">
						<set_flight_behaviour object="this.assignedcontrolled" flightbehaviour="flightbehaviour.default" />
						<do_if value="@$kAAIT_isLXLNewModuleTarget">
							<!-- embedded moves are not allowed in interrupt actions, so ensure that a move_to is set in the calling ai script -->
							<!-- in this case, this only occurs in move.attack.object.capital -->
							<!-- so the embedded move_to is in that file. search for "kAAIT_isLXLNewModuleTarget". -->
						</do_if>
						<do_else>
							<set_value name="$kAAIT_orderName" exact="'kAAIT_MoveAvoid'" />
							<do_if value="@$kAAIT_isStopKamikaze">
								<set_value name="$kAAIT_orderName" exact="'kAAIT_MoveEngagePosition'" />
							</do_if>
							<!-- <set_value name="$kAAITParam_data.$isMovingToEngagePosition" exact="@$kAAIT_isStopKamikaze" /> -->
							<debug_text text="this.assignedcontrolled.idcode + ' create_order ' + $kAAIT_orderName" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<create_order name="$kAAITParam_data.$orders.$avoid" object="this.assignedcontrolled" id="$kAAIT_orderName" immediate="true">
								<param name="destination" value="$kAAIT_moveToSpace" />
								<param name="position" value="@$kAAIT_moveToPos" />
								<param name="noboost" value="true" />
								<param name="kAAITParam_isAutoAdded" value="true" />
								<param name="kAAITParam_data" value="$kAAITParam_data" />
								<param name="kAAITParam_aroundDir" value="$direction" />
								<param name="kAAITParam_enemyAvoid" value="$kAAIT_defensibleTarget" />
								<param name="debugchance" value="$debugchance"/>
							</create_order>
							<debug_text text="this.assignedcontrolled.idcode + ' post create_order ' + $kAAIT_orderName" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						</do_else>
					</do_if>
				</do_if>
				<do_elseif value="@$kAAITParam_data.$orders.$avoid.exists">
					<do_if value="this.assignedcontrolled.orders.indexof.{$kAAITParam_data.$orders.$avoid} gt 1">
						<move_order order="$kAAITParam_data.$orders.$avoid" newindex="1" />
					</do_if>
				</do_elseif>
				<include_interrupt_actions ref="kAAIT_CleanOrders" />
			</actions>

			<actions name="kAAIT_Order_Flee">
				<include_interrupt_actions ref="kAAIT_InitOrders" />
				<do_if value="@$kAAITParam_data and (not @$kAAITParam_data.$orders.$flee.exists)">
					<debug_text text="this.assignedcontrolled.idcode + ' kAAIT_Order_Flee!'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' ================='" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<set_value name="$kAAITParam_isActive" exact="true" />
					<create_order name="$kAAITParam_data.$orders.$flee" id="'Flee'" object="this.assignedcontrolled" immediate="true">
						<param name="method" value="'boost'"/>
						<param name="attacker" value="$kAAIT_defensibleTarget"/>
						<param name="donotdrop" value="true"/>
						<param name="deploydistraction" value="$kAAIT_defensibleTarget.isclass.ship"/>
						<param name="log" value="false"/>
						<param name="debugchance" value="$debugchance"/>
					</create_order>
				</do_if>
				<do_elseif value="@$kAAITParam_data.$orders.$flee.exists">
					<do_if value="this.assignedcontrolled.orders.indexof.{$kAAITParam_data.$orders.$flee} gt 1">
						<move_order order="$kAAITParam_data.$orders.$flee" newindex="1" />
					</do_if>
				</do_elseif>
				<include_interrupt_actions ref="kAAIT_CleanOrders" />
			</actions>

			<actions name="kAAIT_LXL_Order_StepForward">
				<debug_text text="this.assignedcontrolled.idcode + ' kAAIT_LXL_Order_StepForward!'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' ============================'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<include_interrupt_actions ref="kAAIT_InitOrders" />
				<do_if value="@$kAAITParam_data and (not @$kAAITParam_data.$orders.$avoid.exists)">
					<do_if value="this.assignedcontrolled.attention ge attention.visible">
						<do_if value="this.assignedcontrolled.dps.all gt @$kAAIT_defensibleTarget.dps.all * 1.5">
							<set_value name="$kAAIT_inchDistance" exact="this.assignedcontrolled.size * 1.5" />
						</do_if>
						<do_elseif value="this.assignedcontrolled.dps.all gt @$kAAIT_defensibleTarget.dps.all">
							<set_value name="$kAAIT_inchDistance" exact="this.assignedcontrolled.size * 1" />
						</do_elseif>
						<do_else>
							<set_value name="$kAAIT_inchDistance" exact="this.assignedcontrolled.size * 0.5" />
						</do_else>
					</do_if>
					<do_else>
						<set_value name="$kAAIT_inchDistance" exact="this.assignedcontrolled.size * 1" />
					</do_else>
					<include_interrupt_actions ref="kAAIT_LXL_Order_AttackMove" />
				</do_if>
				<do_elseif value="@$kAAITParam_data.$orders.$avoid.exists">
					<do_if value="this.assignedcontrolled.orders.indexof.{$kAAITParam_data.$orders.$avoid} gt 1">
						<move_order order="$kAAITParam_data.$orders.$avoid" newindex="1" />
					</do_if>
				</do_elseif>
			</actions>

			<actions name="kAAIT_LXL_Order_MoveOutOfRange">
				<debug_text text="this.assignedcontrolled.idcode + ' kAAIT_LXL_Order_MoveOutOfRange!'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' ==============================='" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<include_interrupt_actions ref="kAAIT_InitOrders" />
				<do_if value="@$kAAITParam_data and (not @$kAAITParam_data.$orders.$avoid.exists)">
					<set_value name="$kAAIT_inchDistance" exact="-1 * (5km + 5km * ((100 - this.assignedcontrolled.shieldpercentage) / 100))" />
					<include_interrupt_actions ref="kAAIT_LXL_Order_AttackMove" />
				</do_if>
				<do_elseif value="@$kAAITParam_data.$orders.$avoid.exists">
					<do_if value="this.assignedcontrolled.orders.indexof.{$kAAITParam_data.$orders.$avoid} gt 1">
						<move_order order="$kAAITParam_data.$orders.$avoid" newindex="1" />
					</do_if>
				</do_elseif>
			</actions>

			<actions name="kAAIT_LXL_Order_AttackMove">
				<include_interrupt_actions ref="kAAIT_InitOrders" />
				<do_if value="@$kAAITParam_data">
					<set_value name="$kAAIT_moveToSpace" exact="this.assignedcontrolled.zone" />
					<create_position name="$kAAIT_posTarget" space="this.assignedcontrolled.zone" object="$target" />
					<create_orientation name="$kAAIT_rotToTarget" orientation="look_at" refposition="$kAAIT_posTarget">
						<position object="this.assignedcontrolled" space="this.assignedcontrolled.zone"/>
					</create_orientation>
					<set_value name="$yaw_adj" min="-1.625" max="1.625" />
					<set_value name="$yaw_deg" exact="$kAAIT_rotToTarget.yaw * 180 / pi + $yaw_adj" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_inchDistance: ' + $kAAIT_inchDistance" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<do_if value="$kAAIT_inchDistance gt 0">
						<!-- if $kAAIT_isLXLNewModuleTarget, $kAAIT_inchDistance is always negative -->
						<set_value name="$yaw_new" exact="$yaw_deg * pi / 180" />
						<create_position name="$kAAIT_moveToPos" space="this.assignedcontrolled.zone"
							x="this.assignedcontrolled.position.x + $kAAIT_inchDistance * sin ($yaw_new) * cos ($kAAIT_rotToTarget.pitch)"
							y="this.assignedcontrolled.position.y + $kAAIT_inchDistance * sin ($kAAIT_rotToTarget.pitch)"
							z="this.assignedcontrolled.position.z + $kAAIT_inchDistance * cos ($yaw_new) * cos ($kAAIT_rotToTarget.pitch)"
						/>
					</do_if>
					<do_else>
						<do_if value="@$kAAIT_isLXLNewModuleTarget">
							<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isLXLNewModuleTarget: adding 30deg adj to withdraw angle'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<set_value name="$yaw_new" exact="($yaw_deg + [-45, 45].random) * pi / 180" />
						</do_if>
						<do_elseif value="$kAAIT_defensibleTarget.isclass.ship">
							<!-- if ship, withdraw at an angle, to allow the friendly ships to catch up to the enemy -->
							<!-- 1/5 chance = no angle, 2/5 chance = 45 deg, 2/5 chance = 90 deg -->
							<set_value name="$yaw_new" exact="($yaw_deg + [-90, -90, -45, -45, 0, 0, 45, 45, 90, 90].random) * pi / 180" />
						</do_elseif>
						<do_else>
							<set_value name="$yaw_new" exact="$yaw_deg * pi / 180" />
						</do_else>
						<create_position name="$kAAIT_moveToPos" space="this.assignedcontrolled.zone"
							x="this.assignedcontrolled.position.x + $kAAIT_inchDistance * sin ($yaw_new) * cos (0)"
							y="this.assignedcontrolled.position.y + $kAAIT_inchDistance * sin (0)"
							z="this.assignedcontrolled.position.z + $kAAIT_inchDistance * cos ($yaw_new) * cos (0)"
						/>
						<do_if value="@$kAAIT_isLXLNewModuleTarget">
							<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isLXLNewModuleTarget: adding 5m adj to withdraw y pos'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<!-- <set_value name="$kAAIT_moveToPos.y" exact="$kAAIT_moveToPos.y + [-5, 5].random" /> -->
							<create_position name="$kAAIT_moveToPos" space="this.assignedcontrolled.zone"
								x="$kAAIT_moveToPos.x"
								y="$kAAIT_moveToPos.y + [-5, 5].random"
								z="$kAAIT_moveToPos.z"
							/>
						</do_if>
					</do_else>
					<debug_text text="this.assignedcontrolled.idcode + ' ship.distanceto.pos: ' + this.assignedcontrolled.distanceto.{$kAAIT_moveToPos}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' ship.distanceto.target: ' + this.assignedcontrolled.distanceto.{$target}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' ship.distanceto.defensible: ' + this.assignedcontrolled.distanceto.{$kAAIT_defensibleTarget}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' pos.distanceto.defensible: ' + $kAAIT_defensibleTarget.distanceto.{$kAAIT_moveToPos} + ' pos.bboxdistanceto.$kAAIT_defensibleTarget: ' + $kAAIT_defensibleTarget.bboxdistanceto.{$kAAIT_moveToPos}" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<set_value name="$kAAITParam_isActive" exact="true" />
					<set_value name="$kAAIT_isStepForwardWithdrawGiven" exact="true" />
					<do_if value="not @$kAAITParam_isAttackOrder">
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_isAttackOrder: ' + @$kAAITParam_isAttackOrder" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<set_value name="$kAAIT_orderName" exact="'kAAIT_MoveStepForward'" />
						<do_if value="$kAAIT_inchDistance lt 0">
							<set_value name="$kAAIT_orderName" exact="'kAAIT_MoveWithdraw'" />
						</do_if>
						<debug_text text="this.assignedcontrolled.idcode + ' create_order ' + $kAAIT_orderName + ', $kAAIT_inchDistance: ' + $kAAIT_inchDistance" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<create_order name="$kAAITParam_data.$orders.$avoid" object="this.assignedcontrolled" id="$kAAIT_orderName" immediate="true">
							<param name="destination" value="$kAAIT_moveToSpace" />
							<param name="position" value="$kAAIT_moveToPos" />
							<param name="noboost" value="true" />
							<param name="precise" value="$kAAIT_inchDistance gt 0 and $kAAIT_inchDistance lt this.assignedcontrolled.size * 2" />
							<param name="kAAITParam_isAutoAdded" value="true" />
							<param name="kAAITParam_data" value="$kAAITParam_data" />
							<param name="kAAITParam_enemyAvoid" value="$kAAIT_defensibleTarget" />
							<param name="debugchance" value="$debugchance"/>
						</create_order>
						<debug_text text="this.assignedcontrolled.idcode + ' post create_order ' + $kAAIT_orderName" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<remove_value name="$kAAIT_moveToSpace" />
						<remove_value name="$kAAIT_moveToPos" />
					</do_if>
				</do_if>
			</actions>
			<!--
				
				  ,,               ,,
				`7MM             `7MM
				  MM               MM
				  MM  `7M'   `MF'  MM
				  MM    `VA ,V'    MM
				  MM      XMX      MM
				  MM    ,V' VA.    MM
				.JMML..AM.   .MA..JMML.
				
				
			 -->
			<actions name="kAAIT_LXL_GetCombatRange">
				<do_if value="@$kAAITParam_data.$movedOutOfRangeCount lt 1">
					<set_value name="$kAAITParam_data.$movedOutOfRangeCount" exact="0" />
				</do_if>
				<set_value name="$kAAIT_maxCombatRange" exact="[
					this.assignedcontrolled.maxcombatrange.primary,
					this.assignedcontrolled.maxcombatrange.secondary,
					this.assignedcontrolled.maxcombatrange.lasers.all,
					this.assignedcontrolled.maxcombatrange.missiles.all,
					this.assignedcontrolled.maxcombatrange.turrets,
				].max * 0.9" />
				<set_value name="$kAAIT_minCombatRange" exact="[
					if this.assignedcontrolled.maxcombatrange.primary then this.assignedcontrolled.maxcombatrange.primary else 1000000,
					if this.assignedcontrolled.maxcombatrange.secondary then this.assignedcontrolled.maxcombatrange.secondary else 1000000,
					if this.assignedcontrolled.maxcombatrange.lasers.all then this.assignedcontrolled.maxcombatrange.lasers.all else 1000000,
					if this.assignedcontrolled.maxcombatrange.missiles.all then this.assignedcontrolled.maxcombatrange.missiles.all else 1000000,
					if this.assignedcontrolled.maxcombatrange.turrets then this.assignedcontrolled.maxcombatrange.turrets else 1000000,
				].min * 0.9" />
				<do_if value="@$kAAIT_defensibleTarget.isoperational">
					<do_if value="not @global.$kAAIT_Config.$optimalRangeIsMax">
						<set_value name="$kAAIT_combatRange" exact="
							[
								$kAAIT_maxCombatRange - ($kAAIT_maxCombatRange - $kAAIT_minCombatRange) * ((this.assignedcontrolled.dps.all + 1) / (($kAAIT_defensibleTarget.dps.all + 1) * 1.5)f)m,
								$kAAIT_minCombatRange,
							].max + 1km * [@$kAAITParam_data.$movedOutOfRangeCount, 0].max
						" />
					</do_if>
					<do_else>
						<set_value name="$kAAIT_combatRange" exact="[
							[
								$kAAIT_maxCombatRange + 1km * [@$kAAITParam_data.$movedOutOfRangeCount, 0].max - 1km * [@$kAAITParam_data.$inchForwardCount, 0].max,
								$kAAIT_minCombatRange
							].max,
							this.assignedcontrolled.maxradarrange * 0.5
						].min" />
					</do_else>
					<!-- <debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_data.$movedOutOfRangeCount: ' + @$kAAITParam_data.$movedOutOfRangeCount + ' $kAAITParam_data.$inchForwardCount: ' + @$kAAITParam_data.$inchForwardCount" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" /> -->
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_combatRange: ' + @$kAAIT_combatRange + ' $kAAIT_minCombatRange: ' + @$kAAIT_minCombatRange + ' $kAAIT_maxCombatRange: ' + @$kAAIT_maxCombatRange + ' $kAAIT_movedOutOfRangeCount: ' + @$kAAIT_movedOutOfRangeCount" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				</do_if>
				<do_else>
					<set_value name="$kAAIT_combatRange" exact="$kAAIT_minCombatRange" />
				</do_else>
			</actions>

			<actions name="kAAIT_LXL_StepForwardOrMoveOutOfRange">
				<do_if value="@$kAAIT_isTargetPotentialHighRisk">
					<debug_text text="this.assignedcontrolled.idcode + ' kAAIT_LXL_StepForwardOrMoveOutOfRange?'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' ======================================'" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<set_value name="$kAAIT_isStepForwardWithdrawGiven" exact="false" />
					<include_interrupt_actions ref="kAAIT_LXL_GetCombatRange" />
					<set_value name="$kAAIT_distToTarget" exact="this.assignedcontrolled.bboxdistanceto.{$target}" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_distToTarget: ' + $kAAIT_distToTarget" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_lastAttack_enemy: ' + @$kAAITParam_data.$lastAttack_enemy.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_lastAttack_time: ' + @$kAAITParam_data.$lastAttack_time" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<debug_text text="this.assignedcontrolled.idcode + ' player.age - @$kAAITParam_data.$lastAttack_time gt 1min: ' + (player.age - @$kAAITParam_data.$lastAttack_time gt 1min)" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<do_if value="
						(@$kAAITParam_data.$lastAttack_enemy != $kAAIT_defensibleTarget or player.age - @$kAAITParam_data.$lastAttack_time gt 1min)
						and
						this.assignedcontrolled.shieldpercentage ge 90
					">
						<include_interrupt_actions ref="kAAIT_LXL_GetIsStepForwardAllowed" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isStepForwardAllowed: ' + $kAAIT_isStepForwardAllowed" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<do_if value="
							$kAAIT_isStepForwardAllowed and
							this.assignedcontrolled.shieldpercentage ge 90
						">
							<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_lastAttack_time: ' + @$kAAITParam_data.$lastAttack_timeLastSafe" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<do_if value="player.age - @$kAAITParam_data.$lastAttack_timeLastSafe gt 1min">
								<set_value name="$kAAITParam_data.$lastAttack_timeLastSafe" exact="player.age" />
								<do_if value="@$kAAITParam_data.$movedOutOfRangeCount">
									<set_value name="$kAAITParam_data.$movedOutOfRangeCount" exact="[$kAAITParam_data.$movedOutOfRangeCount - 1, 0].max" />
								</do_if>
								<do_elseif value="@$kAAITParam_data.$inchForwardCount">
									<set_value name="$kAAITParam_data.$inchForwardCount" exact="$kAAITParam_data.$inchForwardCount + 1" />
								</do_elseif>
								<do_else>
									<set_value name="$kAAITParam_data.$inchForwardCount" exact="1" />
								</do_else>
								<do_if value="(not @$kAAIT_isIgnoreInchForward) and $kAAIT_distToTarget gt $kAAIT_combatRange">
									<include_interrupt_actions ref="kAAIT_LXL_Order_StepForward" />
								</do_if>
							</do_if>
							<do_if value="(not @$kAAIT_isIgnoreInchForward) and $kAAIT_distToTarget le $kAAIT_combatRange + ($kAAIT_maxCombatRange - $kAAIT_combatRange) * 0.25">
								<include_interrupt_actions ref="kAAIT_AddAttackerToTarget" />
							</do_if>
						</do_if>
					</do_if>
					<do_elseif value="
						(@$kAAITParam_data.$lastAttack_enemy == $kAAIT_defensibleTarget and player.age - @$kAAITParam_data.$lastAttack_time lt 1min)
						or
						this.assignedcontrolled.shieldpercentage lt 90
					">
						<!--
						lastAttack_enemy and lastAttack_time are only set when the event_object_attacked interrupts are triggered
						no need to clean up those vars because lastAttack_time caps this at no older than 1 min.
						-->
						<include_interrupt_actions ref="kAAIT_LXL_GetIsMoveOutOfRangeAllowed" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isMoveOutOfRangeAllowed: ' + $kAAIT_isMoveOutOfRangeAllowed" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_data.$lastAttack_enemy.idcode: ' + @$kAAITParam_data.$lastAttack_enemy.idcode" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<do_if value="
							$kAAIT_isMoveOutOfRangeAllowed and
							(
								(
									@$kAAITParam_data.$lastAttack_enemy.isclass.station and
									this.assignedcontrolled.shieldpercentage lt 90
								) or
								(
									@$kAAITParam_data.$lastAttack_enemy.isclass.ship and
									this.assignedcontrolled.shieldpercentage lt 90 and
									this.assignedcontrolled.shieldpercentage gt 25 and
									this.assignedcontrolled.hullpercentage gt 50
								)
							) and
							(
								@$kAAITParam_data.$lastAttack_enemy.isclass.station or
								(
									@$kAAITParam_data.$lastAttack_enemy.assignedaipilot.$kAAIT_attackers_lxl.count ge 1 or
									@$kAAITParam_data.$lastAttack_enemy.defencenpc.$kAAIT_attackers_lxl.count ge 1
								)
							)
						">
							<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isMoveOutOfRangeAllowed (confirmed): ' + $kAAIT_isMoveOutOfRangeAllowed" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
							<!-- check shield levels here again, in case the interrupt was triggered by another event -->
							<!-- withdraw only against stations or against ships if there are other attackers on the ship -->
							<include_interrupt_actions ref="kAAIT_RemoveAttackerFromTarget" />
							<set_value name="$kAAITParam_data.$inchForwardCount" exact="0" />
							<do_if value="@$kAAITParam_data.$movedOutOfRangeCount">
								<set_value name="$kAAITParam_data.$movedOutOfRangeCount" exact="[$kAAITParam_data.$movedOutOfRangeCount + 1, 5].min" />
							</do_if>
							<do_else>
								<set_value name="$kAAITParam_data.$movedOutOfRangeCount" exact="1" />
							</do_else>
							<include_interrupt_actions ref="kAAIT_LXL_Order_MoveOutOfRange" />
						</do_if>
						<do_else>
							<!-- empty for now, but leave do_else as reminder that we can add other behaviours here. -->
						</do_else>
					</do_elseif>
				</do_if>
			</actions>

			<actions name="kAAIT_LXL_GetIsStepForwardAllowed">
				<set_value name="$kAAIT_isStepForwardAllowed" exact="
					(
						this.assignedcontrolled.isplayerowned and
						(
							$kAAIT_defensibleTarget.isclass.ship and
							global.$kAAIT_Config.$lxl_isStepForward_vShip
						) or
						(
							$kAAIT_defensibleTarget.isclass.station and
							global.$kAAIT_Config.$lxl_isStepForward_vStation
						)
					) or
					(
						(not this.assignedcontrolled.isplayerowned) and
						(
							$kAAIT_defensibleTarget.isclass.ship and
							global.$kAAIT_Config.$lxl_isStepForward_vShip_allFactions
						) or
						(
							$kAAIT_defensibleTarget.isclass.station and
							global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions
						)
					)
				" />
			</actions>

			<actions name="kAAIT_LXL_GetIsMoveOutOfRangeAllowed">
				<set_value name="$kAAIT_isMoveOutOfRangeAllowed" exact="
					(
						(
							this.assignedcontrolled.isplayerowned and
							(
								$kAAIT_defensibleTarget.isclass.ship and
								global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip
							) or
							(
								$kAAIT_defensibleTarget.isclass.station and
								global.$kAAIT_Config.$lxl_isStepForward_vStation
							)
						) or
						(
							(not this.assignedcontrolled.isplayerowned )and
							(
								$kAAIT_defensibleTarget.isclass.ship and
								global.$kAAIT_Config.$lxl_isMoveOutOfRange_vShip_allFactions
							) or
							(
								$kAAIT_defensibleTarget.isclass.station and
								global.$kAAIT_Config.$lxl_isStepForward_vStation_allFactions
							)
						)
					)
				" />
			</actions>

			<!--
				
				
				
				
				`7M'   `MF',pP"Ybd ,pP"Ybd `7MMpMMMb.pMMMb.
				  `VA ,V'  8I   `" 8I   `"   MM    MM    MM
				    XMX    `YMMMa. `YMMMa.   MM    MM    MM
				  ,V' VA.  L.   I8 L.   I8   MM    MM    MM
				.AM.   .MA.M9mmmP' M9mmmP' .JMML  JMML  JMML.
				
				
			 -->
			<actions name="kAAIT_XSSM_AttackOrNot">
				<debug_text text="this.assignedcontrolled.idcode + ' (kAAIT_XSSM_AttackOrNot) global.$kAAIT_Config.$lxl_moveToEngagePosition_vShip: ' + global.$kAAIT_Config.$lxl_moveToEngagePosition_vShip" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<set_value name="$kAAIT_isAvoidOrderGiven" exact="false" />
				<set_value name="$kAAIT_distToTarget" exact="this.assignedcontrolled.distanceto.{$kAAIT_defensibleTarget}" />
				<do_if value="@$kAAIT_defensibleTarget.isoperational">
					<include_interrupt_actions ref="kAAIT_GetIsTargetHighRisk" />
					<do_if value="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m]">
						<do_if value="this.assignedcontrolled.ammostorage.missile.count">
							<!-- nothing here -->
						</do_if>
						<do_elseif value="@$kAAITParam_isAvoidHighRisk != null and (not $kAAITParam_isAvoidHighRisk)">
							<!-- nothing here -->
						</do_elseif>
						<do_elseif value="$kAAIT_isTargetHighRisk_explosion">
							<include_interrupt_actions ref="kAAIT_Order_Flee" />
						</do_elseif>
						<do_elseif value="$kAAIT_isTargetHighRisk">
							<do_if value="$allowothertargets">
								<do_if value="this.assignedcontrolled.sector == $kAAIT_defensibleTarget.sector">
									<include_interrupt_actions ref="kAAIT_Order_AttackOther" />
								</do_if>
							</do_if>
							<do_if value="not @$kAAITParam_data.$orders.$attackOther.exists">
								<do_if value="$kAAIT_distToTarget lt $kAAIT_defensibleTarget.maxcombatrange.all">
									<include_interrupt_actions ref="kAAIT_Order_Flee" />
								</do_if>
								<do_else>
									<include_interrupt_actions ref="kAAIT_Order_Avoid" />
								</do_else>
							</do_if>
						</do_elseif>
						<do_elseif value="$kAAIT_isTargetPotentialHighRisk">
							<!-- still big target but attack is allowed. check if there are other small ships nearby anyway. -->
							<!-- if no new attack order is given, attack will continue on big target -->
							<do_if value="$allowothertargets">
								<do_if value="this.assignedcontrolled.sector == $kAAIT_defensibleTarget.sector">
									<include_interrupt_actions ref="kAAIT_Order_AttackOther" />
								</do_if>
							</do_if>
						</do_elseif>
					</do_if>
					<do_elseif value="
						this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
						(
							(not $kAAIT_defensibleTarget.isclass.ship) or
							global.$kAAIT_Config.$lxl_moveToEngagePosition_vShip
						)
					">
						<do_if value="$kAAIT_isTargetPotentialHighRisk">
							<do_if value="$kAAIT_isTargetHighRisk_explosion">
								<include_interrupt_actions ref="kAAIT_Order_Flee" />
							</do_if>
							<!-- <do_elseif value="
								(
									$kAAIT_defensibleTarget.isclass.station and
									(this.assignedcontrolled.sector and this.assignedcontrolled.sector == $kAAIT_defensibleTarget.sector)
								) or
								(
									$kAAIT_defensibleTarget.isclass.ship and
									$kAAIT_distToTarget lt 100km
								)
							"> -->
							<do_elseif value="this.assignedcontrolled.sector and this.assignedcontrolled.sector == $kAAIT_defensibleTarget.sector">
								<do_if value="@$kAAITParam_data.$defensibleTarget_stopKamikaze != @$kAAIT_defensibleTarget">
									<!-- kAAIT_MoveToEngagePosition_ShipOrTargetChangedZone will set a better engage position when near the target. -->
									<set_value name="$kAAIT_isStopKamikaze" exact="true" />
									<set_value name="$kAAIT_isLXLNewModuleTarget" exact="false" />
									<!-- set this so that behaviour would remember that this defensible has been checked against kamikaze moves -->
									<set_value name="$kAAITParam_data.$defensibleTarget_stopKamikaze" exact="$kAAIT_defensibleTarget" />
									<do_if value="$kAAIT_distToTarget gt $pursuedistance">
										<!-- only actually move to engage position if more than this distance -->
										<!-- i.e. escorts may arrive at their commanders targets less than this distance -->
										<include_interrupt_actions ref="kAAIT_Order_Avoid" />
									</do_if>
									<set_value name="$kAAIT_isStopKamikaze" exact="false" />
								</do_if>
								<do_elseif value="$kAAIT_isLXLNewModuleTarget">
									<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isLXLNewModuleTarget (1): ' + $kAAIT_isLXLNewModuleTarget" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
									<!-- this is an embedded move, so kAAIT_Order_Avoid only gets the space and pos for the move. -->
									<!-- the actual move_to is in move.attack.object.capital. -->
									<include_interrupt_actions ref="kAAIT_Order_Avoid" />
								</do_elseif>
							</do_elseif>
							<do_elseif value="$kAAIT_isLXLNewModuleTarget">
								<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isLXLNewModuleTarget (2): ' + $kAAIT_isLXLNewModuleTarget" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
								<!-- this is an embedded move, so kAAIT_Order_Avoid only gets the space and pos for the move. -->
								<!-- the actual move_to is in move.attack.object.capital. -->
								<include_interrupt_actions ref="kAAIT_Order_Avoid" />
							</do_elseif>
						</do_if>
					</do_elseif>
				</do_if>
			</actions>

			<actions name="kAAIT_GetIsTargetHighRisk">
				<do_if value="@$kAAIT_defensibleTarget.isoperational">
					<set_value name="$kAAIT_isTargetHighRisk" exact="false" />
					<do_if value="this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m]">
						<set_value name="$kAAIT_isTargetPotentialHighRisk" exact="$kAAIT_defensibleTarget.size gt this.assignedcontrolled.size * 1.5" />
						<do_if value="$kAAIT_defensibleTarget.isclass.ship">
							<set_value name="$kAAIT_gunCount" exact="@$kAAIT_defensibleTarget.weapons.operational.count" />
						</do_if>
						<do_else>
							<set_value name="$kAAIT_gunCount" exact="
								@$kAAIT_defensibleTarget.weapons.operational.count + 
								[@$kAAIT_defensibleTarget.weapons.operational.count, @$kAAIT_defensibleTarget.turrets.operational.count].max
							" />
						</do_else>
						<set_value name="$kAAIT_isTargetHighRisk" exact="
							$kAAIT_isTargetPotentialHighRisk and
							(
								(
									this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s] and
									@$kAAIT_defensibleTarget.isclass.ship and
									@$kAAIT_defensibleTargetEntity.$kAAIT_attackers.count le $kAAIT_gunCount * global.$kAAIT_Config.$xss_outnumberVShips / 100.0
								)
								or
								(
									this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s] and
									@$kAAIT_defensibleTarget.isclass.station and
									@$kAAIT_defensibleTargetEntity.$kAAIT_attackers.count le $kAAIT_gunCount * global.$kAAIT_Config.$xss_outnumberVStations / 100.0
								)
								or
								(
									this.assignedcontrolled.isclass.ship_m and
									@$kAAIT_defensibleTarget.isclass.ship and
									@$kAAIT_defensibleTargetEntity.$kAAIT_attackers.count le $kAAIT_gunCount * global.$kAAIT_Config.$m_outnumberVShips / 100.0
								)
								or
								(
									this.assignedcontrolled.isclass.ship_m and
									@$kAAIT_defensibleTarget.isclass.station and
									@$kAAIT_defensibleTargetEntity.$kAAIT_attackers.count le $kAAIT_gunCount * global.$kAAIT_Config.$m_outnumberVStations / 100.0
								)
								or
								$kAAIT_defensibleTarget.hullpercentage lt 1
							) and
							(
								(not this.assignedcontrolled.dps.missiles.all) or
								(not this.assignedcontrolled.ammostorage.missile.count)
							)
						"/>
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isTargetHighRisk: ' + $kAAIT_isTargetHighRisk + ' $kAAIT_defensibleTargetEntity.$kAAIT_attackers.count: ' + @$kAAIT_defensibleTargetEntity.$kAAIT_attackers.count + ' $kAAIT_gunCount: ' + $kAAIT_gunCount" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_defensibleTarget.hullpercentage: ' + @$kAAIT_defensibleTarget.hullpercentage" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					</do_if>
					<do_elseif value="this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl]">
						<set_value name="$kAAIT_isTargetPotentialHighRisk" exact="$kAAIT_defensibleTarget.size gt this.assignedcontrolled.size * 1.5" />
						<set_value name="$kAAIT_isTargetHighRisk" exact="
							$kAAIT_isTargetPotentialHighRisk and
							(
								@$kAAIT_defensibleTarget.isclass.station or
								@$kAAIT_defensibleTarget.dps.all gt this.assignedcontrolled.dps.all * 1.25
							)
						" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isTargetHighRisk: ' + $kAAIT_isTargetHighRisk + ' $kAAIT_defensibleTarget.dps.all: ' + $kAAIT_defensibleTarget.dps.all + ' this.assignedcontrolled.dps.all: ' + this.assignedcontrolled.dps.all" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					</do_elseif>
					<do_if value="@$kAAIT_defensibleTarget.isclass.station and @$kAAIT_defensibleTarget.modules.operational.list.count">
						<set_value name="$kAAIT_isTargetHighRisk_explosion" exact="false" />
						<do_for_each name="$module_inList" in="$kAAIT_defensibleTarget.modules.operational.list">
							<do_if value="@$module_inList.isoperational and $module_inList.hullpercentage lt 1">
								<set_value name="$kAAIT_isTargetHighRisk_explosion" exact="true" />
								<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isTargetHighRisk: ' + $kAAIT_isTargetHighRisk + ' $module_inList.hullpercentage: ' + $module_inList.hullpercentage" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
								<break />
							</do_if>
						</do_for_each>
					</do_if>
					<do_else>
						<set_value name="$kAAIT_isTargetHighRisk_explosion" exact="false" />
					</do_else>
				</do_if>
			</actions>

			<actions name="kAAIT_UpdateOrderLocation">
				<remove_value name="$kAAITParam_data.$orderLocation_pos" />
				<remove_value name="$kAAITParam_data.$orderLocation_space" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_moveToSpace: ' + @$kAAIT_moveToSpace.knownname + ', class: ' + @$kAAIT_moveToSpace.class + ', iscomponent: ' + @$kAAIT_moveToSpace.isclass.component" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_moveToPos: ' + @$kAAIT_moveToPos" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				<do_if value="@$kAAIT_moveToSpace.isclass.component">
					<do_if value="$kAAIT_moveToSpace == this.assignedcontrolled.sector or @$kAAIT_moveToSpace.sector == this.assignedcontrolled.sector">
						<do_if value="not @$kAAIT_moveToPos">
							<create_position name="$kAAIT_moveToPos" x="0" y="0" z="0" />
							<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_moveToPos (default): ' + @$kAAIT_moveToPos" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						</do_if>
						<set_value name="$kAAITParam_data.$orderLocation_space" exact="this.assignedcontrolled.sector" />
						<create_position name="$kAAITParam_data.$orderLocation_pos" space="$kAAITParam_data.$orderLocation_space" object="$kAAIT_moveToSpace" value="$kAAIT_moveToPos" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_data.$orderLocation_space (for ui pointer): ' + @$kAAITParam_data.$orderLocation_space.knownname + ', class: ' + @$kAAITParam_data.$orderLocation_space.class + ', iscomponent: ' + @$kAAITParam_data.$orderLocation_space.isclass.component" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAITParam_data.$orderLocation_pos (for ui pointer): ' + @$orderLocation_pos" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					</do_if>
				</do_if>
			</actions>

			<actions name="kAAIT_GetBigEnemies">
				<do_if value="not @$kAAIT_bigEnemies.count or @$kAAIT_bigEnemies.{1}.bboxdistanceto.{this.assignedcontrolled} gt this.assignedcontrolled.maxradarrange">
					<set_value name="$kAAIT_bigEnemies" exact="[]" />
					<find_gravidar_contact name="$kAAIT_bigEnemies" object="this.assignedcontrolled" class="[class.ship_l, class.ship_xl, class.station]" docked="false" functional="true" maybeattackedby="this.assignedcontrolled" multiple="true" chance="if @this.assignedcontrolled.sector.macro then 100 else 0">
						<match_context macro="this.assignedcontrolled.sector.macro"/>
						<match class="class.buildstorage" negate="true"/>
						<match state="componentstate.wreck" negate="true"/>
					</find_gravidar_contact>
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_bigEnemies: ' + $kAAIT_bigEnemies" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
				</do_if>
			</actions>

			<actions name="kAAIT_GetIsNearBigEnemies">
				<set_value name="$kAAIT_isShipNearBigEnemy" exact="false" />
				<set_value name="$kAAIT_isTargetNearBigEnemy" exact="false" />
				<do_if value="@$kAAIT_bigEnemies.count">
					<do_for_each name="$kAAIT_bigEnemy" in="$kAAIT_bigEnemies">
						<do_if value="
							(
								this.assignedcontrolled.isclass.[class.ship_xs, class.ship_s, class.ship_m] and
								this.race != race.drone
							)
							or
							(
								this.assignedcontrolled.isclass.[class.ship_l, class.ship_xl] and
								(
									$kAAIT_bigEnemy != @$kAAIT_defensibleTarget or
									(not @$kAAIT_defensibleTarget.isoperational)
								)
							)
						">
							<do_if value="$kAAIT_bigEnemy.bboxdistanceto.{this.assignedcontrolled} lt 5km">
								<set_value name="$kAAIT_isShipNearBigEnemy" exact="true" />
							</do_if>
							<do_if value="@$kAAIT_defensibleTarget.isoperational and $kAAIT_bigEnemy.bboxdistanceto.{$kAAIT_defensibleTarget} lt 5km">
								<set_value name="$kAAIT_isTargetNearBigEnemy" exact="true" />
							</do_if>
							<do_if value="$kAAIT_isShipNearBigEnemy or $kAAIT_isTargetNearBigEnemy">
								<break />
							</do_if>
						</do_if>
					</do_for_each>
				</do_if>
				<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_isShipNearBigEnemy: ' + $kAAIT_isShipNearBigEnemy + ' $kAAIT_isTargetNearBigEnemy: ' + $kAAIT_isTargetNearBigEnemy" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
			</actions>

			<actions name="kAAIT_FindSmallerTargetFarFromBigTarget">
				<do_if value="@$kAAIT_defensibleTarget.isoperational">
					<set_value name="$kAAIT_smallerTarget" exact="null" />
					<find_gravidar_contact name="$kAAIT_smallerTarget" object="this.assignedcontrolled" class="[class.ship_xs, class.ship_s, class.ship_m]" docked="false" functional="true" maybeattackedby="this.assignedcontrolled" sortbydistanceto="this.assignedcontrolled" chance="if @this.assignedcontrolled.sector.macro then 100 else 0">
						<match_context macro="this.assignedcontrolled.sector.macro"/>
						<match class="class.buildstorage" negate="true"/>
						<match state="componentstate.wreck" negate="true"/>
						<match_distance min="10km" max="this.assignedcontrolled.maxradarrange" object="$kAAIT_defensibleTarget" />
					</find_gravidar_contact>
					<do_if value="@$kAAIT_smallerTarget.isoperational">
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_smallerTarget: ' + @$kAAIT_smallerTarget.knownname + ' ' + @$kAAIT_smallerTarget.idcode + ' size: ' + @$kAAIT_smallerTarget.size + ' weapons: ' + @$kAAIT_smallerTarget.weapons.operational.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						<do_if value="this.assignedcontrolled.distanceto.{$kAAIT_defensibleTarget} lt this.assignedcontrolled.distanceto.{$kAAIT_smallerTarget}">
							<!-- because this is circling a big target already, any object farther away would put the big target in the way -->
							<set_value name="$kAAIT_smallerTarget" exact="null" />
						</do_if>
						<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_smallerTarget (post-obstruction test): ' + @$kAAIT_smallerTarget.knownname + ' ' + @$kAAIT_smallerTarget.idcode + ' size: ' + @$kAAIT_smallerTarget.size + ' weapons: ' + @$kAAIT_smallerTarget.weapons.operational.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					</do_if>
				</do_if>
			</actions>
			<!--
				
				                                                                                                       ,,
				                                                                                                     `7MM
				                                                                                                       MM
				`7MMpMMMb.pMMMb.  ,pW"Wq.`7M'   `MF'.gP"Ya       ,6"Yb.  `7Mb,od8 ,pW"Wq.`7MM  `7MM  `7MMpMMMb.   ,M""bMM
				  MM    MM    MM 6W'   `Wb VA   ,V ,M'   Yb     8)   MM    MM' "'6W'   `Wb MM    MM    MM    MM ,AP    MM
				  MM    MM    MM 8M     M8  VA ,V  8M""""""      ,pm9MM    MM    8M     M8 MM    MM    MM    MM 8MI    MM
				  MM    MM    MM YA.   ,A9   VVV   YM.    ,     8M   MM    MM    YA.   ,A9 MM    MM    MM    MM `Mb    MM
				.JMML  JMML  JMML.`Ybmd9'     W     `Mbmmd'     `Moo9^Yo..JMML.   `Ybmd9'  `Mbod"YML..JMML  JMML.`Wbmd"MML.
				
				
			 -->
			<actions name="kAAIT_MoveAroundOrNot">
				<!-- from move.attack.object.capital. it looks like it creates a point in front of the ship regardless of the ship's heading -->
				<include_interrupt_actions ref="kAAIT_InitOrders" />
				<do_if value="@$kAAITParam_data">
					<include_interrupt_actions ref="kAAIT_GetBigEnemies" />
					<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_bigEnemies.count (kAAIT_MoveAroundOrNot): ' + $kAAIT_bigEnemies.count" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
					<do_if value="$kAAIT_bigEnemies.count and (not @$kAAITParam_isSkipAvoidance)">
						<!-- note: at this time, both ship and big enemies ARE in the same sector and in nearby zones 'coz the big enemies are from the ship's radar. -->
						<sort_list list="$kAAIT_bigEnemies" sortbyvalue="this.assignedcontrolled.distanceto.{loop.element}" />
						<do_if value="$positionspace and @$position">
							<create_position name="$kAAIT_posAhead" space="this.assignedcontrolled.zone" object="$positionspace" value="$position" />
							<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_posAhead (from $positionspace): ' + $kAAIT_posAhead" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						</do_if>
						<do_else>
							<create_position name="$kAAIT_posAhead" space="this.assignedcontrolled.zone" z="this.assignedcontrolled.maxradarrange * 2" object="this.assignedcontrolled" />
							<debug_text text="this.assignedcontrolled.idcode + ' $kAAIT_posAhead (from ship heading): ' + $kAAIT_posAhead" chance="if @this.assignedcontrolled.idcode == @global.$kAAIT.$debugChance_idCode then @global.$kAAIT_Config.$debugChance else 0" />
						</do_else>
						<set_value name="$kAAIT_distToDest" exact="this.assignedcontrolled.distanceto.{$kAAIT_posAhead}" />
						<create_orientation name="$kAAIT_rotToDest" orientation="look_at" refposition="$kAAIT_posAhead">
							<position object="this.assignedcontrolled" space="this.assignedcontrolled.zone" />
						</create_orientation>
						<set_value name="$kAAIT_yawToDest" exact="($kAAIT_rotToDest.yaw * 180 / pi) + (this.assignedcontrolled.rotation.yaw * 180 / pi)" />
						<do_for_each name="$kAAIT_bigEnemy" in="$kAAIT_bigEnemies">
							<do_if value="
								$kAAIT_bigEnemy != @$kAAITParam_enemyAvoid and
								$kAAIT_bigEnemy.size gt this.assignedcontrolled.size * 1.5
							">
								<create_position name="$kAAIT_posTarget" space="this.assignedcontrolled.zone" object="$kAAIT_bigEnemy" />
								<set_value name="$kAAIT_distToBigEnemy" exact="this.assignedcontrolled.distanceto.{$kAAIT_posTarget}" />
								<create_orientation name="$kAAIT_rotToBigEnemy" orientation="look_at" refposition="$kAAIT_posTarget">
									<position object="this.assignedcontrolled" space="this.assignedcontrolled.zone" />
								</create_orientation>
								<set_value name="$kAAIT_yawToBigEnemy" exact="($kAAIT_rotToBigEnemy.yaw * 180 / pi) + (this.assignedcontrolled.rotation.yaw * 180 / pi)" />
								<set_value name="$kAAAIT_yawDiff" exact="$kAAIT_yawToDest - $kAAIT_yawToBigEnemy" />
								<do_if value="
									$kAAIT_distToBigEnemy lt $kAAIT_distToDest
									and
									$kAAAIT_yawDiff gt -60 and $kAAAIT_yawDiff lt 60
								">
									<set_value name="$kAAIT_posAvoids" exact="[]" />
									<do_if value="false and @$kAAIT_aroundDir">
										<!-- use previous around direction. -->
										<!-- prevents going back on previous around orders. -->
										<set_value name="$kAAIT_dirs" exact="[$kAAIT_aroundDir]" />
									</do_if>
									<do_else>
										<set_value name="$kAAIT_dirs" exact="[-1, 1]" />
									</do_else>
									<do_for_each name="$dir" in="$kAAIT_dirs">
										<create_orientation name="$kAAAIT_rotBigEnemyToShip" orientation="look_at" refposition="this.assignedcontrolled.position">
											<position value="$kAAIT_posTarget" space="this.assignedcontrolled.zone" />
										</create_orientation>
										<set_value name="$kAAIT_yawBigEnemyToShip" exact="$kAAAIT_rotBigEnemyToShip.yaw * 180 / pi" />
										<set_value name="$kAAIT_yawBigEnemyToShip_next" exact="$kAAIT_yawBigEnemyToShip + $dir * 30" />
										<set_value name="$kAAIT_yawBigEnemyToShip_next_rad" exact="$kAAIT_yawBigEnemyToShip_next * pi / 180" />
										<set_value name="$kAAIT_avoidDistance" exact="this.assignedcontrolled.maxradarrange" />
										<do_if value="$kAAIT_distToBigEnemy lt this.assignedcontrolled.maxradarrange * 0.75">
											<set_value name="$kAAIT_avoidDistance" exact="this.assignedcontrolled.maxradarrange * 0.5" />
										</do_if>
										<create_position name="$kAAIT_posAvoid" space="this.assignedcontrolled.zone"
											x="$kAAIT_posTarget.x + $kAAIT_avoidDistance * sin ($kAAIT_yawBigEnemyToShip_next_rad) * cos ($kAAAIT_rotBigEnemyToShip.pitch)"
											y="$kAAIT_posTarget.y + $kAAIT_avoidDistance * sin ($kAAAIT_rotBigEnemyToShip.pitch)"
											z="$kAAIT_posTarget.z + $kAAIT_avoidDistance * cos ($kAAIT_yawBigEnemyToShip_next_rad) * cos ($kAAAIT_rotBigEnemyToShip.pitch)"
										/>
										<append_to_list name="$kAAIT_posAvoids" exact="$kAAIT_posAvoid" />
									</do_for_each>
									<do_if value="$kAAIT_posAvoids.count == 1 or this.assignedcontrolled.distanceto.{$kAAIT_posAvoids.{1}} lt this.assignedcontrolled.distanceto.{$kAAIT_posAvoids.{2}}">
										<set_value name="$kAAIT_posAvoid" exact="$kAAIT_posAvoids.{1}" />
										<set_value name="$kAAIT_aroundDir" exact="$kAAIT_dirs.{1}" />
									</do_if>
									<do_else>
										<set_value name="$kAAIT_posAvoid" exact="$kAAIT_posAvoids.{2}" />
										<set_value name="$kAAIT_aroundDir" exact="$kAAIT_dirs.{2}" />
									</do_else>
									<do_if value="@$kAAITParam_data and (not @$kAAITParam_data.$orders)">
										<set_value name="$kAAITParam_data.$orders" exact="table[]" />
									</do_if>
									<do_if value="@$kAAITParam_data.$orders.$around.exists">
										<cancel_order order="$kAAITParam_data.$orders.$around" />
									</do_if>
									<set_value name="$kAAIT_isAvoidOrderGiven" exact="true" />
									<set_value name="$kAAIT_moveToSpace" exact="this.assignedcontrolled.zone" />
									<set_value name="$kAAIT_moveToPos" exact="$kAAIT_posAvoid" />
									<create_order name="$kAAITParam_data.$orders.$around" object="this.assignedcontrolled" id="'kAAIT_MoveAvoid'" immediate="true">
										<param name="destination" value="$kAAIT_moveToSpace" />
										<param name="position" value="$kAAIT_moveToPos" />
										<param name="noboost" value="true" />
										<param name="disablecollisionavoidance" value="$disablecollisionavoidance" />
										<param name="abortpath" value="$abortpath" />
										<param name="forcesteering" value="true" />
										<param name="endintargetzone" value="false" />
										<param name="recallsubordinates" value="$recallsubordinates" />
										<param name="strictblacklist" value="$strictblacklist" />
										<param name="precise" value="$precise" />
										<param name="waitforatgate" value="$waitforatgate" />
										<param name="uselocalhighways" value="$uselocalhighways" />
										<param name="pursuetargets" value="$pursuetargets" />
										<param name="escort" value="$escort" />
										<param name="pursuedistance" value="$pursuedistance" />
										<param name="changecommandaction" value="$changecommandaction" />
										<param name="targetclasses" value="$targetclasses" />
										<param name="radius" value="$radius" />
										<param name="radiusanchorpos" value="$radiusanchorpos" />
										<param name="radiusanchorspace" value="$radiusanchorspace" />
										<param name="stopondetect" value="$stopondetect" />
										<param name="allowwreck" value="$allowwreck" />
										<param name="kAAITParam_isAutoAdded" value="true" />
										<param name="kAAITParam_data" value="$kAAITParam_data" />
										<param name="kAAITParam_enemyAvoid" value="$kAAIT_bigEnemy" />
										<param name="kAAITParam_aroundDir" value="$kAAIT_aroundDir" />
										<param name="kAAITParam_isAvoidHighRisk" value="if this.assignedcontrolled.$kAAIT_isAvoidHighRisk_user? then this.assignedcontrolled.$kAAIT_isAvoidHighRisk_user else @$kAAITParam_isAvoidHighRisk" />
										<param name="kAAITParam_isStepForwardWithdraw" value="$kAAITParam_isStepForwardWithdraw" />
										<param name="debugchance" value="$debugchance" />
									</create_order>
									<break />
								</do_if>
							</do_if>
						</do_for_each>
					</do_if>
				</do_if>
			</actions>
		</library>
	</interrupts>
</aiscript>
